
10_STRIP_LEDS_DIMMER.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007b2c  080000bc  080000bc  000010bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000640  08007be8  08007be8  00008be8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008228  08008228  0000a014  2**0
                  CONTENTS
  4 .ARM          00000008  08008228  08008228  00009228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008230  08008230  0000a014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008230  08008230  00009230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08008234  08008234  00009234  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000014  20000000  08008238  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000057c  20000018  0800824c  0000a018  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20000594  0800824c  0000a594  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000a014  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001ae5a  00000000  00000000  0000a03c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000038f9  00000000  00000000  00024e96  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000018c0  00000000  00000000  00028790  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001303  00000000  00000000  0002a050  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001f18e  00000000  00000000  0002b353  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001bcaa  00000000  00000000  0004a4e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000c3084  00000000  00000000  0006618b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0012920f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000058a4  00000000  00000000  00129254  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000070  00000000  00000000  0012eaf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	@ (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	@ (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	@ (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000018 	.word	0x20000018
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08007bd0 	.word	0x08007bd0

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	@ (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	@ (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	@ (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			@ (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	2000001c 	.word	0x2000001c
 8000100:	08007bd0 	.word	0x08007bd0

08000104 <strlen>:
 8000104:	2300      	movs	r3, #0
 8000106:	5cc2      	ldrb	r2, [r0, r3]
 8000108:	3301      	adds	r3, #1
 800010a:	2a00      	cmp	r2, #0
 800010c:	d1fb      	bne.n	8000106 <strlen+0x2>
 800010e:	1e58      	subs	r0, r3, #1
 8000110:	4770      	bx	lr
	...

08000114 <__udivsi3>:
 8000114:	2200      	movs	r2, #0
 8000116:	0843      	lsrs	r3, r0, #1
 8000118:	428b      	cmp	r3, r1
 800011a:	d374      	bcc.n	8000206 <__udivsi3+0xf2>
 800011c:	0903      	lsrs	r3, r0, #4
 800011e:	428b      	cmp	r3, r1
 8000120:	d35f      	bcc.n	80001e2 <__udivsi3+0xce>
 8000122:	0a03      	lsrs	r3, r0, #8
 8000124:	428b      	cmp	r3, r1
 8000126:	d344      	bcc.n	80001b2 <__udivsi3+0x9e>
 8000128:	0b03      	lsrs	r3, r0, #12
 800012a:	428b      	cmp	r3, r1
 800012c:	d328      	bcc.n	8000180 <__udivsi3+0x6c>
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d30d      	bcc.n	8000150 <__udivsi3+0x3c>
 8000134:	22ff      	movs	r2, #255	@ 0xff
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	ba12      	rev	r2, r2
 800013a:	0c03      	lsrs	r3, r0, #16
 800013c:	428b      	cmp	r3, r1
 800013e:	d302      	bcc.n	8000146 <__udivsi3+0x32>
 8000140:	1212      	asrs	r2, r2, #8
 8000142:	0209      	lsls	r1, r1, #8
 8000144:	d065      	beq.n	8000212 <__udivsi3+0xfe>
 8000146:	0b03      	lsrs	r3, r0, #12
 8000148:	428b      	cmp	r3, r1
 800014a:	d319      	bcc.n	8000180 <__udivsi3+0x6c>
 800014c:	e000      	b.n	8000150 <__udivsi3+0x3c>
 800014e:	0a09      	lsrs	r1, r1, #8
 8000150:	0bc3      	lsrs	r3, r0, #15
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x46>
 8000156:	03cb      	lsls	r3, r1, #15
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b83      	lsrs	r3, r0, #14
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x52>
 8000162:	038b      	lsls	r3, r1, #14
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b43      	lsrs	r3, r0, #13
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x5e>
 800016e:	034b      	lsls	r3, r1, #13
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0b03      	lsrs	r3, r0, #12
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x6a>
 800017a:	030b      	lsls	r3, r1, #12
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0ac3      	lsrs	r3, r0, #11
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x76>
 8000186:	02cb      	lsls	r3, r1, #11
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a83      	lsrs	r3, r0, #10
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x82>
 8000192:	028b      	lsls	r3, r1, #10
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a43      	lsrs	r3, r0, #9
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x8e>
 800019e:	024b      	lsls	r3, r1, #9
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0a03      	lsrs	r3, r0, #8
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x9a>
 80001aa:	020b      	lsls	r3, r1, #8
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	d2cd      	bcs.n	800014e <__udivsi3+0x3a>
 80001b2:	09c3      	lsrs	r3, r0, #7
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xa8>
 80001b8:	01cb      	lsls	r3, r1, #7
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0983      	lsrs	r3, r0, #6
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xb4>
 80001c4:	018b      	lsls	r3, r1, #6
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0943      	lsrs	r3, r0, #5
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xc0>
 80001d0:	014b      	lsls	r3, r1, #5
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0903      	lsrs	r3, r0, #4
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xcc>
 80001dc:	010b      	lsls	r3, r1, #4
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	08c3      	lsrs	r3, r0, #3
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xd8>
 80001e8:	00cb      	lsls	r3, r1, #3
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0883      	lsrs	r3, r0, #2
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xe4>
 80001f4:	008b      	lsls	r3, r1, #2
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	0843      	lsrs	r3, r0, #1
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xf0>
 8000200:	004b      	lsls	r3, r1, #1
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	1a41      	subs	r1, r0, r1
 8000208:	d200      	bcs.n	800020c <__udivsi3+0xf8>
 800020a:	4601      	mov	r1, r0
 800020c:	4152      	adcs	r2, r2
 800020e:	4610      	mov	r0, r2
 8000210:	4770      	bx	lr
 8000212:	e7ff      	b.n	8000214 <__udivsi3+0x100>
 8000214:	b501      	push	{r0, lr}
 8000216:	2000      	movs	r0, #0
 8000218:	f000 f8f0 	bl	80003fc <__aeabi_idiv0>
 800021c:	bd02      	pop	{r1, pc}
 800021e:	46c0      	nop			@ (mov r8, r8)

08000220 <__aeabi_uidivmod>:
 8000220:	2900      	cmp	r1, #0
 8000222:	d0f7      	beq.n	8000214 <__udivsi3+0x100>
 8000224:	e776      	b.n	8000114 <__udivsi3>
 8000226:	4770      	bx	lr

08000228 <__divsi3>:
 8000228:	4603      	mov	r3, r0
 800022a:	430b      	orrs	r3, r1
 800022c:	d47f      	bmi.n	800032e <__divsi3+0x106>
 800022e:	2200      	movs	r2, #0
 8000230:	0843      	lsrs	r3, r0, #1
 8000232:	428b      	cmp	r3, r1
 8000234:	d374      	bcc.n	8000320 <__divsi3+0xf8>
 8000236:	0903      	lsrs	r3, r0, #4
 8000238:	428b      	cmp	r3, r1
 800023a:	d35f      	bcc.n	80002fc <__divsi3+0xd4>
 800023c:	0a03      	lsrs	r3, r0, #8
 800023e:	428b      	cmp	r3, r1
 8000240:	d344      	bcc.n	80002cc <__divsi3+0xa4>
 8000242:	0b03      	lsrs	r3, r0, #12
 8000244:	428b      	cmp	r3, r1
 8000246:	d328      	bcc.n	800029a <__divsi3+0x72>
 8000248:	0c03      	lsrs	r3, r0, #16
 800024a:	428b      	cmp	r3, r1
 800024c:	d30d      	bcc.n	800026a <__divsi3+0x42>
 800024e:	22ff      	movs	r2, #255	@ 0xff
 8000250:	0209      	lsls	r1, r1, #8
 8000252:	ba12      	rev	r2, r2
 8000254:	0c03      	lsrs	r3, r0, #16
 8000256:	428b      	cmp	r3, r1
 8000258:	d302      	bcc.n	8000260 <__divsi3+0x38>
 800025a:	1212      	asrs	r2, r2, #8
 800025c:	0209      	lsls	r1, r1, #8
 800025e:	d065      	beq.n	800032c <__divsi3+0x104>
 8000260:	0b03      	lsrs	r3, r0, #12
 8000262:	428b      	cmp	r3, r1
 8000264:	d319      	bcc.n	800029a <__divsi3+0x72>
 8000266:	e000      	b.n	800026a <__divsi3+0x42>
 8000268:	0a09      	lsrs	r1, r1, #8
 800026a:	0bc3      	lsrs	r3, r0, #15
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__divsi3+0x4c>
 8000270:	03cb      	lsls	r3, r1, #15
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0b83      	lsrs	r3, r0, #14
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__divsi3+0x58>
 800027c:	038b      	lsls	r3, r1, #14
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0b43      	lsrs	r3, r0, #13
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x64>
 8000288:	034b      	lsls	r3, r1, #13
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0b03      	lsrs	r3, r0, #12
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x70>
 8000294:	030b      	lsls	r3, r1, #12
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0ac3      	lsrs	r3, r0, #11
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x7c>
 80002a0:	02cb      	lsls	r3, r1, #11
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0a83      	lsrs	r3, r0, #10
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x88>
 80002ac:	028b      	lsls	r3, r1, #10
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0a43      	lsrs	r3, r0, #9
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0x94>
 80002b8:	024b      	lsls	r3, r1, #9
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	0a03      	lsrs	r3, r0, #8
 80002c0:	428b      	cmp	r3, r1
 80002c2:	d301      	bcc.n	80002c8 <__divsi3+0xa0>
 80002c4:	020b      	lsls	r3, r1, #8
 80002c6:	1ac0      	subs	r0, r0, r3
 80002c8:	4152      	adcs	r2, r2
 80002ca:	d2cd      	bcs.n	8000268 <__divsi3+0x40>
 80002cc:	09c3      	lsrs	r3, r0, #7
 80002ce:	428b      	cmp	r3, r1
 80002d0:	d301      	bcc.n	80002d6 <__divsi3+0xae>
 80002d2:	01cb      	lsls	r3, r1, #7
 80002d4:	1ac0      	subs	r0, r0, r3
 80002d6:	4152      	adcs	r2, r2
 80002d8:	0983      	lsrs	r3, r0, #6
 80002da:	428b      	cmp	r3, r1
 80002dc:	d301      	bcc.n	80002e2 <__divsi3+0xba>
 80002de:	018b      	lsls	r3, r1, #6
 80002e0:	1ac0      	subs	r0, r0, r3
 80002e2:	4152      	adcs	r2, r2
 80002e4:	0943      	lsrs	r3, r0, #5
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xc6>
 80002ea:	014b      	lsls	r3, r1, #5
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	0903      	lsrs	r3, r0, #4
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xd2>
 80002f6:	010b      	lsls	r3, r1, #4
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	08c3      	lsrs	r3, r0, #3
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xde>
 8000302:	00cb      	lsls	r3, r1, #3
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0883      	lsrs	r3, r0, #2
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xea>
 800030e:	008b      	lsls	r3, r1, #2
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	0843      	lsrs	r3, r0, #1
 8000316:	428b      	cmp	r3, r1
 8000318:	d301      	bcc.n	800031e <__divsi3+0xf6>
 800031a:	004b      	lsls	r3, r1, #1
 800031c:	1ac0      	subs	r0, r0, r3
 800031e:	4152      	adcs	r2, r2
 8000320:	1a41      	subs	r1, r0, r1
 8000322:	d200      	bcs.n	8000326 <__divsi3+0xfe>
 8000324:	4601      	mov	r1, r0
 8000326:	4152      	adcs	r2, r2
 8000328:	4610      	mov	r0, r2
 800032a:	4770      	bx	lr
 800032c:	e05d      	b.n	80003ea <__divsi3+0x1c2>
 800032e:	0fca      	lsrs	r2, r1, #31
 8000330:	d000      	beq.n	8000334 <__divsi3+0x10c>
 8000332:	4249      	negs	r1, r1
 8000334:	1003      	asrs	r3, r0, #32
 8000336:	d300      	bcc.n	800033a <__divsi3+0x112>
 8000338:	4240      	negs	r0, r0
 800033a:	4053      	eors	r3, r2
 800033c:	2200      	movs	r2, #0
 800033e:	469c      	mov	ip, r3
 8000340:	0903      	lsrs	r3, r0, #4
 8000342:	428b      	cmp	r3, r1
 8000344:	d32d      	bcc.n	80003a2 <__divsi3+0x17a>
 8000346:	0a03      	lsrs	r3, r0, #8
 8000348:	428b      	cmp	r3, r1
 800034a:	d312      	bcc.n	8000372 <__divsi3+0x14a>
 800034c:	22fc      	movs	r2, #252	@ 0xfc
 800034e:	0189      	lsls	r1, r1, #6
 8000350:	ba12      	rev	r2, r2
 8000352:	0a03      	lsrs	r3, r0, #8
 8000354:	428b      	cmp	r3, r1
 8000356:	d30c      	bcc.n	8000372 <__divsi3+0x14a>
 8000358:	0189      	lsls	r1, r1, #6
 800035a:	1192      	asrs	r2, r2, #6
 800035c:	428b      	cmp	r3, r1
 800035e:	d308      	bcc.n	8000372 <__divsi3+0x14a>
 8000360:	0189      	lsls	r1, r1, #6
 8000362:	1192      	asrs	r2, r2, #6
 8000364:	428b      	cmp	r3, r1
 8000366:	d304      	bcc.n	8000372 <__divsi3+0x14a>
 8000368:	0189      	lsls	r1, r1, #6
 800036a:	d03a      	beq.n	80003e2 <__divsi3+0x1ba>
 800036c:	1192      	asrs	r2, r2, #6
 800036e:	e000      	b.n	8000372 <__divsi3+0x14a>
 8000370:	0989      	lsrs	r1, r1, #6
 8000372:	09c3      	lsrs	r3, r0, #7
 8000374:	428b      	cmp	r3, r1
 8000376:	d301      	bcc.n	800037c <__divsi3+0x154>
 8000378:	01cb      	lsls	r3, r1, #7
 800037a:	1ac0      	subs	r0, r0, r3
 800037c:	4152      	adcs	r2, r2
 800037e:	0983      	lsrs	r3, r0, #6
 8000380:	428b      	cmp	r3, r1
 8000382:	d301      	bcc.n	8000388 <__divsi3+0x160>
 8000384:	018b      	lsls	r3, r1, #6
 8000386:	1ac0      	subs	r0, r0, r3
 8000388:	4152      	adcs	r2, r2
 800038a:	0943      	lsrs	r3, r0, #5
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x16c>
 8000390:	014b      	lsls	r3, r1, #5
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	0903      	lsrs	r3, r0, #4
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x178>
 800039c:	010b      	lsls	r3, r1, #4
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	08c3      	lsrs	r3, r0, #3
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x184>
 80003a8:	00cb      	lsls	r3, r1, #3
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	0883      	lsrs	r3, r0, #2
 80003b0:	428b      	cmp	r3, r1
 80003b2:	d301      	bcc.n	80003b8 <__divsi3+0x190>
 80003b4:	008b      	lsls	r3, r1, #2
 80003b6:	1ac0      	subs	r0, r0, r3
 80003b8:	4152      	adcs	r2, r2
 80003ba:	d2d9      	bcs.n	8000370 <__divsi3+0x148>
 80003bc:	0843      	lsrs	r3, r0, #1
 80003be:	428b      	cmp	r3, r1
 80003c0:	d301      	bcc.n	80003c6 <__divsi3+0x19e>
 80003c2:	004b      	lsls	r3, r1, #1
 80003c4:	1ac0      	subs	r0, r0, r3
 80003c6:	4152      	adcs	r2, r2
 80003c8:	1a41      	subs	r1, r0, r1
 80003ca:	d200      	bcs.n	80003ce <__divsi3+0x1a6>
 80003cc:	4601      	mov	r1, r0
 80003ce:	4663      	mov	r3, ip
 80003d0:	4152      	adcs	r2, r2
 80003d2:	105b      	asrs	r3, r3, #1
 80003d4:	4610      	mov	r0, r2
 80003d6:	d301      	bcc.n	80003dc <__divsi3+0x1b4>
 80003d8:	4240      	negs	r0, r0
 80003da:	2b00      	cmp	r3, #0
 80003dc:	d500      	bpl.n	80003e0 <__divsi3+0x1b8>
 80003de:	4249      	negs	r1, r1
 80003e0:	4770      	bx	lr
 80003e2:	4663      	mov	r3, ip
 80003e4:	105b      	asrs	r3, r3, #1
 80003e6:	d300      	bcc.n	80003ea <__divsi3+0x1c2>
 80003e8:	4240      	negs	r0, r0
 80003ea:	b501      	push	{r0, lr}
 80003ec:	2000      	movs	r0, #0
 80003ee:	f000 f805 	bl	80003fc <__aeabi_idiv0>
 80003f2:	bd02      	pop	{r1, pc}

080003f4 <__aeabi_idivmod>:
 80003f4:	2900      	cmp	r1, #0
 80003f6:	d0f8      	beq.n	80003ea <__divsi3+0x1c2>
 80003f8:	e716      	b.n	8000228 <__divsi3>
 80003fa:	4770      	bx	lr

080003fc <__aeabi_idiv0>:
 80003fc:	4770      	bx	lr
 80003fe:	46c0      	nop			@ (mov r8, r8)

08000400 <__aeabi_uldivmod>:
 8000400:	2b00      	cmp	r3, #0
 8000402:	d111      	bne.n	8000428 <__aeabi_uldivmod+0x28>
 8000404:	2a00      	cmp	r2, #0
 8000406:	d10f      	bne.n	8000428 <__aeabi_uldivmod+0x28>
 8000408:	2900      	cmp	r1, #0
 800040a:	d100      	bne.n	800040e <__aeabi_uldivmod+0xe>
 800040c:	2800      	cmp	r0, #0
 800040e:	d002      	beq.n	8000416 <__aeabi_uldivmod+0x16>
 8000410:	2100      	movs	r1, #0
 8000412:	43c9      	mvns	r1, r1
 8000414:	0008      	movs	r0, r1
 8000416:	b407      	push	{r0, r1, r2}
 8000418:	4802      	ldr	r0, [pc, #8]	@ (8000424 <__aeabi_uldivmod+0x24>)
 800041a:	a102      	add	r1, pc, #8	@ (adr r1, 8000424 <__aeabi_uldivmod+0x24>)
 800041c:	1840      	adds	r0, r0, r1
 800041e:	9002      	str	r0, [sp, #8]
 8000420:	bd03      	pop	{r0, r1, pc}
 8000422:	46c0      	nop			@ (mov r8, r8)
 8000424:	ffffffd9 	.word	0xffffffd9
 8000428:	b403      	push	{r0, r1}
 800042a:	4668      	mov	r0, sp
 800042c:	b501      	push	{r0, lr}
 800042e:	9802      	ldr	r0, [sp, #8]
 8000430:	f000 f806 	bl	8000440 <__udivmoddi4>
 8000434:	9b01      	ldr	r3, [sp, #4]
 8000436:	469e      	mov	lr, r3
 8000438:	b002      	add	sp, #8
 800043a:	bc0c      	pop	{r2, r3}
 800043c:	4770      	bx	lr
 800043e:	46c0      	nop			@ (mov r8, r8)

08000440 <__udivmoddi4>:
 8000440:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000442:	4657      	mov	r7, sl
 8000444:	464e      	mov	r6, r9
 8000446:	4645      	mov	r5, r8
 8000448:	46de      	mov	lr, fp
 800044a:	b5e0      	push	{r5, r6, r7, lr}
 800044c:	0004      	movs	r4, r0
 800044e:	000d      	movs	r5, r1
 8000450:	4692      	mov	sl, r2
 8000452:	4699      	mov	r9, r3
 8000454:	b083      	sub	sp, #12
 8000456:	428b      	cmp	r3, r1
 8000458:	d830      	bhi.n	80004bc <__udivmoddi4+0x7c>
 800045a:	d02d      	beq.n	80004b8 <__udivmoddi4+0x78>
 800045c:	4649      	mov	r1, r9
 800045e:	4650      	mov	r0, sl
 8000460:	f000 fb78 	bl	8000b54 <__clzdi2>
 8000464:	0029      	movs	r1, r5
 8000466:	0006      	movs	r6, r0
 8000468:	0020      	movs	r0, r4
 800046a:	f000 fb73 	bl	8000b54 <__clzdi2>
 800046e:	1a33      	subs	r3, r6, r0
 8000470:	4698      	mov	r8, r3
 8000472:	3b20      	subs	r3, #32
 8000474:	d434      	bmi.n	80004e0 <__udivmoddi4+0xa0>
 8000476:	469b      	mov	fp, r3
 8000478:	4653      	mov	r3, sl
 800047a:	465a      	mov	r2, fp
 800047c:	4093      	lsls	r3, r2
 800047e:	4642      	mov	r2, r8
 8000480:	001f      	movs	r7, r3
 8000482:	4653      	mov	r3, sl
 8000484:	4093      	lsls	r3, r2
 8000486:	001e      	movs	r6, r3
 8000488:	42af      	cmp	r7, r5
 800048a:	d83b      	bhi.n	8000504 <__udivmoddi4+0xc4>
 800048c:	42af      	cmp	r7, r5
 800048e:	d100      	bne.n	8000492 <__udivmoddi4+0x52>
 8000490:	e079      	b.n	8000586 <__udivmoddi4+0x146>
 8000492:	465b      	mov	r3, fp
 8000494:	1ba4      	subs	r4, r4, r6
 8000496:	41bd      	sbcs	r5, r7
 8000498:	2b00      	cmp	r3, #0
 800049a:	da00      	bge.n	800049e <__udivmoddi4+0x5e>
 800049c:	e076      	b.n	800058c <__udivmoddi4+0x14c>
 800049e:	2200      	movs	r2, #0
 80004a0:	2300      	movs	r3, #0
 80004a2:	9200      	str	r2, [sp, #0]
 80004a4:	9301      	str	r3, [sp, #4]
 80004a6:	2301      	movs	r3, #1
 80004a8:	465a      	mov	r2, fp
 80004aa:	4093      	lsls	r3, r2
 80004ac:	9301      	str	r3, [sp, #4]
 80004ae:	2301      	movs	r3, #1
 80004b0:	4642      	mov	r2, r8
 80004b2:	4093      	lsls	r3, r2
 80004b4:	9300      	str	r3, [sp, #0]
 80004b6:	e029      	b.n	800050c <__udivmoddi4+0xcc>
 80004b8:	4282      	cmp	r2, r0
 80004ba:	d9cf      	bls.n	800045c <__udivmoddi4+0x1c>
 80004bc:	2200      	movs	r2, #0
 80004be:	2300      	movs	r3, #0
 80004c0:	9200      	str	r2, [sp, #0]
 80004c2:	9301      	str	r3, [sp, #4]
 80004c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80004c6:	2b00      	cmp	r3, #0
 80004c8:	d001      	beq.n	80004ce <__udivmoddi4+0x8e>
 80004ca:	601c      	str	r4, [r3, #0]
 80004cc:	605d      	str	r5, [r3, #4]
 80004ce:	9800      	ldr	r0, [sp, #0]
 80004d0:	9901      	ldr	r1, [sp, #4]
 80004d2:	b003      	add	sp, #12
 80004d4:	bcf0      	pop	{r4, r5, r6, r7}
 80004d6:	46bb      	mov	fp, r7
 80004d8:	46b2      	mov	sl, r6
 80004da:	46a9      	mov	r9, r5
 80004dc:	46a0      	mov	r8, r4
 80004de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80004e0:	4642      	mov	r2, r8
 80004e2:	469b      	mov	fp, r3
 80004e4:	2320      	movs	r3, #32
 80004e6:	1a9b      	subs	r3, r3, r2
 80004e8:	4652      	mov	r2, sl
 80004ea:	40da      	lsrs	r2, r3
 80004ec:	4641      	mov	r1, r8
 80004ee:	0013      	movs	r3, r2
 80004f0:	464a      	mov	r2, r9
 80004f2:	408a      	lsls	r2, r1
 80004f4:	0017      	movs	r7, r2
 80004f6:	4642      	mov	r2, r8
 80004f8:	431f      	orrs	r7, r3
 80004fa:	4653      	mov	r3, sl
 80004fc:	4093      	lsls	r3, r2
 80004fe:	001e      	movs	r6, r3
 8000500:	42af      	cmp	r7, r5
 8000502:	d9c3      	bls.n	800048c <__udivmoddi4+0x4c>
 8000504:	2200      	movs	r2, #0
 8000506:	2300      	movs	r3, #0
 8000508:	9200      	str	r2, [sp, #0]
 800050a:	9301      	str	r3, [sp, #4]
 800050c:	4643      	mov	r3, r8
 800050e:	2b00      	cmp	r3, #0
 8000510:	d0d8      	beq.n	80004c4 <__udivmoddi4+0x84>
 8000512:	07fb      	lsls	r3, r7, #31
 8000514:	0872      	lsrs	r2, r6, #1
 8000516:	431a      	orrs	r2, r3
 8000518:	4646      	mov	r6, r8
 800051a:	087b      	lsrs	r3, r7, #1
 800051c:	e00e      	b.n	800053c <__udivmoddi4+0xfc>
 800051e:	42ab      	cmp	r3, r5
 8000520:	d101      	bne.n	8000526 <__udivmoddi4+0xe6>
 8000522:	42a2      	cmp	r2, r4
 8000524:	d80c      	bhi.n	8000540 <__udivmoddi4+0x100>
 8000526:	1aa4      	subs	r4, r4, r2
 8000528:	419d      	sbcs	r5, r3
 800052a:	2001      	movs	r0, #1
 800052c:	1924      	adds	r4, r4, r4
 800052e:	416d      	adcs	r5, r5
 8000530:	2100      	movs	r1, #0
 8000532:	3e01      	subs	r6, #1
 8000534:	1824      	adds	r4, r4, r0
 8000536:	414d      	adcs	r5, r1
 8000538:	2e00      	cmp	r6, #0
 800053a:	d006      	beq.n	800054a <__udivmoddi4+0x10a>
 800053c:	42ab      	cmp	r3, r5
 800053e:	d9ee      	bls.n	800051e <__udivmoddi4+0xde>
 8000540:	3e01      	subs	r6, #1
 8000542:	1924      	adds	r4, r4, r4
 8000544:	416d      	adcs	r5, r5
 8000546:	2e00      	cmp	r6, #0
 8000548:	d1f8      	bne.n	800053c <__udivmoddi4+0xfc>
 800054a:	9800      	ldr	r0, [sp, #0]
 800054c:	9901      	ldr	r1, [sp, #4]
 800054e:	465b      	mov	r3, fp
 8000550:	1900      	adds	r0, r0, r4
 8000552:	4169      	adcs	r1, r5
 8000554:	2b00      	cmp	r3, #0
 8000556:	db24      	blt.n	80005a2 <__udivmoddi4+0x162>
 8000558:	002b      	movs	r3, r5
 800055a:	465a      	mov	r2, fp
 800055c:	4644      	mov	r4, r8
 800055e:	40d3      	lsrs	r3, r2
 8000560:	002a      	movs	r2, r5
 8000562:	40e2      	lsrs	r2, r4
 8000564:	001c      	movs	r4, r3
 8000566:	465b      	mov	r3, fp
 8000568:	0015      	movs	r5, r2
 800056a:	2b00      	cmp	r3, #0
 800056c:	db2a      	blt.n	80005c4 <__udivmoddi4+0x184>
 800056e:	0026      	movs	r6, r4
 8000570:	409e      	lsls	r6, r3
 8000572:	0033      	movs	r3, r6
 8000574:	0026      	movs	r6, r4
 8000576:	4647      	mov	r7, r8
 8000578:	40be      	lsls	r6, r7
 800057a:	0032      	movs	r2, r6
 800057c:	1a80      	subs	r0, r0, r2
 800057e:	4199      	sbcs	r1, r3
 8000580:	9000      	str	r0, [sp, #0]
 8000582:	9101      	str	r1, [sp, #4]
 8000584:	e79e      	b.n	80004c4 <__udivmoddi4+0x84>
 8000586:	42a3      	cmp	r3, r4
 8000588:	d8bc      	bhi.n	8000504 <__udivmoddi4+0xc4>
 800058a:	e782      	b.n	8000492 <__udivmoddi4+0x52>
 800058c:	4642      	mov	r2, r8
 800058e:	2320      	movs	r3, #32
 8000590:	2100      	movs	r1, #0
 8000592:	1a9b      	subs	r3, r3, r2
 8000594:	2200      	movs	r2, #0
 8000596:	9100      	str	r1, [sp, #0]
 8000598:	9201      	str	r2, [sp, #4]
 800059a:	2201      	movs	r2, #1
 800059c:	40da      	lsrs	r2, r3
 800059e:	9201      	str	r2, [sp, #4]
 80005a0:	e785      	b.n	80004ae <__udivmoddi4+0x6e>
 80005a2:	4642      	mov	r2, r8
 80005a4:	2320      	movs	r3, #32
 80005a6:	1a9b      	subs	r3, r3, r2
 80005a8:	002a      	movs	r2, r5
 80005aa:	4646      	mov	r6, r8
 80005ac:	409a      	lsls	r2, r3
 80005ae:	0023      	movs	r3, r4
 80005b0:	40f3      	lsrs	r3, r6
 80005b2:	4644      	mov	r4, r8
 80005b4:	4313      	orrs	r3, r2
 80005b6:	002a      	movs	r2, r5
 80005b8:	40e2      	lsrs	r2, r4
 80005ba:	001c      	movs	r4, r3
 80005bc:	465b      	mov	r3, fp
 80005be:	0015      	movs	r5, r2
 80005c0:	2b00      	cmp	r3, #0
 80005c2:	dad4      	bge.n	800056e <__udivmoddi4+0x12e>
 80005c4:	4642      	mov	r2, r8
 80005c6:	002f      	movs	r7, r5
 80005c8:	2320      	movs	r3, #32
 80005ca:	0026      	movs	r6, r4
 80005cc:	4097      	lsls	r7, r2
 80005ce:	1a9b      	subs	r3, r3, r2
 80005d0:	40de      	lsrs	r6, r3
 80005d2:	003b      	movs	r3, r7
 80005d4:	4333      	orrs	r3, r6
 80005d6:	e7cd      	b.n	8000574 <__udivmoddi4+0x134>

080005d8 <__aeabi_fdiv>:
 80005d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80005da:	464f      	mov	r7, r9
 80005dc:	4646      	mov	r6, r8
 80005de:	46d6      	mov	lr, sl
 80005e0:	0244      	lsls	r4, r0, #9
 80005e2:	b5c0      	push	{r6, r7, lr}
 80005e4:	0047      	lsls	r7, r0, #1
 80005e6:	1c0e      	adds	r6, r1, #0
 80005e8:	0a64      	lsrs	r4, r4, #9
 80005ea:	0e3f      	lsrs	r7, r7, #24
 80005ec:	0fc5      	lsrs	r5, r0, #31
 80005ee:	2f00      	cmp	r7, #0
 80005f0:	d03c      	beq.n	800066c <__aeabi_fdiv+0x94>
 80005f2:	2fff      	cmp	r7, #255	@ 0xff
 80005f4:	d042      	beq.n	800067c <__aeabi_fdiv+0xa4>
 80005f6:	2300      	movs	r3, #0
 80005f8:	2280      	movs	r2, #128	@ 0x80
 80005fa:	4699      	mov	r9, r3
 80005fc:	469a      	mov	sl, r3
 80005fe:	00e4      	lsls	r4, r4, #3
 8000600:	04d2      	lsls	r2, r2, #19
 8000602:	4314      	orrs	r4, r2
 8000604:	3f7f      	subs	r7, #127	@ 0x7f
 8000606:	0273      	lsls	r3, r6, #9
 8000608:	0a5b      	lsrs	r3, r3, #9
 800060a:	4698      	mov	r8, r3
 800060c:	0073      	lsls	r3, r6, #1
 800060e:	0e1b      	lsrs	r3, r3, #24
 8000610:	0ff6      	lsrs	r6, r6, #31
 8000612:	2b00      	cmp	r3, #0
 8000614:	d01b      	beq.n	800064e <__aeabi_fdiv+0x76>
 8000616:	2bff      	cmp	r3, #255	@ 0xff
 8000618:	d013      	beq.n	8000642 <__aeabi_fdiv+0x6a>
 800061a:	4642      	mov	r2, r8
 800061c:	2180      	movs	r1, #128	@ 0x80
 800061e:	00d2      	lsls	r2, r2, #3
 8000620:	04c9      	lsls	r1, r1, #19
 8000622:	4311      	orrs	r1, r2
 8000624:	4688      	mov	r8, r1
 8000626:	2000      	movs	r0, #0
 8000628:	3b7f      	subs	r3, #127	@ 0x7f
 800062a:	0029      	movs	r1, r5
 800062c:	1aff      	subs	r7, r7, r3
 800062e:	464b      	mov	r3, r9
 8000630:	4071      	eors	r1, r6
 8000632:	b2c9      	uxtb	r1, r1
 8000634:	2b0f      	cmp	r3, #15
 8000636:	d900      	bls.n	800063a <__aeabi_fdiv+0x62>
 8000638:	e0b5      	b.n	80007a6 <__aeabi_fdiv+0x1ce>
 800063a:	4a74      	ldr	r2, [pc, #464]	@ (800080c <__aeabi_fdiv+0x234>)
 800063c:	009b      	lsls	r3, r3, #2
 800063e:	58d3      	ldr	r3, [r2, r3]
 8000640:	469f      	mov	pc, r3
 8000642:	4643      	mov	r3, r8
 8000644:	2b00      	cmp	r3, #0
 8000646:	d13f      	bne.n	80006c8 <__aeabi_fdiv+0xf0>
 8000648:	3fff      	subs	r7, #255	@ 0xff
 800064a:	3302      	adds	r3, #2
 800064c:	e003      	b.n	8000656 <__aeabi_fdiv+0x7e>
 800064e:	4643      	mov	r3, r8
 8000650:	2b00      	cmp	r3, #0
 8000652:	d12d      	bne.n	80006b0 <__aeabi_fdiv+0xd8>
 8000654:	2301      	movs	r3, #1
 8000656:	0029      	movs	r1, r5
 8000658:	464a      	mov	r2, r9
 800065a:	4071      	eors	r1, r6
 800065c:	b2c9      	uxtb	r1, r1
 800065e:	431a      	orrs	r2, r3
 8000660:	2a0e      	cmp	r2, #14
 8000662:	d838      	bhi.n	80006d6 <__aeabi_fdiv+0xfe>
 8000664:	486a      	ldr	r0, [pc, #424]	@ (8000810 <__aeabi_fdiv+0x238>)
 8000666:	0092      	lsls	r2, r2, #2
 8000668:	5882      	ldr	r2, [r0, r2]
 800066a:	4697      	mov	pc, r2
 800066c:	2c00      	cmp	r4, #0
 800066e:	d113      	bne.n	8000698 <__aeabi_fdiv+0xc0>
 8000670:	2304      	movs	r3, #4
 8000672:	4699      	mov	r9, r3
 8000674:	3b03      	subs	r3, #3
 8000676:	2700      	movs	r7, #0
 8000678:	469a      	mov	sl, r3
 800067a:	e7c4      	b.n	8000606 <__aeabi_fdiv+0x2e>
 800067c:	2c00      	cmp	r4, #0
 800067e:	d105      	bne.n	800068c <__aeabi_fdiv+0xb4>
 8000680:	2308      	movs	r3, #8
 8000682:	4699      	mov	r9, r3
 8000684:	3b06      	subs	r3, #6
 8000686:	27ff      	movs	r7, #255	@ 0xff
 8000688:	469a      	mov	sl, r3
 800068a:	e7bc      	b.n	8000606 <__aeabi_fdiv+0x2e>
 800068c:	230c      	movs	r3, #12
 800068e:	4699      	mov	r9, r3
 8000690:	3b09      	subs	r3, #9
 8000692:	27ff      	movs	r7, #255	@ 0xff
 8000694:	469a      	mov	sl, r3
 8000696:	e7b6      	b.n	8000606 <__aeabi_fdiv+0x2e>
 8000698:	0020      	movs	r0, r4
 800069a:	f000 fa3d 	bl	8000b18 <__clzsi2>
 800069e:	2776      	movs	r7, #118	@ 0x76
 80006a0:	1f43      	subs	r3, r0, #5
 80006a2:	409c      	lsls	r4, r3
 80006a4:	2300      	movs	r3, #0
 80006a6:	427f      	negs	r7, r7
 80006a8:	4699      	mov	r9, r3
 80006aa:	469a      	mov	sl, r3
 80006ac:	1a3f      	subs	r7, r7, r0
 80006ae:	e7aa      	b.n	8000606 <__aeabi_fdiv+0x2e>
 80006b0:	4640      	mov	r0, r8
 80006b2:	f000 fa31 	bl	8000b18 <__clzsi2>
 80006b6:	4642      	mov	r2, r8
 80006b8:	1f43      	subs	r3, r0, #5
 80006ba:	409a      	lsls	r2, r3
 80006bc:	2376      	movs	r3, #118	@ 0x76
 80006be:	425b      	negs	r3, r3
 80006c0:	1a1b      	subs	r3, r3, r0
 80006c2:	4690      	mov	r8, r2
 80006c4:	2000      	movs	r0, #0
 80006c6:	e7b0      	b.n	800062a <__aeabi_fdiv+0x52>
 80006c8:	2303      	movs	r3, #3
 80006ca:	464a      	mov	r2, r9
 80006cc:	431a      	orrs	r2, r3
 80006ce:	4691      	mov	r9, r2
 80006d0:	2003      	movs	r0, #3
 80006d2:	33fc      	adds	r3, #252	@ 0xfc
 80006d4:	e7a9      	b.n	800062a <__aeabi_fdiv+0x52>
 80006d6:	000d      	movs	r5, r1
 80006d8:	20ff      	movs	r0, #255	@ 0xff
 80006da:	2200      	movs	r2, #0
 80006dc:	05c0      	lsls	r0, r0, #23
 80006de:	07ed      	lsls	r5, r5, #31
 80006e0:	4310      	orrs	r0, r2
 80006e2:	4328      	orrs	r0, r5
 80006e4:	bce0      	pop	{r5, r6, r7}
 80006e6:	46ba      	mov	sl, r7
 80006e8:	46b1      	mov	r9, r6
 80006ea:	46a8      	mov	r8, r5
 80006ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80006ee:	000d      	movs	r5, r1
 80006f0:	2000      	movs	r0, #0
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7f2      	b.n	80006dc <__aeabi_fdiv+0x104>
 80006f6:	4653      	mov	r3, sl
 80006f8:	2b02      	cmp	r3, #2
 80006fa:	d0ed      	beq.n	80006d8 <__aeabi_fdiv+0x100>
 80006fc:	2b03      	cmp	r3, #3
 80006fe:	d033      	beq.n	8000768 <__aeabi_fdiv+0x190>
 8000700:	46a0      	mov	r8, r4
 8000702:	2b01      	cmp	r3, #1
 8000704:	d105      	bne.n	8000712 <__aeabi_fdiv+0x13a>
 8000706:	2000      	movs	r0, #0
 8000708:	2200      	movs	r2, #0
 800070a:	e7e7      	b.n	80006dc <__aeabi_fdiv+0x104>
 800070c:	0035      	movs	r5, r6
 800070e:	2803      	cmp	r0, #3
 8000710:	d07a      	beq.n	8000808 <__aeabi_fdiv+0x230>
 8000712:	003b      	movs	r3, r7
 8000714:	337f      	adds	r3, #127	@ 0x7f
 8000716:	2b00      	cmp	r3, #0
 8000718:	dd2d      	ble.n	8000776 <__aeabi_fdiv+0x19e>
 800071a:	4642      	mov	r2, r8
 800071c:	0752      	lsls	r2, r2, #29
 800071e:	d007      	beq.n	8000730 <__aeabi_fdiv+0x158>
 8000720:	220f      	movs	r2, #15
 8000722:	4641      	mov	r1, r8
 8000724:	400a      	ands	r2, r1
 8000726:	2a04      	cmp	r2, #4
 8000728:	d002      	beq.n	8000730 <__aeabi_fdiv+0x158>
 800072a:	2204      	movs	r2, #4
 800072c:	4694      	mov	ip, r2
 800072e:	44e0      	add	r8, ip
 8000730:	4642      	mov	r2, r8
 8000732:	0112      	lsls	r2, r2, #4
 8000734:	d505      	bpl.n	8000742 <__aeabi_fdiv+0x16a>
 8000736:	4642      	mov	r2, r8
 8000738:	4b36      	ldr	r3, [pc, #216]	@ (8000814 <__aeabi_fdiv+0x23c>)
 800073a:	401a      	ands	r2, r3
 800073c:	003b      	movs	r3, r7
 800073e:	4690      	mov	r8, r2
 8000740:	3380      	adds	r3, #128	@ 0x80
 8000742:	2bfe      	cmp	r3, #254	@ 0xfe
 8000744:	dcc8      	bgt.n	80006d8 <__aeabi_fdiv+0x100>
 8000746:	4642      	mov	r2, r8
 8000748:	0192      	lsls	r2, r2, #6
 800074a:	0a52      	lsrs	r2, r2, #9
 800074c:	b2d8      	uxtb	r0, r3
 800074e:	e7c5      	b.n	80006dc <__aeabi_fdiv+0x104>
 8000750:	2280      	movs	r2, #128	@ 0x80
 8000752:	2500      	movs	r5, #0
 8000754:	20ff      	movs	r0, #255	@ 0xff
 8000756:	03d2      	lsls	r2, r2, #15
 8000758:	e7c0      	b.n	80006dc <__aeabi_fdiv+0x104>
 800075a:	2280      	movs	r2, #128	@ 0x80
 800075c:	03d2      	lsls	r2, r2, #15
 800075e:	4214      	tst	r4, r2
 8000760:	d002      	beq.n	8000768 <__aeabi_fdiv+0x190>
 8000762:	4643      	mov	r3, r8
 8000764:	4213      	tst	r3, r2
 8000766:	d049      	beq.n	80007fc <__aeabi_fdiv+0x224>
 8000768:	2280      	movs	r2, #128	@ 0x80
 800076a:	03d2      	lsls	r2, r2, #15
 800076c:	4322      	orrs	r2, r4
 800076e:	0252      	lsls	r2, r2, #9
 8000770:	20ff      	movs	r0, #255	@ 0xff
 8000772:	0a52      	lsrs	r2, r2, #9
 8000774:	e7b2      	b.n	80006dc <__aeabi_fdiv+0x104>
 8000776:	2201      	movs	r2, #1
 8000778:	1ad3      	subs	r3, r2, r3
 800077a:	2b1b      	cmp	r3, #27
 800077c:	dcc3      	bgt.n	8000706 <__aeabi_fdiv+0x12e>
 800077e:	4642      	mov	r2, r8
 8000780:	40da      	lsrs	r2, r3
 8000782:	4643      	mov	r3, r8
 8000784:	379e      	adds	r7, #158	@ 0x9e
 8000786:	40bb      	lsls	r3, r7
 8000788:	1e59      	subs	r1, r3, #1
 800078a:	418b      	sbcs	r3, r1
 800078c:	431a      	orrs	r2, r3
 800078e:	0753      	lsls	r3, r2, #29
 8000790:	d004      	beq.n	800079c <__aeabi_fdiv+0x1c4>
 8000792:	230f      	movs	r3, #15
 8000794:	4013      	ands	r3, r2
 8000796:	2b04      	cmp	r3, #4
 8000798:	d000      	beq.n	800079c <__aeabi_fdiv+0x1c4>
 800079a:	3204      	adds	r2, #4
 800079c:	0153      	lsls	r3, r2, #5
 800079e:	d529      	bpl.n	80007f4 <__aeabi_fdiv+0x21c>
 80007a0:	2001      	movs	r0, #1
 80007a2:	2200      	movs	r2, #0
 80007a4:	e79a      	b.n	80006dc <__aeabi_fdiv+0x104>
 80007a6:	4642      	mov	r2, r8
 80007a8:	0163      	lsls	r3, r4, #5
 80007aa:	0155      	lsls	r5, r2, #5
 80007ac:	42ab      	cmp	r3, r5
 80007ae:	d215      	bcs.n	80007dc <__aeabi_fdiv+0x204>
 80007b0:	201b      	movs	r0, #27
 80007b2:	2200      	movs	r2, #0
 80007b4:	3f01      	subs	r7, #1
 80007b6:	2601      	movs	r6, #1
 80007b8:	001c      	movs	r4, r3
 80007ba:	0052      	lsls	r2, r2, #1
 80007bc:	005b      	lsls	r3, r3, #1
 80007be:	2c00      	cmp	r4, #0
 80007c0:	db01      	blt.n	80007c6 <__aeabi_fdiv+0x1ee>
 80007c2:	429d      	cmp	r5, r3
 80007c4:	d801      	bhi.n	80007ca <__aeabi_fdiv+0x1f2>
 80007c6:	1b5b      	subs	r3, r3, r5
 80007c8:	4332      	orrs	r2, r6
 80007ca:	3801      	subs	r0, #1
 80007cc:	2800      	cmp	r0, #0
 80007ce:	d1f3      	bne.n	80007b8 <__aeabi_fdiv+0x1e0>
 80007d0:	1e58      	subs	r0, r3, #1
 80007d2:	4183      	sbcs	r3, r0
 80007d4:	4313      	orrs	r3, r2
 80007d6:	4698      	mov	r8, r3
 80007d8:	000d      	movs	r5, r1
 80007da:	e79a      	b.n	8000712 <__aeabi_fdiv+0x13a>
 80007dc:	201a      	movs	r0, #26
 80007de:	2201      	movs	r2, #1
 80007e0:	1b5b      	subs	r3, r3, r5
 80007e2:	e7e8      	b.n	80007b6 <__aeabi_fdiv+0x1de>
 80007e4:	3b02      	subs	r3, #2
 80007e6:	425a      	negs	r2, r3
 80007e8:	4153      	adcs	r3, r2
 80007ea:	425b      	negs	r3, r3
 80007ec:	0035      	movs	r5, r6
 80007ee:	2200      	movs	r2, #0
 80007f0:	b2d8      	uxtb	r0, r3
 80007f2:	e773      	b.n	80006dc <__aeabi_fdiv+0x104>
 80007f4:	0192      	lsls	r2, r2, #6
 80007f6:	2000      	movs	r0, #0
 80007f8:	0a52      	lsrs	r2, r2, #9
 80007fa:	e76f      	b.n	80006dc <__aeabi_fdiv+0x104>
 80007fc:	431a      	orrs	r2, r3
 80007fe:	0252      	lsls	r2, r2, #9
 8000800:	0035      	movs	r5, r6
 8000802:	20ff      	movs	r0, #255	@ 0xff
 8000804:	0a52      	lsrs	r2, r2, #9
 8000806:	e769      	b.n	80006dc <__aeabi_fdiv+0x104>
 8000808:	4644      	mov	r4, r8
 800080a:	e7ad      	b.n	8000768 <__aeabi_fdiv+0x190>
 800080c:	08007df4 	.word	0x08007df4
 8000810:	08007e34 	.word	0x08007e34
 8000814:	f7ffffff 	.word	0xf7ffffff

08000818 <__aeabi_fmul>:
 8000818:	b5f0      	push	{r4, r5, r6, r7, lr}
 800081a:	464f      	mov	r7, r9
 800081c:	4646      	mov	r6, r8
 800081e:	46d6      	mov	lr, sl
 8000820:	0243      	lsls	r3, r0, #9
 8000822:	0a5b      	lsrs	r3, r3, #9
 8000824:	0045      	lsls	r5, r0, #1
 8000826:	b5c0      	push	{r6, r7, lr}
 8000828:	4699      	mov	r9, r3
 800082a:	1c0f      	adds	r7, r1, #0
 800082c:	0e2d      	lsrs	r5, r5, #24
 800082e:	0fc6      	lsrs	r6, r0, #31
 8000830:	2d00      	cmp	r5, #0
 8000832:	d100      	bne.n	8000836 <__aeabi_fmul+0x1e>
 8000834:	e088      	b.n	8000948 <__aeabi_fmul+0x130>
 8000836:	2dff      	cmp	r5, #255	@ 0xff
 8000838:	d100      	bne.n	800083c <__aeabi_fmul+0x24>
 800083a:	e08d      	b.n	8000958 <__aeabi_fmul+0x140>
 800083c:	2280      	movs	r2, #128	@ 0x80
 800083e:	00db      	lsls	r3, r3, #3
 8000840:	04d2      	lsls	r2, r2, #19
 8000842:	431a      	orrs	r2, r3
 8000844:	2300      	movs	r3, #0
 8000846:	4691      	mov	r9, r2
 8000848:	4698      	mov	r8, r3
 800084a:	469a      	mov	sl, r3
 800084c:	3d7f      	subs	r5, #127	@ 0x7f
 800084e:	027c      	lsls	r4, r7, #9
 8000850:	007b      	lsls	r3, r7, #1
 8000852:	0a64      	lsrs	r4, r4, #9
 8000854:	0e1b      	lsrs	r3, r3, #24
 8000856:	0fff      	lsrs	r7, r7, #31
 8000858:	2b00      	cmp	r3, #0
 800085a:	d068      	beq.n	800092e <__aeabi_fmul+0x116>
 800085c:	2bff      	cmp	r3, #255	@ 0xff
 800085e:	d021      	beq.n	80008a4 <__aeabi_fmul+0x8c>
 8000860:	2280      	movs	r2, #128	@ 0x80
 8000862:	00e4      	lsls	r4, r4, #3
 8000864:	04d2      	lsls	r2, r2, #19
 8000866:	4314      	orrs	r4, r2
 8000868:	4642      	mov	r2, r8
 800086a:	3b7f      	subs	r3, #127	@ 0x7f
 800086c:	195b      	adds	r3, r3, r5
 800086e:	2100      	movs	r1, #0
 8000870:	1c5d      	adds	r5, r3, #1
 8000872:	2a0a      	cmp	r2, #10
 8000874:	dc2e      	bgt.n	80008d4 <__aeabi_fmul+0xbc>
 8000876:	407e      	eors	r6, r7
 8000878:	4642      	mov	r2, r8
 800087a:	2a02      	cmp	r2, #2
 800087c:	dc23      	bgt.n	80008c6 <__aeabi_fmul+0xae>
 800087e:	3a01      	subs	r2, #1
 8000880:	2a01      	cmp	r2, #1
 8000882:	d900      	bls.n	8000886 <__aeabi_fmul+0x6e>
 8000884:	e0bd      	b.n	8000a02 <__aeabi_fmul+0x1ea>
 8000886:	2902      	cmp	r1, #2
 8000888:	d06e      	beq.n	8000968 <__aeabi_fmul+0x150>
 800088a:	2901      	cmp	r1, #1
 800088c:	d12c      	bne.n	80008e8 <__aeabi_fmul+0xd0>
 800088e:	2000      	movs	r0, #0
 8000890:	2200      	movs	r2, #0
 8000892:	05c0      	lsls	r0, r0, #23
 8000894:	07f6      	lsls	r6, r6, #31
 8000896:	4310      	orrs	r0, r2
 8000898:	4330      	orrs	r0, r6
 800089a:	bce0      	pop	{r5, r6, r7}
 800089c:	46ba      	mov	sl, r7
 800089e:	46b1      	mov	r9, r6
 80008a0:	46a8      	mov	r8, r5
 80008a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008a4:	002b      	movs	r3, r5
 80008a6:	33ff      	adds	r3, #255	@ 0xff
 80008a8:	2c00      	cmp	r4, #0
 80008aa:	d065      	beq.n	8000978 <__aeabi_fmul+0x160>
 80008ac:	2203      	movs	r2, #3
 80008ae:	4641      	mov	r1, r8
 80008b0:	4311      	orrs	r1, r2
 80008b2:	0032      	movs	r2, r6
 80008b4:	3501      	adds	r5, #1
 80008b6:	4688      	mov	r8, r1
 80008b8:	407a      	eors	r2, r7
 80008ba:	35ff      	adds	r5, #255	@ 0xff
 80008bc:	290a      	cmp	r1, #10
 80008be:	dd00      	ble.n	80008c2 <__aeabi_fmul+0xaa>
 80008c0:	e0d8      	b.n	8000a74 <__aeabi_fmul+0x25c>
 80008c2:	0016      	movs	r6, r2
 80008c4:	2103      	movs	r1, #3
 80008c6:	4640      	mov	r0, r8
 80008c8:	2201      	movs	r2, #1
 80008ca:	4082      	lsls	r2, r0
 80008cc:	20a6      	movs	r0, #166	@ 0xa6
 80008ce:	00c0      	lsls	r0, r0, #3
 80008d0:	4202      	tst	r2, r0
 80008d2:	d020      	beq.n	8000916 <__aeabi_fmul+0xfe>
 80008d4:	4653      	mov	r3, sl
 80008d6:	2b02      	cmp	r3, #2
 80008d8:	d046      	beq.n	8000968 <__aeabi_fmul+0x150>
 80008da:	2b03      	cmp	r3, #3
 80008dc:	d100      	bne.n	80008e0 <__aeabi_fmul+0xc8>
 80008de:	e0bb      	b.n	8000a58 <__aeabi_fmul+0x240>
 80008e0:	4651      	mov	r1, sl
 80008e2:	464c      	mov	r4, r9
 80008e4:	2901      	cmp	r1, #1
 80008e6:	d0d2      	beq.n	800088e <__aeabi_fmul+0x76>
 80008e8:	002b      	movs	r3, r5
 80008ea:	337f      	adds	r3, #127	@ 0x7f
 80008ec:	2b00      	cmp	r3, #0
 80008ee:	dd70      	ble.n	80009d2 <__aeabi_fmul+0x1ba>
 80008f0:	0762      	lsls	r2, r4, #29
 80008f2:	d004      	beq.n	80008fe <__aeabi_fmul+0xe6>
 80008f4:	220f      	movs	r2, #15
 80008f6:	4022      	ands	r2, r4
 80008f8:	2a04      	cmp	r2, #4
 80008fa:	d000      	beq.n	80008fe <__aeabi_fmul+0xe6>
 80008fc:	3404      	adds	r4, #4
 80008fe:	0122      	lsls	r2, r4, #4
 8000900:	d503      	bpl.n	800090a <__aeabi_fmul+0xf2>
 8000902:	4b63      	ldr	r3, [pc, #396]	@ (8000a90 <__aeabi_fmul+0x278>)
 8000904:	401c      	ands	r4, r3
 8000906:	002b      	movs	r3, r5
 8000908:	3380      	adds	r3, #128	@ 0x80
 800090a:	2bfe      	cmp	r3, #254	@ 0xfe
 800090c:	dc2c      	bgt.n	8000968 <__aeabi_fmul+0x150>
 800090e:	01a2      	lsls	r2, r4, #6
 8000910:	0a52      	lsrs	r2, r2, #9
 8000912:	b2d8      	uxtb	r0, r3
 8000914:	e7bd      	b.n	8000892 <__aeabi_fmul+0x7a>
 8000916:	2090      	movs	r0, #144	@ 0x90
 8000918:	0080      	lsls	r0, r0, #2
 800091a:	4202      	tst	r2, r0
 800091c:	d127      	bne.n	800096e <__aeabi_fmul+0x156>
 800091e:	38b9      	subs	r0, #185	@ 0xb9
 8000920:	38ff      	subs	r0, #255	@ 0xff
 8000922:	4210      	tst	r0, r2
 8000924:	d06d      	beq.n	8000a02 <__aeabi_fmul+0x1ea>
 8000926:	003e      	movs	r6, r7
 8000928:	46a1      	mov	r9, r4
 800092a:	468a      	mov	sl, r1
 800092c:	e7d2      	b.n	80008d4 <__aeabi_fmul+0xbc>
 800092e:	2c00      	cmp	r4, #0
 8000930:	d141      	bne.n	80009b6 <__aeabi_fmul+0x19e>
 8000932:	2301      	movs	r3, #1
 8000934:	4642      	mov	r2, r8
 8000936:	431a      	orrs	r2, r3
 8000938:	4690      	mov	r8, r2
 800093a:	002b      	movs	r3, r5
 800093c:	4642      	mov	r2, r8
 800093e:	2101      	movs	r1, #1
 8000940:	1c5d      	adds	r5, r3, #1
 8000942:	2a0a      	cmp	r2, #10
 8000944:	dd97      	ble.n	8000876 <__aeabi_fmul+0x5e>
 8000946:	e7c5      	b.n	80008d4 <__aeabi_fmul+0xbc>
 8000948:	2b00      	cmp	r3, #0
 800094a:	d126      	bne.n	800099a <__aeabi_fmul+0x182>
 800094c:	2304      	movs	r3, #4
 800094e:	4698      	mov	r8, r3
 8000950:	3b03      	subs	r3, #3
 8000952:	2500      	movs	r5, #0
 8000954:	469a      	mov	sl, r3
 8000956:	e77a      	b.n	800084e <__aeabi_fmul+0x36>
 8000958:	2b00      	cmp	r3, #0
 800095a:	d118      	bne.n	800098e <__aeabi_fmul+0x176>
 800095c:	2308      	movs	r3, #8
 800095e:	4698      	mov	r8, r3
 8000960:	3b06      	subs	r3, #6
 8000962:	25ff      	movs	r5, #255	@ 0xff
 8000964:	469a      	mov	sl, r3
 8000966:	e772      	b.n	800084e <__aeabi_fmul+0x36>
 8000968:	20ff      	movs	r0, #255	@ 0xff
 800096a:	2200      	movs	r2, #0
 800096c:	e791      	b.n	8000892 <__aeabi_fmul+0x7a>
 800096e:	2280      	movs	r2, #128	@ 0x80
 8000970:	2600      	movs	r6, #0
 8000972:	20ff      	movs	r0, #255	@ 0xff
 8000974:	03d2      	lsls	r2, r2, #15
 8000976:	e78c      	b.n	8000892 <__aeabi_fmul+0x7a>
 8000978:	4641      	mov	r1, r8
 800097a:	2202      	movs	r2, #2
 800097c:	3501      	adds	r5, #1
 800097e:	4311      	orrs	r1, r2
 8000980:	4688      	mov	r8, r1
 8000982:	35ff      	adds	r5, #255	@ 0xff
 8000984:	290a      	cmp	r1, #10
 8000986:	dca5      	bgt.n	80008d4 <__aeabi_fmul+0xbc>
 8000988:	2102      	movs	r1, #2
 800098a:	407e      	eors	r6, r7
 800098c:	e774      	b.n	8000878 <__aeabi_fmul+0x60>
 800098e:	230c      	movs	r3, #12
 8000990:	4698      	mov	r8, r3
 8000992:	3b09      	subs	r3, #9
 8000994:	25ff      	movs	r5, #255	@ 0xff
 8000996:	469a      	mov	sl, r3
 8000998:	e759      	b.n	800084e <__aeabi_fmul+0x36>
 800099a:	0018      	movs	r0, r3
 800099c:	f000 f8bc 	bl	8000b18 <__clzsi2>
 80009a0:	464a      	mov	r2, r9
 80009a2:	1f43      	subs	r3, r0, #5
 80009a4:	2576      	movs	r5, #118	@ 0x76
 80009a6:	409a      	lsls	r2, r3
 80009a8:	2300      	movs	r3, #0
 80009aa:	426d      	negs	r5, r5
 80009ac:	4691      	mov	r9, r2
 80009ae:	4698      	mov	r8, r3
 80009b0:	469a      	mov	sl, r3
 80009b2:	1a2d      	subs	r5, r5, r0
 80009b4:	e74b      	b.n	800084e <__aeabi_fmul+0x36>
 80009b6:	0020      	movs	r0, r4
 80009b8:	f000 f8ae 	bl	8000b18 <__clzsi2>
 80009bc:	4642      	mov	r2, r8
 80009be:	1f43      	subs	r3, r0, #5
 80009c0:	409c      	lsls	r4, r3
 80009c2:	1a2b      	subs	r3, r5, r0
 80009c4:	3b76      	subs	r3, #118	@ 0x76
 80009c6:	2100      	movs	r1, #0
 80009c8:	1c5d      	adds	r5, r3, #1
 80009ca:	2a0a      	cmp	r2, #10
 80009cc:	dc00      	bgt.n	80009d0 <__aeabi_fmul+0x1b8>
 80009ce:	e752      	b.n	8000876 <__aeabi_fmul+0x5e>
 80009d0:	e780      	b.n	80008d4 <__aeabi_fmul+0xbc>
 80009d2:	2201      	movs	r2, #1
 80009d4:	1ad3      	subs	r3, r2, r3
 80009d6:	2b1b      	cmp	r3, #27
 80009d8:	dd00      	ble.n	80009dc <__aeabi_fmul+0x1c4>
 80009da:	e758      	b.n	800088e <__aeabi_fmul+0x76>
 80009dc:	359e      	adds	r5, #158	@ 0x9e
 80009de:	0022      	movs	r2, r4
 80009e0:	40ac      	lsls	r4, r5
 80009e2:	40da      	lsrs	r2, r3
 80009e4:	1e63      	subs	r3, r4, #1
 80009e6:	419c      	sbcs	r4, r3
 80009e8:	4322      	orrs	r2, r4
 80009ea:	0753      	lsls	r3, r2, #29
 80009ec:	d004      	beq.n	80009f8 <__aeabi_fmul+0x1e0>
 80009ee:	230f      	movs	r3, #15
 80009f0:	4013      	ands	r3, r2
 80009f2:	2b04      	cmp	r3, #4
 80009f4:	d000      	beq.n	80009f8 <__aeabi_fmul+0x1e0>
 80009f6:	3204      	adds	r2, #4
 80009f8:	0153      	lsls	r3, r2, #5
 80009fa:	d537      	bpl.n	8000a6c <__aeabi_fmul+0x254>
 80009fc:	2001      	movs	r0, #1
 80009fe:	2200      	movs	r2, #0
 8000a00:	e747      	b.n	8000892 <__aeabi_fmul+0x7a>
 8000a02:	0c21      	lsrs	r1, r4, #16
 8000a04:	464a      	mov	r2, r9
 8000a06:	0424      	lsls	r4, r4, #16
 8000a08:	0c24      	lsrs	r4, r4, #16
 8000a0a:	0027      	movs	r7, r4
 8000a0c:	0c10      	lsrs	r0, r2, #16
 8000a0e:	0412      	lsls	r2, r2, #16
 8000a10:	0c12      	lsrs	r2, r2, #16
 8000a12:	4344      	muls	r4, r0
 8000a14:	4357      	muls	r7, r2
 8000a16:	4348      	muls	r0, r1
 8000a18:	4351      	muls	r1, r2
 8000a1a:	0c3a      	lsrs	r2, r7, #16
 8000a1c:	1909      	adds	r1, r1, r4
 8000a1e:	1852      	adds	r2, r2, r1
 8000a20:	4294      	cmp	r4, r2
 8000a22:	d903      	bls.n	8000a2c <__aeabi_fmul+0x214>
 8000a24:	2180      	movs	r1, #128	@ 0x80
 8000a26:	0249      	lsls	r1, r1, #9
 8000a28:	468c      	mov	ip, r1
 8000a2a:	4460      	add	r0, ip
 8000a2c:	043f      	lsls	r7, r7, #16
 8000a2e:	0411      	lsls	r1, r2, #16
 8000a30:	0c3f      	lsrs	r7, r7, #16
 8000a32:	19c9      	adds	r1, r1, r7
 8000a34:	018c      	lsls	r4, r1, #6
 8000a36:	1e67      	subs	r7, r4, #1
 8000a38:	41bc      	sbcs	r4, r7
 8000a3a:	0c12      	lsrs	r2, r2, #16
 8000a3c:	0e89      	lsrs	r1, r1, #26
 8000a3e:	1812      	adds	r2, r2, r0
 8000a40:	430c      	orrs	r4, r1
 8000a42:	0192      	lsls	r2, r2, #6
 8000a44:	4314      	orrs	r4, r2
 8000a46:	0112      	lsls	r2, r2, #4
 8000a48:	d50e      	bpl.n	8000a68 <__aeabi_fmul+0x250>
 8000a4a:	2301      	movs	r3, #1
 8000a4c:	0862      	lsrs	r2, r4, #1
 8000a4e:	401c      	ands	r4, r3
 8000a50:	4314      	orrs	r4, r2
 8000a52:	e749      	b.n	80008e8 <__aeabi_fmul+0xd0>
 8000a54:	003e      	movs	r6, r7
 8000a56:	46a1      	mov	r9, r4
 8000a58:	2280      	movs	r2, #128	@ 0x80
 8000a5a:	464b      	mov	r3, r9
 8000a5c:	03d2      	lsls	r2, r2, #15
 8000a5e:	431a      	orrs	r2, r3
 8000a60:	0252      	lsls	r2, r2, #9
 8000a62:	20ff      	movs	r0, #255	@ 0xff
 8000a64:	0a52      	lsrs	r2, r2, #9
 8000a66:	e714      	b.n	8000892 <__aeabi_fmul+0x7a>
 8000a68:	001d      	movs	r5, r3
 8000a6a:	e73d      	b.n	80008e8 <__aeabi_fmul+0xd0>
 8000a6c:	0192      	lsls	r2, r2, #6
 8000a6e:	2000      	movs	r0, #0
 8000a70:	0a52      	lsrs	r2, r2, #9
 8000a72:	e70e      	b.n	8000892 <__aeabi_fmul+0x7a>
 8000a74:	290f      	cmp	r1, #15
 8000a76:	d1ed      	bne.n	8000a54 <__aeabi_fmul+0x23c>
 8000a78:	2280      	movs	r2, #128	@ 0x80
 8000a7a:	464b      	mov	r3, r9
 8000a7c:	03d2      	lsls	r2, r2, #15
 8000a7e:	4213      	tst	r3, r2
 8000a80:	d0ea      	beq.n	8000a58 <__aeabi_fmul+0x240>
 8000a82:	4214      	tst	r4, r2
 8000a84:	d1e8      	bne.n	8000a58 <__aeabi_fmul+0x240>
 8000a86:	003e      	movs	r6, r7
 8000a88:	20ff      	movs	r0, #255	@ 0xff
 8000a8a:	4322      	orrs	r2, r4
 8000a8c:	e701      	b.n	8000892 <__aeabi_fmul+0x7a>
 8000a8e:	46c0      	nop			@ (mov r8, r8)
 8000a90:	f7ffffff 	.word	0xf7ffffff

08000a94 <__aeabi_ui2f>:
 8000a94:	b570      	push	{r4, r5, r6, lr}
 8000a96:	1e04      	subs	r4, r0, #0
 8000a98:	d00e      	beq.n	8000ab8 <__aeabi_ui2f+0x24>
 8000a9a:	f000 f83d 	bl	8000b18 <__clzsi2>
 8000a9e:	239e      	movs	r3, #158	@ 0x9e
 8000aa0:	0001      	movs	r1, r0
 8000aa2:	1a1b      	subs	r3, r3, r0
 8000aa4:	2b96      	cmp	r3, #150	@ 0x96
 8000aa6:	dc0c      	bgt.n	8000ac2 <__aeabi_ui2f+0x2e>
 8000aa8:	2808      	cmp	r0, #8
 8000aaa:	d02f      	beq.n	8000b0c <__aeabi_ui2f+0x78>
 8000aac:	3908      	subs	r1, #8
 8000aae:	408c      	lsls	r4, r1
 8000ab0:	0264      	lsls	r4, r4, #9
 8000ab2:	0a64      	lsrs	r4, r4, #9
 8000ab4:	b2d8      	uxtb	r0, r3
 8000ab6:	e001      	b.n	8000abc <__aeabi_ui2f+0x28>
 8000ab8:	2000      	movs	r0, #0
 8000aba:	2400      	movs	r4, #0
 8000abc:	05c0      	lsls	r0, r0, #23
 8000abe:	4320      	orrs	r0, r4
 8000ac0:	bd70      	pop	{r4, r5, r6, pc}
 8000ac2:	2b99      	cmp	r3, #153	@ 0x99
 8000ac4:	dc16      	bgt.n	8000af4 <__aeabi_ui2f+0x60>
 8000ac6:	1f42      	subs	r2, r0, #5
 8000ac8:	2805      	cmp	r0, #5
 8000aca:	d000      	beq.n	8000ace <__aeabi_ui2f+0x3a>
 8000acc:	4094      	lsls	r4, r2
 8000ace:	0022      	movs	r2, r4
 8000ad0:	4810      	ldr	r0, [pc, #64]	@ (8000b14 <__aeabi_ui2f+0x80>)
 8000ad2:	4002      	ands	r2, r0
 8000ad4:	0765      	lsls	r5, r4, #29
 8000ad6:	d009      	beq.n	8000aec <__aeabi_ui2f+0x58>
 8000ad8:	250f      	movs	r5, #15
 8000ada:	402c      	ands	r4, r5
 8000adc:	2c04      	cmp	r4, #4
 8000ade:	d005      	beq.n	8000aec <__aeabi_ui2f+0x58>
 8000ae0:	3204      	adds	r2, #4
 8000ae2:	0154      	lsls	r4, r2, #5
 8000ae4:	d502      	bpl.n	8000aec <__aeabi_ui2f+0x58>
 8000ae6:	239f      	movs	r3, #159	@ 0x9f
 8000ae8:	4002      	ands	r2, r0
 8000aea:	1a5b      	subs	r3, r3, r1
 8000aec:	0192      	lsls	r2, r2, #6
 8000aee:	0a54      	lsrs	r4, r2, #9
 8000af0:	b2d8      	uxtb	r0, r3
 8000af2:	e7e3      	b.n	8000abc <__aeabi_ui2f+0x28>
 8000af4:	0002      	movs	r2, r0
 8000af6:	0020      	movs	r0, r4
 8000af8:	321b      	adds	r2, #27
 8000afa:	4090      	lsls	r0, r2
 8000afc:	0002      	movs	r2, r0
 8000afe:	1e50      	subs	r0, r2, #1
 8000b00:	4182      	sbcs	r2, r0
 8000b02:	2005      	movs	r0, #5
 8000b04:	1a40      	subs	r0, r0, r1
 8000b06:	40c4      	lsrs	r4, r0
 8000b08:	4314      	orrs	r4, r2
 8000b0a:	e7e0      	b.n	8000ace <__aeabi_ui2f+0x3a>
 8000b0c:	0264      	lsls	r4, r4, #9
 8000b0e:	2096      	movs	r0, #150	@ 0x96
 8000b10:	0a64      	lsrs	r4, r4, #9
 8000b12:	e7d3      	b.n	8000abc <__aeabi_ui2f+0x28>
 8000b14:	fbffffff 	.word	0xfbffffff

08000b18 <__clzsi2>:
 8000b18:	211c      	movs	r1, #28
 8000b1a:	2301      	movs	r3, #1
 8000b1c:	041b      	lsls	r3, r3, #16
 8000b1e:	4298      	cmp	r0, r3
 8000b20:	d301      	bcc.n	8000b26 <__clzsi2+0xe>
 8000b22:	0c00      	lsrs	r0, r0, #16
 8000b24:	3910      	subs	r1, #16
 8000b26:	0a1b      	lsrs	r3, r3, #8
 8000b28:	4298      	cmp	r0, r3
 8000b2a:	d301      	bcc.n	8000b30 <__clzsi2+0x18>
 8000b2c:	0a00      	lsrs	r0, r0, #8
 8000b2e:	3908      	subs	r1, #8
 8000b30:	091b      	lsrs	r3, r3, #4
 8000b32:	4298      	cmp	r0, r3
 8000b34:	d301      	bcc.n	8000b3a <__clzsi2+0x22>
 8000b36:	0900      	lsrs	r0, r0, #4
 8000b38:	3904      	subs	r1, #4
 8000b3a:	a202      	add	r2, pc, #8	@ (adr r2, 8000b44 <__clzsi2+0x2c>)
 8000b3c:	5c10      	ldrb	r0, [r2, r0]
 8000b3e:	1840      	adds	r0, r0, r1
 8000b40:	4770      	bx	lr
 8000b42:	46c0      	nop			@ (mov r8, r8)
 8000b44:	02020304 	.word	0x02020304
 8000b48:	01010101 	.word	0x01010101
	...

08000b54 <__clzdi2>:
 8000b54:	b510      	push	{r4, lr}
 8000b56:	2900      	cmp	r1, #0
 8000b58:	d103      	bne.n	8000b62 <__clzdi2+0xe>
 8000b5a:	f7ff ffdd 	bl	8000b18 <__clzsi2>
 8000b5e:	3020      	adds	r0, #32
 8000b60:	e002      	b.n	8000b68 <__clzdi2+0x14>
 8000b62:	0008      	movs	r0, r1
 8000b64:	f7ff ffd8 	bl	8000b18 <__clzsi2>
 8000b68:	bd10      	pop	{r4, pc}
 8000b6a:	46c0      	nop			@ (mov r8, r8)

08000b6c <CC_APP_Nop>:
uint8_t CC_APP_BlinkCnts=CC_APP_LED_INDICATOR_OK_CNTS_BT10MS;	//Variable used to set the board's led blink frequency
CC_APP_Config_t CC_APP_BoardData;								//Handler with the board's data

//Functions
void CC_APP_Nop(void* param1, void* param2, void* param3)
{
 8000b6c:	b580      	push	{r7, lr}
 8000b6e:	b084      	sub	sp, #16
 8000b70:	af00      	add	r7, sp, #0
 8000b72:	60f8      	str	r0, [r7, #12]
 8000b74:	60b9      	str	r1, [r7, #8]
 8000b76:	607a      	str	r2, [r7, #4]
	__asm__("nop");
 8000b78:	46c0      	nop			@ (mov r8, r8)
}
 8000b7a:	46c0      	nop			@ (mov r8, r8)
 8000b7c:	46bd      	mov	sp, r7
 8000b7e:	b004      	add	sp, #16
 8000b80:	bd80      	pop	{r7, pc}
	...

08000b84 <CC_APP_BoardLedBlinking>:

void CC_APP_BoardLedBlinking(void* const param1, void* param2, void* param3)
{
 8000b84:	b580      	push	{r7, lr}
 8000b86:	b086      	sub	sp, #24
 8000b88:	af00      	add	r7, sp, #0
 8000b8a:	60f8      	str	r0, [r7, #12]
 8000b8c:	60b9      	str	r1, [r7, #8]
 8000b8e:	607a      	str	r2, [r7, #4]
	uint8_t TotalCounts;
	static uint8_t counts=0;				//Static var to keep the value between entries.

	TotalCounts=*((uint8_t*)param1);		//Same TotalCounts on and off
 8000b90:	2117      	movs	r1, #23
 8000b92:	187b      	adds	r3, r7, r1
 8000b94:	68fa      	ldr	r2, [r7, #12]
 8000b96:	7812      	ldrb	r2, [r2, #0]
 8000b98:	701a      	strb	r2, [r3, #0]
	if(counts<TotalCounts)
 8000b9a:	4b0b      	ldr	r3, [pc, #44]	@ (8000bc8 <CC_APP_BoardLedBlinking+0x44>)
 8000b9c:	781b      	ldrb	r3, [r3, #0]
 8000b9e:	187a      	adds	r2, r7, r1
 8000ba0:	7812      	ldrb	r2, [r2, #0]
 8000ba2:	429a      	cmp	r2, r3
 8000ba4:	d906      	bls.n	8000bb4 <CC_APP_BoardLedBlinking+0x30>
	{
		counts++;
 8000ba6:	4b08      	ldr	r3, [pc, #32]	@ (8000bc8 <CC_APP_BoardLedBlinking+0x44>)
 8000ba8:	781b      	ldrb	r3, [r3, #0]
 8000baa:	3301      	adds	r3, #1
 8000bac:	b2da      	uxtb	r2, r3
 8000bae:	4b06      	ldr	r3, [pc, #24]	@ (8000bc8 <CC_APP_BoardLedBlinking+0x44>)
 8000bb0:	701a      	strb	r2, [r3, #0]
	else
	{
		CC_ML_LedBoardToggle();
		counts=0;
	}
}
 8000bb2:	e004      	b.n	8000bbe <CC_APP_BoardLedBlinking+0x3a>
		CC_ML_LedBoardToggle();
 8000bb4:	f001 faf4 	bl	80021a0 <CC_ML_LedBoardToggle>
		counts=0;
 8000bb8:	4b03      	ldr	r3, [pc, #12]	@ (8000bc8 <CC_APP_BoardLedBlinking+0x44>)
 8000bba:	2200      	movs	r2, #0
 8000bbc:	701a      	strb	r2, [r3, #0]
}
 8000bbe:	46c0      	nop			@ (mov r8, r8)
 8000bc0:	46bd      	mov	sp, r7
 8000bc2:	b006      	add	sp, #24
 8000bc4:	bd80      	pop	{r7, pc}
 8000bc6:	46c0      	nop			@ (mov r8, r8)
 8000bc8:	20000090 	.word	0x20000090

08000bcc <CC_APP_SetBoardParam>:

void CC_APP_SetBoardParam(CC_APP_Config_t* const SysData)
{
 8000bcc:	b580      	push	{r7, lr}
 8000bce:	b084      	sub	sp, #16
 8000bd0:	af00      	add	r7, sp, #0
 8000bd2:	6078      	str	r0, [r7, #4]
	size_t  length;

	length=sizeof(SysData->HwCode);							//Extract the length of the array (already defined like a vector of sizeof(constant to store) length)
 8000bd4:	2311      	movs	r3, #17
 8000bd6:	60fb      	str	r3, [r7, #12]
	strncpy(SysData->HwCode,CC_APP_BOARDHWCODE, length);	//Copy the constant string
 8000bd8:	687b      	ldr	r3, [r7, #4]
 8000bda:	68fa      	ldr	r2, [r7, #12]
 8000bdc:	4920      	ldr	r1, [pc, #128]	@ (8000c60 <CC_APP_SetBoardParam+0x94>)
 8000bde:	0018      	movs	r0, r3
 8000be0:	f006 ffb4 	bl	8007b4c <strncpy>
	SysData->HwCode[length-1]='\0';							//Ensures null terminator (to avoid problems)
 8000be4:	68fb      	ldr	r3, [r7, #12]
 8000be6:	3b01      	subs	r3, #1
 8000be8:	687a      	ldr	r2, [r7, #4]
 8000bea:	2100      	movs	r1, #0
 8000bec:	54d1      	strb	r1, [r2, r3]

	length=sizeof(SysData->SwVer);
 8000bee:	2313      	movs	r3, #19
 8000bf0:	60fb      	str	r3, [r7, #12]
	strncpy(SysData->SwVer,CC_APP_FWVER, length);
 8000bf2:	687b      	ldr	r3, [r7, #4]
 8000bf4:	3311      	adds	r3, #17
 8000bf6:	68fa      	ldr	r2, [r7, #12]
 8000bf8:	491a      	ldr	r1, [pc, #104]	@ (8000c64 <CC_APP_SetBoardParam+0x98>)
 8000bfa:	0018      	movs	r0, r3
 8000bfc:	f006 ffa6 	bl	8007b4c <strncpy>
	SysData->SwVer[length-1]='\0';
 8000c00:	68fb      	ldr	r3, [r7, #12]
 8000c02:	3b01      	subs	r3, #1
 8000c04:	687a      	ldr	r2, [r7, #4]
 8000c06:	18d3      	adds	r3, r2, r3
 8000c08:	2200      	movs	r2, #0
 8000c0a:	745a      	strb	r2, [r3, #17]

	length=sizeof(SysData->HwCode);
 8000c0c:	2311      	movs	r3, #17
 8000c0e:	60fb      	str	r3, [r7, #12]
	strncpy(SysData->Summary,CC_APP_SUMMARY, length);
 8000c10:	687b      	ldr	r3, [r7, #4]
 8000c12:	3324      	adds	r3, #36	@ 0x24
 8000c14:	68fa      	ldr	r2, [r7, #12]
 8000c16:	4914      	ldr	r1, [pc, #80]	@ (8000c68 <CC_APP_SetBoardParam+0x9c>)
 8000c18:	0018      	movs	r0, r3
 8000c1a:	f006 ff97 	bl	8007b4c <strncpy>
	SysData->Summary[length-1]='\0';
 8000c1e:	68fb      	ldr	r3, [r7, #12]
 8000c20:	3b01      	subs	r3, #1
 8000c22:	687a      	ldr	r2, [r7, #4]
 8000c24:	2124      	movs	r1, #36	@ 0x24
 8000c26:	18d3      	adds	r3, r2, r3
 8000c28:	185b      	adds	r3, r3, r1
 8000c2a:	2200      	movs	r2, #0
 8000c2c:	701a      	strb	r2, [r3, #0]

	length=sizeof(SysData->uC);
 8000c2e:	230e      	movs	r3, #14
 8000c30:	60fb      	str	r3, [r7, #12]
	strncpy(SysData->uC,CC_APP_MICROCONTROLLER, length);
 8000c32:	687b      	ldr	r3, [r7, #4]
 8000c34:	334d      	adds	r3, #77	@ 0x4d
 8000c36:	68fa      	ldr	r2, [r7, #12]
 8000c38:	490c      	ldr	r1, [pc, #48]	@ (8000c6c <CC_APP_SetBoardParam+0xa0>)
 8000c3a:	0018      	movs	r0, r3
 8000c3c:	f006 ff86 	bl	8007b4c <strncpy>
	SysData->uC[length-1]='\0';
 8000c40:	68fb      	ldr	r3, [r7, #12]
 8000c42:	3b01      	subs	r3, #1
 8000c44:	687a      	ldr	r2, [r7, #4]
 8000c46:	214d      	movs	r1, #77	@ 0x4d
 8000c48:	18d3      	adds	r3, r2, r3
 8000c4a:	185b      	adds	r3, r3, r1
 8000c4c:	2200      	movs	r2, #0
 8000c4e:	701a      	strb	r2, [r3, #0]

	SysData->id=0;
 8000c50:	687b      	ldr	r3, [r7, #4]
 8000c52:	225b      	movs	r2, #91	@ 0x5b
 8000c54:	2100      	movs	r1, #0
 8000c56:	5499      	strb	r1, [r3, r2]
}
 8000c58:	46c0      	nop			@ (mov r8, r8)
 8000c5a:	46bd      	mov	sp, r7
 8000c5c:	b004      	add	sp, #16
 8000c5e:	bd80      	pop	{r7, pc}
 8000c60:	08007be8 	.word	0x08007be8
 8000c64:	08007bfc 	.word	0x08007bfc
 8000c68:	08007c10 	.word	0x08007c10
 8000c6c:	08007c3c 	.word	0x08007c3c

08000c70 <CC_LEDPWM_Init>:


//Functions
void CC_LEDPWM_Init(CC_LEDPWM_SoftPwm_t* const pStripControl)
//Initializing the strip's control structure
{
 8000c70:	b580      	push	{r7, lr}
 8000c72:	b084      	sub	sp, #16
 8000c74:	af00      	add	r7, sp, #0
 8000c76:	6078      	str	r0, [r7, #4]
	uint8_t i=0;
 8000c78:	230f      	movs	r3, #15
 8000c7a:	18fb      	adds	r3, r7, r3
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	701a      	strb	r2, [r3, #0]

	pStripControl->Control.BaseCounts=CC_LEDPWM_SOFTPWMBASECOUNTS;
 8000c80:	687b      	ldr	r3, [r7, #4]
 8000c82:	22a4      	movs	r2, #164	@ 0xa4
 8000c84:	2164      	movs	r1, #100	@ 0x64
 8000c86:	5099      	str	r1, [r3, r2]
	pStripControl->Control.Counter=0;
 8000c88:	687b      	ldr	r3, [r7, #4]
 8000c8a:	22a0      	movs	r2, #160	@ 0xa0
 8000c8c:	2100      	movs	r1, #0
 8000c8e:	5099      	str	r1, [r3, r2]

	while(i<CC_LEDPWM_TOTALSTRIPS)
 8000c90:	e01c      	b.n	8000ccc <CC_LEDPWM_Init+0x5c>
	{
		pStripControl->Strip[i].RedDuty=CC_LEDPWM_INITDUTY;
 8000c92:	200f      	movs	r0, #15
 8000c94:	183b      	adds	r3, r7, r0
 8000c96:	781a      	ldrb	r2, [r3, #0]
 8000c98:	687b      	ldr	r3, [r7, #4]
 8000c9a:	0112      	lsls	r2, r2, #4
 8000c9c:	2100      	movs	r1, #0
 8000c9e:	54d1      	strb	r1, [r2, r3]
		pStripControl->Strip[i].GreenDuty=CC_LEDPWM_INITDUTY;
 8000ca0:	0001      	movs	r1, r0
 8000ca2:	187b      	adds	r3, r7, r1
 8000ca4:	781b      	ldrb	r3, [r3, #0]
 8000ca6:	687a      	ldr	r2, [r7, #4]
 8000ca8:	011b      	lsls	r3, r3, #4
 8000caa:	18d3      	adds	r3, r2, r3
 8000cac:	3301      	adds	r3, #1
 8000cae:	2200      	movs	r2, #0
 8000cb0:	701a      	strb	r2, [r3, #0]
		pStripControl->Strip[i].BlueDuty=CC_LEDPWM_INITDUTY;
 8000cb2:	187b      	adds	r3, r7, r1
 8000cb4:	781b      	ldrb	r3, [r3, #0]
 8000cb6:	687a      	ldr	r2, [r7, #4]
 8000cb8:	011b      	lsls	r3, r3, #4
 8000cba:	18d3      	adds	r3, r2, r3
 8000cbc:	3302      	adds	r3, #2
 8000cbe:	2200      	movs	r2, #0
 8000cc0:	701a      	strb	r2, [r3, #0]
		i++;
 8000cc2:	187b      	adds	r3, r7, r1
 8000cc4:	781a      	ldrb	r2, [r3, #0]
 8000cc6:	187b      	adds	r3, r7, r1
 8000cc8:	3201      	adds	r2, #1
 8000cca:	701a      	strb	r2, [r3, #0]
	while(i<CC_LEDPWM_TOTALSTRIPS)
 8000ccc:	230f      	movs	r3, #15
 8000cce:	18fb      	adds	r3, r7, r3
 8000cd0:	781b      	ldrb	r3, [r3, #0]
 8000cd2:	2b09      	cmp	r3, #9
 8000cd4:	d9dd      	bls.n	8000c92 <CC_LEDPWM_Init+0x22>
	}
}
 8000cd6:	46c0      	nop			@ (mov r8, r8)
 8000cd8:	46c0      	nop			@ (mov r8, r8)
 8000cda:	46bd      	mov	sp, r7
 8000cdc:	b004      	add	sp, #16
 8000cde:	bd80      	pop	{r7, pc}

08000ce0 <CC_LEDPWM_CntrCalculus>:

void CC_LEDPWM_CntrCalculus(void* const param1, void* const param2, void* const param3)
//Calculus of the equivalent counts to be reached to accomplish with the given duty
//1st parameter is the struct to manage the strips and 2nd is the number of strips
{
 8000ce0:	b5b0      	push	{r4, r5, r7, lr}
 8000ce2:	b088      	sub	sp, #32
 8000ce4:	af00      	add	r7, sp, #0
 8000ce6:	60f8      	str	r0, [r7, #12]
 8000ce8:	60b9      	str	r1, [r7, #8]
 8000cea:	607a      	str	r2, [r7, #4]
	CC_LEDPWM_SoftPwm_t* const pStripData=(CC_LEDPWM_SoftPwm_t*)param1;
 8000cec:	68fb      	ldr	r3, [r7, #12]
 8000cee:	61bb      	str	r3, [r7, #24]
	const uint8_t NumStrips=*((uint8_t*)param2);					// Casting and dereference
 8000cf0:	2317      	movs	r3, #23
 8000cf2:	18fb      	adds	r3, r7, r3
 8000cf4:	68ba      	ldr	r2, [r7, #8]
 8000cf6:	7812      	ldrb	r2, [r2, #0]
 8000cf8:	701a      	strb	r2, [r3, #0]
	uint8_t i=0;
 8000cfa:	231f      	movs	r3, #31
 8000cfc:	18fb      	adds	r3, r7, r3
 8000cfe:	2200      	movs	r2, #0
 8000d00:	701a      	strb	r2, [r3, #0]

	while (i<NumStrips)
 8000d02:	e056      	b.n	8000db2 <CC_LEDPWM_CntrCalculus+0xd2>
	{
		pStripData->Strip[i].RedCounts=(pStripData->Strip[i].RedDuty*pStripData->Control.BaseCounts)/100;
 8000d04:	201f      	movs	r0, #31
 8000d06:	183b      	adds	r3, r7, r0
 8000d08:	781a      	ldrb	r2, [r3, #0]
 8000d0a:	69bb      	ldr	r3, [r7, #24]
 8000d0c:	0112      	lsls	r2, r2, #4
 8000d0e:	5cd3      	ldrb	r3, [r2, r3]
 8000d10:	0019      	movs	r1, r3
 8000d12:	69bb      	ldr	r3, [r7, #24]
 8000d14:	22a4      	movs	r2, #164	@ 0xa4
 8000d16:	589b      	ldr	r3, [r3, r2]
 8000d18:	434b      	muls	r3, r1
 8000d1a:	001a      	movs	r2, r3
 8000d1c:	0005      	movs	r5, r0
 8000d1e:	183b      	adds	r3, r7, r0
 8000d20:	781c      	ldrb	r4, [r3, #0]
 8000d22:	2164      	movs	r1, #100	@ 0x64
 8000d24:	0010      	movs	r0, r2
 8000d26:	f7ff f9f5 	bl	8000114 <__udivsi3>
 8000d2a:	0003      	movs	r3, r0
 8000d2c:	0019      	movs	r1, r3
 8000d2e:	69ba      	ldr	r2, [r7, #24]
 8000d30:	0123      	lsls	r3, r4, #4
 8000d32:	18d3      	adds	r3, r2, r3
 8000d34:	3304      	adds	r3, #4
 8000d36:	6019      	str	r1, [r3, #0]
		pStripData->Strip[i].GreenCounts=(pStripData->Strip[i].GreenDuty*pStripData->Control.BaseCounts)/100;
 8000d38:	0028      	movs	r0, r5
 8000d3a:	183b      	adds	r3, r7, r0
 8000d3c:	781b      	ldrb	r3, [r3, #0]
 8000d3e:	69ba      	ldr	r2, [r7, #24]
 8000d40:	011b      	lsls	r3, r3, #4
 8000d42:	18d3      	adds	r3, r2, r3
 8000d44:	3301      	adds	r3, #1
 8000d46:	781b      	ldrb	r3, [r3, #0]
 8000d48:	0019      	movs	r1, r3
 8000d4a:	69bb      	ldr	r3, [r7, #24]
 8000d4c:	22a4      	movs	r2, #164	@ 0xa4
 8000d4e:	589b      	ldr	r3, [r3, r2]
 8000d50:	434b      	muls	r3, r1
 8000d52:	001a      	movs	r2, r3
 8000d54:	0005      	movs	r5, r0
 8000d56:	183b      	adds	r3, r7, r0
 8000d58:	781c      	ldrb	r4, [r3, #0]
 8000d5a:	2164      	movs	r1, #100	@ 0x64
 8000d5c:	0010      	movs	r0, r2
 8000d5e:	f7ff f9d9 	bl	8000114 <__udivsi3>
 8000d62:	0003      	movs	r3, r0
 8000d64:	0019      	movs	r1, r3
 8000d66:	69ba      	ldr	r2, [r7, #24]
 8000d68:	0123      	lsls	r3, r4, #4
 8000d6a:	18d3      	adds	r3, r2, r3
 8000d6c:	3308      	adds	r3, #8
 8000d6e:	6019      	str	r1, [r3, #0]
		pStripData->Strip[i].BlueCounts=(pStripData->Strip[i].BlueDuty*pStripData->Control.BaseCounts)/100;
 8000d70:	0028      	movs	r0, r5
 8000d72:	183b      	adds	r3, r7, r0
 8000d74:	781b      	ldrb	r3, [r3, #0]
 8000d76:	69ba      	ldr	r2, [r7, #24]
 8000d78:	011b      	lsls	r3, r3, #4
 8000d7a:	18d3      	adds	r3, r2, r3
 8000d7c:	3302      	adds	r3, #2
 8000d7e:	781b      	ldrb	r3, [r3, #0]
 8000d80:	0019      	movs	r1, r3
 8000d82:	69bb      	ldr	r3, [r7, #24]
 8000d84:	22a4      	movs	r2, #164	@ 0xa4
 8000d86:	589b      	ldr	r3, [r3, r2]
 8000d88:	434b      	muls	r3, r1
 8000d8a:	001a      	movs	r2, r3
 8000d8c:	0005      	movs	r5, r0
 8000d8e:	183b      	adds	r3, r7, r0
 8000d90:	781c      	ldrb	r4, [r3, #0]
 8000d92:	2164      	movs	r1, #100	@ 0x64
 8000d94:	0010      	movs	r0, r2
 8000d96:	f7ff f9bd 	bl	8000114 <__udivsi3>
 8000d9a:	0003      	movs	r3, r0
 8000d9c:	0019      	movs	r1, r3
 8000d9e:	69ba      	ldr	r2, [r7, #24]
 8000da0:	0123      	lsls	r3, r4, #4
 8000da2:	18d3      	adds	r3, r2, r3
 8000da4:	330c      	adds	r3, #12
 8000da6:	6019      	str	r1, [r3, #0]
		i++;
 8000da8:	197b      	adds	r3, r7, r5
 8000daa:	781a      	ldrb	r2, [r3, #0]
 8000dac:	197b      	adds	r3, r7, r5
 8000dae:	3201      	adds	r2, #1
 8000db0:	701a      	strb	r2, [r3, #0]
	while (i<NumStrips)
 8000db2:	231f      	movs	r3, #31
 8000db4:	18fa      	adds	r2, r7, r3
 8000db6:	2317      	movs	r3, #23
 8000db8:	18fb      	adds	r3, r7, r3
 8000dba:	7812      	ldrb	r2, [r2, #0]
 8000dbc:	781b      	ldrb	r3, [r3, #0]
 8000dbe:	429a      	cmp	r2, r3
 8000dc0:	d3a0      	bcc.n	8000d04 <CC_LEDPWM_CntrCalculus+0x24>
	}
}
 8000dc2:	46c0      	nop			@ (mov r8, r8)
 8000dc4:	46c0      	nop			@ (mov r8, r8)
 8000dc6:	46bd      	mov	sp, r7
 8000dc8:	b008      	add	sp, #32
 8000dca:	bdb0      	pop	{r4, r5, r7, pc}

08000dcc <CC_LEDPWM_IncreaseCntr>:

void CC_LEDPWM_IncreaseCntr(void* const param1, void* const param2, void* const param3)
{
 8000dcc:	b580      	push	{r7, lr}
 8000dce:	b086      	sub	sp, #24
 8000dd0:	af00      	add	r7, sp, #0
 8000dd2:	60f8      	str	r0, [r7, #12]
 8000dd4:	60b9      	str	r1, [r7, #8]
 8000dd6:	607a      	str	r2, [r7, #4]
	CC_LEDPWM_SoftPwm_t* const pStripData=(CC_LEDPWM_SoftPwm_t*) param1;
 8000dd8:	68fb      	ldr	r3, [r7, #12]
 8000dda:	617b      	str	r3, [r7, #20]
	pStripData->Control.Counter++;
 8000ddc:	697b      	ldr	r3, [r7, #20]
 8000dde:	22a0      	movs	r2, #160	@ 0xa0
 8000de0:	589b      	ldr	r3, [r3, r2]
 8000de2:	1c5a      	adds	r2, r3, #1
 8000de4:	697b      	ldr	r3, [r7, #20]
 8000de6:	21a0      	movs	r1, #160	@ 0xa0
 8000de8:	505a      	str	r2, [r3, r1]
	if (pStripData->Control.Counter>pStripData->Control.BaseCounts)
 8000dea:	697b      	ldr	r3, [r7, #20]
 8000dec:	22a0      	movs	r2, #160	@ 0xa0
 8000dee:	589a      	ldr	r2, [r3, r2]
 8000df0:	697b      	ldr	r3, [r7, #20]
 8000df2:	21a4      	movs	r1, #164	@ 0xa4
 8000df4:	585b      	ldr	r3, [r3, r1]
 8000df6:	429a      	cmp	r2, r3
 8000df8:	d903      	bls.n	8000e02 <CC_LEDPWM_IncreaseCntr+0x36>
	{
		pStripData->Control.Counter=0;
 8000dfa:	697b      	ldr	r3, [r7, #20]
 8000dfc:	22a0      	movs	r2, #160	@ 0xa0
 8000dfe:	2100      	movs	r1, #0
 8000e00:	5099      	str	r1, [r3, r2]
	}
}
 8000e02:	46c0      	nop			@ (mov r8, r8)
 8000e04:	46bd      	mov	sp, r7
 8000e06:	b006      	add	sp, #24
 8000e08:	bd80      	pop	{r7, pc}
	...

08000e0c <CC_LEDPWM_UpdatePwms>:

void CC_LEDPWM_UpdatePwms(void* const param1, void* const param2, void* const param3)
{
 8000e0c:	b580      	push	{r7, lr}
 8000e0e:	b086      	sub	sp, #24
 8000e10:	af00      	add	r7, sp, #0
 8000e12:	60f8      	str	r0, [r7, #12]
 8000e14:	60b9      	str	r1, [r7, #8]
 8000e16:	607a      	str	r2, [r7, #4]
	const CC_LEDPWM_SoftPwm_t* const pStripData=(CC_LEDPWM_SoftPwm_t*)param1;
 8000e18:	68fb      	ldr	r3, [r7, #12]
 8000e1a:	613b      	str	r3, [r7, #16]
//	const CC_LED_StripLedFuncts_t* const pStripFuncts=(CC_LED_StripLedFuncts_t*)param2;
	uint8_t i=0;
 8000e1c:	2317      	movs	r3, #23
 8000e1e:	18fb      	adds	r3, r7, r3
 8000e20:	2200      	movs	r2, #0
 8000e22:	701a      	strb	r2, [r3, #0]

	while(i<CC_LEDPWM_TOTALSTRIPS)
 8000e24:	e05b      	b.n	8000ede <CC_LEDPWM_UpdatePwms+0xd2>
	{
		if (pStripData->Control.Counter<pStripData->Strip[i].RedCounts)
 8000e26:	693b      	ldr	r3, [r7, #16]
 8000e28:	22a0      	movs	r2, #160	@ 0xa0
 8000e2a:	589a      	ldr	r2, [r3, r2]
 8000e2c:	2017      	movs	r0, #23
 8000e2e:	183b      	adds	r3, r7, r0
 8000e30:	781b      	ldrb	r3, [r3, #0]
 8000e32:	6939      	ldr	r1, [r7, #16]
 8000e34:	011b      	lsls	r3, r3, #4
 8000e36:	18cb      	adds	r3, r1, r3
 8000e38:	3304      	adds	r3, #4
 8000e3a:	681b      	ldr	r3, [r3, #0]
 8000e3c:	429a      	cmp	r2, r3
 8000e3e:	d206      	bcs.n	8000e4e <CC_LEDPWM_UpdatePwms+0x42>
		{
			(*CC_ML_LedsStripsFunctions.pRedLedOnFunction[i])();
 8000e40:	183b      	adds	r3, r7, r0
 8000e42:	781a      	ldrb	r2, [r3, #0]
 8000e44:	4b2b      	ldr	r3, [pc, #172]	@ (8000ef4 <CC_LEDPWM_UpdatePwms+0xe8>)
 8000e46:	0092      	lsls	r2, r2, #2
 8000e48:	58d3      	ldr	r3, [r2, r3]
 8000e4a:	4798      	blx	r3
 8000e4c:	e007      	b.n	8000e5e <CC_LEDPWM_UpdatePwms+0x52>
//			(*pStripFuncts->pRedLedOnFunction[i])();
		}
		else
		{
//			(*pStripFuncts->pRedLedOffFunction[i])();
			(*CC_ML_LedsStripsFunctions.pRedLedOffFunction[i])();
 8000e4e:	2317      	movs	r3, #23
 8000e50:	18fb      	adds	r3, r7, r3
 8000e52:	781a      	ldrb	r2, [r3, #0]
 8000e54:	4b27      	ldr	r3, [pc, #156]	@ (8000ef4 <CC_LEDPWM_UpdatePwms+0xe8>)
 8000e56:	320a      	adds	r2, #10
 8000e58:	0092      	lsls	r2, r2, #2
 8000e5a:	58d3      	ldr	r3, [r2, r3]
 8000e5c:	4798      	blx	r3
		}
		if (pStripData->Control.Counter<pStripData->Strip[i].GreenCounts)
 8000e5e:	693b      	ldr	r3, [r7, #16]
 8000e60:	22a0      	movs	r2, #160	@ 0xa0
 8000e62:	589a      	ldr	r2, [r3, r2]
 8000e64:	2017      	movs	r0, #23
 8000e66:	183b      	adds	r3, r7, r0
 8000e68:	781b      	ldrb	r3, [r3, #0]
 8000e6a:	6939      	ldr	r1, [r7, #16]
 8000e6c:	011b      	lsls	r3, r3, #4
 8000e6e:	18cb      	adds	r3, r1, r3
 8000e70:	3308      	adds	r3, #8
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	429a      	cmp	r2, r3
 8000e76:	d207      	bcs.n	8000e88 <CC_LEDPWM_UpdatePwms+0x7c>
		{
//			(*pStripFuncts->pGreenLedOnFunction[i])();
			(*CC_ML_LedsStripsFunctions.pGreenLedOnFunction[i])();
 8000e78:	183b      	adds	r3, r7, r0
 8000e7a:	781a      	ldrb	r2, [r3, #0]
 8000e7c:	4b1d      	ldr	r3, [pc, #116]	@ (8000ef4 <CC_LEDPWM_UpdatePwms+0xe8>)
 8000e7e:	3214      	adds	r2, #20
 8000e80:	0092      	lsls	r2, r2, #2
 8000e82:	58d3      	ldr	r3, [r2, r3]
 8000e84:	4798      	blx	r3
 8000e86:	e007      	b.n	8000e98 <CC_LEDPWM_UpdatePwms+0x8c>
		}
		else
		{
//			(*pStripFuncts->pGreenLedOffFunction[i])();
			(*CC_ML_LedsStripsFunctions.pGreenLedOffFunction[i])();
 8000e88:	2317      	movs	r3, #23
 8000e8a:	18fb      	adds	r3, r7, r3
 8000e8c:	781a      	ldrb	r2, [r3, #0]
 8000e8e:	4b19      	ldr	r3, [pc, #100]	@ (8000ef4 <CC_LEDPWM_UpdatePwms+0xe8>)
 8000e90:	321e      	adds	r2, #30
 8000e92:	0092      	lsls	r2, r2, #2
 8000e94:	58d3      	ldr	r3, [r2, r3]
 8000e96:	4798      	blx	r3
		}
		if (pStripData->Control.Counter<pStripData->Strip[i].BlueCounts)
 8000e98:	693b      	ldr	r3, [r7, #16]
 8000e9a:	22a0      	movs	r2, #160	@ 0xa0
 8000e9c:	589a      	ldr	r2, [r3, r2]
 8000e9e:	2017      	movs	r0, #23
 8000ea0:	183b      	adds	r3, r7, r0
 8000ea2:	781b      	ldrb	r3, [r3, #0]
 8000ea4:	6939      	ldr	r1, [r7, #16]
 8000ea6:	011b      	lsls	r3, r3, #4
 8000ea8:	18cb      	adds	r3, r1, r3
 8000eaa:	330c      	adds	r3, #12
 8000eac:	681b      	ldr	r3, [r3, #0]
 8000eae:	429a      	cmp	r2, r3
 8000eb0:	d207      	bcs.n	8000ec2 <CC_LEDPWM_UpdatePwms+0xb6>
		{
//			(*pStripFuncts->pBlueLedOnFunction[i])();
			(*CC_ML_LedsStripsFunctions.pBlueLedOnFunction[i])();
 8000eb2:	183b      	adds	r3, r7, r0
 8000eb4:	781a      	ldrb	r2, [r3, #0]
 8000eb6:	4b0f      	ldr	r3, [pc, #60]	@ (8000ef4 <CC_LEDPWM_UpdatePwms+0xe8>)
 8000eb8:	3228      	adds	r2, #40	@ 0x28
 8000eba:	0092      	lsls	r2, r2, #2
 8000ebc:	58d3      	ldr	r3, [r2, r3]
 8000ebe:	4798      	blx	r3
 8000ec0:	e007      	b.n	8000ed2 <CC_LEDPWM_UpdatePwms+0xc6>
		}
		else
		{
//			(*pStripFuncts->pBlueLedOffFunction[i])();
			(*CC_ML_LedsStripsFunctions.pBlueLedOffFunction[i])();
 8000ec2:	2317      	movs	r3, #23
 8000ec4:	18fb      	adds	r3, r7, r3
 8000ec6:	781a      	ldrb	r2, [r3, #0]
 8000ec8:	4b0a      	ldr	r3, [pc, #40]	@ (8000ef4 <CC_LEDPWM_UpdatePwms+0xe8>)
 8000eca:	3232      	adds	r2, #50	@ 0x32
 8000ecc:	0092      	lsls	r2, r2, #2
 8000ece:	58d3      	ldr	r3, [r2, r3]
 8000ed0:	4798      	blx	r3
		}
		i++;
 8000ed2:	2117      	movs	r1, #23
 8000ed4:	187b      	adds	r3, r7, r1
 8000ed6:	781a      	ldrb	r2, [r3, #0]
 8000ed8:	187b      	adds	r3, r7, r1
 8000eda:	3201      	adds	r2, #1
 8000edc:	701a      	strb	r2, [r3, #0]
	while(i<CC_LEDPWM_TOTALSTRIPS)
 8000ede:	2317      	movs	r3, #23
 8000ee0:	18fb      	adds	r3, r7, r3
 8000ee2:	781b      	ldrb	r3, [r3, #0]
 8000ee4:	2b09      	cmp	r3, #9
 8000ee6:	d99e      	bls.n	8000e26 <CC_LEDPWM_UpdatePwms+0x1a>
	}
}
 8000ee8:	46c0      	nop			@ (mov r8, r8)
 8000eea:	46c0      	nop			@ (mov r8, r8)
 8000eec:	46bd      	mov	sp, r7
 8000eee:	b006      	add	sp, #24
 8000ef0:	bd80      	pop	{r7, pc}
 8000ef2:	46c0      	nop			@ (mov r8, r8)
 8000ef4:	08008078 	.word	0x08008078

08000ef8 <CC_SCHDLR_Scheduler>:
//Procedure thought to be executed over a non-stop timer interruption.
//Every time it triggers a task is executed (function or procedures).
//and next execution it will execute next task.
//Up to CC_SCHDLR_MAX_THREADS tasks. Only one every time, but restarting
//when the last is done.
{
 8000ef8:	b590      	push	{r4, r7, lr}
 8000efa:	b087      	sub	sp, #28
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	60f8      	str	r0, [r7, #12]
 8000f00:	60b9      	str	r1, [r7, #8]
 8000f02:	607a      	str	r2, [r7, #4]
	CC_SCHDLR_Scheduler_t* pSchedulerData;

	pSchedulerData = (CC_SCHDLR_Scheduler_t*)pSchedulerStruct;
 8000f04:	68fb      	ldr	r3, [r7, #12]
 8000f06:	617b      	str	r3, [r7, #20]
	((void (*)(void*, void*, void*))pSchedulerData->Task2Launch[pSchedulerData->TaskOngoing].function)	//Task pSchedulerData->TaskOngoing dereferencing and calling
 8000f08:	697b      	ldr	r3, [r7, #20]
 8000f0a:	22b0      	movs	r2, #176	@ 0xb0
 8000f0c:	5c9b      	ldrb	r3, [r3, r2]
 8000f0e:	001a      	movs	r2, r3
 8000f10:	697b      	ldr	r3, [r7, #20]
 8000f12:	0112      	lsls	r2, r2, #4
 8000f14:	58d3      	ldr	r3, [r2, r3]
 8000f16:	001c      	movs	r4, r3
	(
		pSchedulerData->Task2Launch[pSchedulerData->TaskOngoing].input_param1,							//Task pSchedulerData->TaskOngoing parameter 1
 8000f18:	697b      	ldr	r3, [r7, #20]
 8000f1a:	22b0      	movs	r2, #176	@ 0xb0
 8000f1c:	5c9b      	ldrb	r3, [r3, r2]
	((void (*)(void*, void*, void*))pSchedulerData->Task2Launch[pSchedulerData->TaskOngoing].function)	//Task pSchedulerData->TaskOngoing dereferencing and calling
 8000f1e:	697a      	ldr	r2, [r7, #20]
 8000f20:	011b      	lsls	r3, r3, #4
 8000f22:	18d3      	adds	r3, r2, r3
 8000f24:	3304      	adds	r3, #4
 8000f26:	6818      	ldr	r0, [r3, #0]
		pSchedulerData->Task2Launch[pSchedulerData->TaskOngoing].input_param2, 							//Task pSchedulerData->TaskOngoing parameter 2
 8000f28:	697b      	ldr	r3, [r7, #20]
 8000f2a:	22b0      	movs	r2, #176	@ 0xb0
 8000f2c:	5c9b      	ldrb	r3, [r3, r2]
	((void (*)(void*, void*, void*))pSchedulerData->Task2Launch[pSchedulerData->TaskOngoing].function)	//Task pSchedulerData->TaskOngoing dereferencing and calling
 8000f2e:	697a      	ldr	r2, [r7, #20]
 8000f30:	011b      	lsls	r3, r3, #4
 8000f32:	18d3      	adds	r3, r2, r3
 8000f34:	3308      	adds	r3, #8
 8000f36:	6819      	ldr	r1, [r3, #0]
		pSchedulerData->Task2Launch[pSchedulerData->TaskOngoing].input_param3 							//Task pSchedulerData->TaskOngoing parameter 3
 8000f38:	697b      	ldr	r3, [r7, #20]
 8000f3a:	22b0      	movs	r2, #176	@ 0xb0
 8000f3c:	5c9b      	ldrb	r3, [r3, r2]
	((void (*)(void*, void*, void*))pSchedulerData->Task2Launch[pSchedulerData->TaskOngoing].function)	//Task pSchedulerData->TaskOngoing dereferencing and calling
 8000f3e:	697a      	ldr	r2, [r7, #20]
 8000f40:	011b      	lsls	r3, r3, #4
 8000f42:	18d3      	adds	r3, r2, r3
 8000f44:	330c      	adds	r3, #12
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	001a      	movs	r2, r3
 8000f4a:	47a0      	blx	r4
	);
	pSchedulerData->IntCount++;
 8000f4c:	697b      	ldr	r3, [r7, #20]
 8000f4e:	33a8      	adds	r3, #168	@ 0xa8
 8000f50:	681a      	ldr	r2, [r3, #0]
 8000f52:	685b      	ldr	r3, [r3, #4]
 8000f54:	2001      	movs	r0, #1
 8000f56:	2100      	movs	r1, #0
 8000f58:	1812      	adds	r2, r2, r0
 8000f5a:	414b      	adcs	r3, r1
 8000f5c:	6979      	ldr	r1, [r7, #20]
 8000f5e:	31a8      	adds	r1, #168	@ 0xa8
 8000f60:	600a      	str	r2, [r1, #0]
 8000f62:	604b      	str	r3, [r1, #4]
	pSchedulerData->TaskOngoing++;
 8000f64:	697b      	ldr	r3, [r7, #20]
 8000f66:	22b0      	movs	r2, #176	@ 0xb0
 8000f68:	5c9b      	ldrb	r3, [r3, r2]
 8000f6a:	3301      	adds	r3, #1
 8000f6c:	b2d9      	uxtb	r1, r3
 8000f6e:	697b      	ldr	r3, [r7, #20]
 8000f70:	22b0      	movs	r2, #176	@ 0xb0
 8000f72:	5499      	strb	r1, [r3, r2]
	if(pSchedulerData->TaskOngoing==CC_SCHDLR_MAX_THREADS)
 8000f74:	697b      	ldr	r3, [r7, #20]
 8000f76:	22b0      	movs	r2, #176	@ 0xb0
 8000f78:	5c9b      	ldrb	r3, [r3, r2]
 8000f7a:	2b0a      	cmp	r3, #10
 8000f7c:	d103      	bne.n	8000f86 <CC_SCHDLR_Scheduler+0x8e>
	{
		pSchedulerData->TaskOngoing=0;		//Restart tasks
 8000f7e:	697b      	ldr	r3, [r7, #20]
 8000f80:	22b0      	movs	r2, #176	@ 0xb0
 8000f82:	2100      	movs	r1, #0
 8000f84:	5499      	strb	r1, [r3, r2]
	}
	CC_SCHDLR_CheckForSchedulerOverflow(pSchedulerData);
 8000f86:	697b      	ldr	r3, [r7, #20]
 8000f88:	0018      	movs	r0, r3
 8000f8a:	f000 f805 	bl	8000f98 <CC_SCHDLR_CheckForSchedulerOverflow>
}
 8000f8e:	46c0      	nop			@ (mov r8, r8)
 8000f90:	46bd      	mov	sp, r7
 8000f92:	b007      	add	sp, #28
 8000f94:	bd90      	pop	{r4, r7, pc}
	...

08000f98 <CC_SCHDLR_CheckForSchedulerOverflow>:

void CC_SCHDLR_CheckForSchedulerOverflow(CC_SCHDLR_Scheduler_t* const pSchedulerData)
//It is checked if an interrupt happened while ISR is attended.
//It should be used inside the timer's ISR.
{
 8000f98:	b580      	push	{r7, lr}
 8000f9a:	b082      	sub	sp, #8
 8000f9c:	af00      	add	r7, sp, #0
 8000f9e:	6078      	str	r0, [r7, #4]
	if (CC_TMR_CheckTimIntFlag(&CC_ML_SCHEDULER_BASETIME_HANDLER)==1)
 8000fa0:	4b0b      	ldr	r3, [pc, #44]	@ (8000fd0 <CC_SCHDLR_CheckForSchedulerOverflow+0x38>)
 8000fa2:	0018      	movs	r0, r3
 8000fa4:	f000 ff7a 	bl	8001e9c <CC_TMR_CheckTimIntFlag>
 8000fa8:	0003      	movs	r3, r0
 8000faa:	2b01      	cmp	r3, #1
 8000fac:	d10b      	bne.n	8000fc6 <CC_SCHDLR_CheckForSchedulerOverflow+0x2e>
	{
		pSchedulerData->MissIntCnt++;  		//Overflow count
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	33b8      	adds	r3, #184	@ 0xb8
 8000fb2:	681a      	ldr	r2, [r3, #0]
 8000fb4:	685b      	ldr	r3, [r3, #4]
 8000fb6:	2001      	movs	r0, #1
 8000fb8:	2100      	movs	r1, #0
 8000fba:	1812      	adds	r2, r2, r0
 8000fbc:	414b      	adcs	r3, r1
 8000fbe:	6879      	ldr	r1, [r7, #4]
 8000fc0:	31b8      	adds	r1, #184	@ 0xb8
 8000fc2:	600a      	str	r2, [r1, #0]
 8000fc4:	604b      	str	r3, [r1, #4]
	}
}
 8000fc6:	46c0      	nop			@ (mov r8, r8)
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	b002      	add	sp, #8
 8000fcc:	bd80      	pop	{r7, pc}
 8000fce:	46c0      	nop			@ (mov r8, r8)
 8000fd0:	200004b0 	.word	0x200004b0

08000fd4 <CC_SCHDLR_SchedulerUsage>:
//ISR starting, and stop before that.
//Then both counts are compared and the % of time used to execute the current
//scheduler's task is calculated.
//If needed this calculus could be done outside the ISR as it is a float calculus
//and therefore it is slow.
{
 8000fd4:	b590      	push	{r4, r7, lr}
 8000fd6:	b087      	sub	sp, #28
 8000fd8:	af00      	add	r7, sp, #0
 8000fda:	6078      	str	r0, [r7, #4]
 8000fdc:	000a      	movs	r2, r1
 8000fde:	1cfb      	adds	r3, r7, #3
 8000fe0:	701a      	strb	r2, [r3, #0]
	uint32_t ControllerTimerCounts;
	uint32_t SchedulerTimerTotalCounts;
	float usage;

	ControllerTimerCounts=CC_ML_GetTimerElapsedCounts(&CC_ML_SCHEDULER_CHRONO_HANDLER);
 8000fe2:	4b1c      	ldr	r3, [pc, #112]	@ (8001054 <CC_SCHDLR_SchedulerUsage+0x80>)
 8000fe4:	0018      	movs	r0, r3
 8000fe6:	f001 f83e 	bl	8002066 <CC_ML_GetTimerElapsedCounts>
 8000fea:	0003      	movs	r3, r0
 8000fec:	617b      	str	r3, [r7, #20]
	pSchedulerControl->TaskUsageCounts[task_number]=ControllerTimerCounts;
 8000fee:	1cfb      	adds	r3, r7, #3
 8000ff0:	781a      	ldrb	r2, [r3, #0]
 8000ff2:	687b      	ldr	r3, [r7, #4]
 8000ff4:	320a      	adds	r2, #10
 8000ff6:	0092      	lsls	r2, r2, #2
 8000ff8:	6979      	ldr	r1, [r7, #20]
 8000ffa:	50d1      	str	r1, [r2, r3]
	SchedulerTimerTotalCounts=CC_ML_GetTimerLimitCounts(&CC_ML_SCHEDULER_BASETIME_HANDLER);
 8000ffc:	4b16      	ldr	r3, [pc, #88]	@ (8001058 <CC_SCHDLR_SchedulerUsage+0x84>)
 8000ffe:	0018      	movs	r0, r3
 8001000:	f001 f83e 	bl	8002080 <CC_ML_GetTimerLimitCounts>
 8001004:	0003      	movs	r3, r0
 8001006:	613b      	str	r3, [r7, #16]
	pSchedulerControl->TotalAvailableCounts[task_number]=SchedulerTimerTotalCounts;
 8001008:	1cfb      	adds	r3, r7, #3
 800100a:	781a      	ldrb	r2, [r3, #0]
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	3214      	adds	r2, #20
 8001010:	0092      	lsls	r2, r2, #2
 8001012:	6939      	ldr	r1, [r7, #16]
 8001014:	50d1      	str	r1, [r2, r3]
	usage=((float)ControllerTimerCounts)/((float)SchedulerTimerTotalCounts);
 8001016:	6978      	ldr	r0, [r7, #20]
 8001018:	f7ff fd3c 	bl	8000a94 <__aeabi_ui2f>
 800101c:	1c04      	adds	r4, r0, #0
 800101e:	6938      	ldr	r0, [r7, #16]
 8001020:	f7ff fd38 	bl	8000a94 <__aeabi_ui2f>
 8001024:	1c03      	adds	r3, r0, #0
 8001026:	1c19      	adds	r1, r3, #0
 8001028:	1c20      	adds	r0, r4, #0
 800102a:	f7ff fad5 	bl	80005d8 <__aeabi_fdiv>
 800102e:	1c03      	adds	r3, r0, #0
 8001030:	60fb      	str	r3, [r7, #12]
	usage=usage*100.0;
 8001032:	490a      	ldr	r1, [pc, #40]	@ (800105c <CC_SCHDLR_SchedulerUsage+0x88>)
 8001034:	68f8      	ldr	r0, [r7, #12]
 8001036:	f7ff fbef 	bl	8000818 <__aeabi_fmul>
 800103a:	1c03      	adds	r3, r0, #0
 800103c:	60fb      	str	r3, [r7, #12]
	pSchedulerControl->TaskUsageRatio[task_number]=usage;
 800103e:	1cfb      	adds	r3, r7, #3
 8001040:	781a      	ldrb	r2, [r3, #0]
 8001042:	687b      	ldr	r3, [r7, #4]
 8001044:	0092      	lsls	r2, r2, #2
 8001046:	68f9      	ldr	r1, [r7, #12]
 8001048:	50d1      	str	r1, [r2, r3]
}
 800104a:	46c0      	nop			@ (mov r8, r8)
 800104c:	46bd      	mov	sp, r7
 800104e:	b007      	add	sp, #28
 8001050:	bd90      	pop	{r4, r7, pc}
 8001052:	46c0      	nop			@ (mov r8, r8)
 8001054:	20000418 	.word	0x20000418
 8001058:	200004b0 	.word	0x200004b0
 800105c:	42c80000 	.word	0x42c80000

08001060 <CC_SCHDLR_InitFastScheduler>:

void CC_SCHDLR_InitFastScheduler(CC_SCHDLR_Scheduler_t* const data)
//Loading the scheduler's structure with functions and/or procedures to launch,
//and also their parameters.
//Void pointers to be able to launch different kinds of functions.
{
 8001060:	b580      	push	{r7, lr}
 8001062:	b084      	sub	sp, #16
 8001064:	af00      	add	r7, sp, #0
 8001066:	6078      	str	r0, [r7, #4]
	void (*pfunction) (void*, void*, void*);		//Pointer to void function with 3 void pointers as a parameters
	CC_SCHDLR_Scheduler_t* pNestedScheduler;	//Pointer to nested scheduler data

	data->TaskOngoing=0;
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	22b0      	movs	r2, #176	@ 0xb0
 800106c:	2100      	movs	r1, #0
 800106e:	5499      	strb	r1, [r3, r2]
	data->IntCount=0;
 8001070:	687b      	ldr	r3, [r7, #4]
 8001072:	33a8      	adds	r3, #168	@ 0xa8
 8001074:	0019      	movs	r1, r3
 8001076:	2200      	movs	r2, #0
 8001078:	2300      	movs	r3, #0
 800107a:	600a      	str	r2, [r1, #0]
 800107c:	604b      	str	r3, [r1, #4]
	data->MissIntCnt=0;
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	33b8      	adds	r3, #184	@ 0xb8
 8001082:	0019      	movs	r1, r3
 8001084:	2200      	movs	r2, #0
 8001086:	2300      	movs	r3, #0
 8001088:	600a      	str	r2, [r1, #0]
 800108a:	604b      	str	r3, [r1, #4]
	data->BaseTimems=CC_SCHDLR_BASE_TIME;
 800108c:	687b      	ldr	r3, [r7, #4]
 800108e:	22a0      	movs	r2, #160	@ 0xa0
 8001090:	2101      	movs	r1, #1
 8001092:	5499      	strb	r1, [r3, r2]

	pfunction=&CC_APP_Nop;										//Task0 initialization
 8001094:	4b4c      	ldr	r3, [pc, #304]	@ (80011c8 <CC_SCHDLR_InitFastScheduler+0x168>)
 8001096:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[0].function=(void*)pfunction;
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	68fa      	ldr	r2, [r7, #12]
 800109c:	601a      	str	r2, [r3, #0]
	data->Task2Launch[0].input_param1=(void*)NULL;
 800109e:	687b      	ldr	r3, [r7, #4]
 80010a0:	2200      	movs	r2, #0
 80010a2:	605a      	str	r2, [r3, #4]
	data->Task2Launch[0].input_param2=(void*)NULL;
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	2200      	movs	r2, #0
 80010a8:	609a      	str	r2, [r3, #8]
	data->Task2Launch[0].input_param3=(void*)NULL;
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	2200      	movs	r2, #0
 80010ae:	60da      	str	r2, [r3, #12]

	pfunction=&CC_APP_Nop;										//Task1 initialization
 80010b0:	4b45      	ldr	r3, [pc, #276]	@ (80011c8 <CC_SCHDLR_InitFastScheduler+0x168>)
 80010b2:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[1].function=(void*)pfunction;
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	68fa      	ldr	r2, [r7, #12]
 80010b8:	611a      	str	r2, [r3, #16]
	data->Task2Launch[1].input_param1=(void*)NULL;
 80010ba:	687b      	ldr	r3, [r7, #4]
 80010bc:	2200      	movs	r2, #0
 80010be:	615a      	str	r2, [r3, #20]
	data->Task2Launch[1].input_param2=(void*)NULL;
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	2200      	movs	r2, #0
 80010c4:	619a      	str	r2, [r3, #24]
	data->Task2Launch[1].input_param3=(void*)NULL;
 80010c6:	687b      	ldr	r3, [r7, #4]
 80010c8:	2200      	movs	r2, #0
 80010ca:	61da      	str	r2, [r3, #28]

	pfunction=&CC_APP_Nop;										//Task2 initialization
 80010cc:	4b3e      	ldr	r3, [pc, #248]	@ (80011c8 <CC_SCHDLR_InitFastScheduler+0x168>)
 80010ce:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[2].function=(void*)pfunction;
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	68fa      	ldr	r2, [r7, #12]
 80010d4:	621a      	str	r2, [r3, #32]
	data->Task2Launch[2].input_param1=(void*)NULL;
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	2200      	movs	r2, #0
 80010da:	625a      	str	r2, [r3, #36]	@ 0x24
	data->Task2Launch[2].input_param2=(void*)NULL;
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	2200      	movs	r2, #0
 80010e0:	629a      	str	r2, [r3, #40]	@ 0x28
	data->Task2Launch[2].input_param3=(void*)NULL;
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	2200      	movs	r2, #0
 80010e6:	62da      	str	r2, [r3, #44]	@ 0x2c

	pfunction=&CC_APP_Nop;										//Task3 initialization
 80010e8:	4b37      	ldr	r3, [pc, #220]	@ (80011c8 <CC_SCHDLR_InitFastScheduler+0x168>)
 80010ea:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[3].function=(void*)pfunction;
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	68fa      	ldr	r2, [r7, #12]
 80010f0:	631a      	str	r2, [r3, #48]	@ 0x30
	data->Task2Launch[3].input_param1=(void*)NULL;
 80010f2:	687b      	ldr	r3, [r7, #4]
 80010f4:	2200      	movs	r2, #0
 80010f6:	635a      	str	r2, [r3, #52]	@ 0x34
	data->Task2Launch[3].input_param2=(void*)NULL;
 80010f8:	687b      	ldr	r3, [r7, #4]
 80010fa:	2200      	movs	r2, #0
 80010fc:	639a      	str	r2, [r3, #56]	@ 0x38
	data->Task2Launch[3].input_param3=(void*)NULL;
 80010fe:	687b      	ldr	r3, [r7, #4]
 8001100:	2200      	movs	r2, #0
 8001102:	63da      	str	r2, [r3, #60]	@ 0x3c

	pfunction=&CC_APP_Nop;										//Task4 initialization
 8001104:	4b30      	ldr	r3, [pc, #192]	@ (80011c8 <CC_SCHDLR_InitFastScheduler+0x168>)
 8001106:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[4].function=(void*)pfunction;
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	68fa      	ldr	r2, [r7, #12]
 800110c:	641a      	str	r2, [r3, #64]	@ 0x40
	data->Task2Launch[4].input_param1=(void*)NULL;
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	2200      	movs	r2, #0
 8001112:	645a      	str	r2, [r3, #68]	@ 0x44
	data->Task2Launch[4].input_param2=(void*)NULL;
 8001114:	687b      	ldr	r3, [r7, #4]
 8001116:	2200      	movs	r2, #0
 8001118:	649a      	str	r2, [r3, #72]	@ 0x48
	data->Task2Launch[4].input_param3=(void*)NULL;
 800111a:	687b      	ldr	r3, [r7, #4]
 800111c:	2200      	movs	r2, #0
 800111e:	64da      	str	r2, [r3, #76]	@ 0x4c

	pfunction=&CC_APP_Nop;										//Task5 initialization
 8001120:	4b29      	ldr	r3, [pc, #164]	@ (80011c8 <CC_SCHDLR_InitFastScheduler+0x168>)
 8001122:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[5].function=(void*)pfunction;
 8001124:	687b      	ldr	r3, [r7, #4]
 8001126:	68fa      	ldr	r2, [r7, #12]
 8001128:	651a      	str	r2, [r3, #80]	@ 0x50
	data->Task2Launch[5].input_param1=(void*)NULL;
 800112a:	687b      	ldr	r3, [r7, #4]
 800112c:	2200      	movs	r2, #0
 800112e:	655a      	str	r2, [r3, #84]	@ 0x54
	data->Task2Launch[5].input_param2=(void*)NULL;
 8001130:	687b      	ldr	r3, [r7, #4]
 8001132:	2200      	movs	r2, #0
 8001134:	659a      	str	r2, [r3, #88]	@ 0x58
	data->Task2Launch[5].input_param3=(void*)NULL;
 8001136:	687b      	ldr	r3, [r7, #4]
 8001138:	2200      	movs	r2, #0
 800113a:	65da      	str	r2, [r3, #92]	@ 0x5c

	pfunction=&CC_APP_Nop;										//Task6 initialization
 800113c:	4b22      	ldr	r3, [pc, #136]	@ (80011c8 <CC_SCHDLR_InitFastScheduler+0x168>)
 800113e:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[6].function=(void*)pfunction;
 8001140:	687b      	ldr	r3, [r7, #4]
 8001142:	68fa      	ldr	r2, [r7, #12]
 8001144:	661a      	str	r2, [r3, #96]	@ 0x60
	data->Task2Launch[6].input_param1=(void*)NULL;
 8001146:	687b      	ldr	r3, [r7, #4]
 8001148:	2200      	movs	r2, #0
 800114a:	665a      	str	r2, [r3, #100]	@ 0x64
	data->Task2Launch[6].input_param2=(void*)NULL;
 800114c:	687b      	ldr	r3, [r7, #4]
 800114e:	2200      	movs	r2, #0
 8001150:	669a      	str	r2, [r3, #104]	@ 0x68
	data->Task2Launch[6].input_param3=(void*)NULL;
 8001152:	687b      	ldr	r3, [r7, #4]
 8001154:	2200      	movs	r2, #0
 8001156:	66da      	str	r2, [r3, #108]	@ 0x6c

	pfunction=&CC_APP_Nop;										//Task7 initialization
 8001158:	4b1b      	ldr	r3, [pc, #108]	@ (80011c8 <CC_SCHDLR_InitFastScheduler+0x168>)
 800115a:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[7].function=(void*)pfunction;
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	68fa      	ldr	r2, [r7, #12]
 8001160:	671a      	str	r2, [r3, #112]	@ 0x70
	data->Task2Launch[7].input_param1=(void*)NULL;
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	2200      	movs	r2, #0
 8001166:	675a      	str	r2, [r3, #116]	@ 0x74
	data->Task2Launch[7].input_param2=(void*)NULL;
 8001168:	687b      	ldr	r3, [r7, #4]
 800116a:	2200      	movs	r2, #0
 800116c:	679a      	str	r2, [r3, #120]	@ 0x78
	data->Task2Launch[7].input_param3=(void*)NULL;
 800116e:	687b      	ldr	r3, [r7, #4]
 8001170:	2200      	movs	r2, #0
 8001172:	67da      	str	r2, [r3, #124]	@ 0x7c

	pfunction=&CC_APP_Nop;										//Task8 initialization
 8001174:	4b14      	ldr	r3, [pc, #80]	@ (80011c8 <CC_SCHDLR_InitFastScheduler+0x168>)
 8001176:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[8].function=(void*)pfunction;
 8001178:	687b      	ldr	r3, [r7, #4]
 800117a:	2180      	movs	r1, #128	@ 0x80
 800117c:	68fa      	ldr	r2, [r7, #12]
 800117e:	505a      	str	r2, [r3, r1]
	data->Task2Launch[8].input_param1=(void*)NULL;
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	2284      	movs	r2, #132	@ 0x84
 8001184:	2100      	movs	r1, #0
 8001186:	5099      	str	r1, [r3, r2]
	data->Task2Launch[8].input_param2=(void*)NULL;
 8001188:	687b      	ldr	r3, [r7, #4]
 800118a:	2288      	movs	r2, #136	@ 0x88
 800118c:	2100      	movs	r1, #0
 800118e:	5099      	str	r1, [r3, r2]
	data->Task2Launch[8].input_param3=(void*)NULL;
 8001190:	687b      	ldr	r3, [r7, #4]
 8001192:	228c      	movs	r2, #140	@ 0x8c
 8001194:	2100      	movs	r1, #0
 8001196:	5099      	str	r1, [r3, r2]


	pfunction=&CC_SCHDLR_Scheduler;								//Task9 initialization. Nested scheduler
 8001198:	4b0c      	ldr	r3, [pc, #48]	@ (80011cc <CC_SCHDLR_InitFastScheduler+0x16c>)
 800119a:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[9].function=(void*)pfunction;
 800119c:	687b      	ldr	r3, [r7, #4]
 800119e:	2190      	movs	r1, #144	@ 0x90
 80011a0:	68fa      	ldr	r2, [r7, #12]
 80011a2:	505a      	str	r2, [r3, r1]
	pNestedScheduler=&CC_SCHDLR_SlowScheduler;
 80011a4:	4b0a      	ldr	r3, [pc, #40]	@ (80011d0 <CC_SCHDLR_InitFastScheduler+0x170>)
 80011a6:	60bb      	str	r3, [r7, #8]
	data->Task2Launch[9].input_param1=(void*)pNestedScheduler;
 80011a8:	687b      	ldr	r3, [r7, #4]
 80011aa:	2194      	movs	r1, #148	@ 0x94
 80011ac:	68ba      	ldr	r2, [r7, #8]
 80011ae:	505a      	str	r2, [r3, r1]
	data->Task2Launch[9].input_param2=(void*)NULL;
 80011b0:	687b      	ldr	r3, [r7, #4]
 80011b2:	2298      	movs	r2, #152	@ 0x98
 80011b4:	2100      	movs	r1, #0
 80011b6:	5099      	str	r1, [r3, r2]
	data->Task2Launch[9].input_param3=(void*)NULL;
 80011b8:	687b      	ldr	r3, [r7, #4]
 80011ba:	229c      	movs	r2, #156	@ 0x9c
 80011bc:	2100      	movs	r1, #0
 80011be:	5099      	str	r1, [r3, r2]

	//HAL_IWDG_Refresh(&hiwdg);						//Watchdog refresh
}
 80011c0:	46c0      	nop			@ (mov r8, r8)
 80011c2:	46bd      	mov	sp, r7
 80011c4:	b004      	add	sp, #16
 80011c6:	bd80      	pop	{r7, pc}
 80011c8:	08000b6d 	.word	0x08000b6d
 80011cc:	08000ef9 	.word	0x08000ef9
 80011d0:	20000200 	.word	0x20000200

080011d4 <CC_SCHDLR_InitSlowScheduler>:

void CC_SCHDLR_InitSlowScheduler(CC_SCHDLR_Scheduler_t* const data)
//Loading the scheduler's structure with functions and/or procedures to launch,
//and also their parameters.
//Void pointers to be able to launch different kinds of functions.
{
 80011d4:	b580      	push	{r7, lr}
 80011d6:	b08a      	sub	sp, #40	@ 0x28
 80011d8:	af00      	add	r7, sp, #0
 80011da:	6078      	str	r0, [r7, #4]
	FDCAN_HandleTypeDef* 	pFDCAN_HandleTypeDef;	//Pointer FDCAN_HandleTypeDef
	FDCAN_TxHeaderTypeDef* 	pFDCAN_TxHeaderTypeDef;	//Pointer FDCAN_TxHeaderTypeDef
	CC_LEDPWM_SoftPwm_t* 	pCC_LEDPWM_SoftPwm;		//Pointer to strip leds control data
	const uint8_t* 			puint8_2;				//Constant pointer to a constant uint8_t data

	data->TaskOngoing=0;							//AIXO HO VULL A FORA. PEL NESTED ES RARO
 80011dc:	687b      	ldr	r3, [r7, #4]
 80011de:	22b0      	movs	r2, #176	@ 0xb0
 80011e0:	2100      	movs	r1, #0
 80011e2:	5499      	strb	r1, [r3, r2]
	data->IntCount=0;
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	33a8      	adds	r3, #168	@ 0xa8
 80011e8:	0019      	movs	r1, r3
 80011ea:	2200      	movs	r2, #0
 80011ec:	2300      	movs	r3, #0
 80011ee:	600a      	str	r2, [r1, #0]
 80011f0:	604b      	str	r3, [r1, #4]
	data->MissIntCnt=0;
 80011f2:	687b      	ldr	r3, [r7, #4]
 80011f4:	33b8      	adds	r3, #184	@ 0xb8
 80011f6:	0019      	movs	r1, r3
 80011f8:	2200      	movs	r2, #0
 80011fa:	2300      	movs	r3, #0
 80011fc:	600a      	str	r2, [r1, #0]
 80011fe:	604b      	str	r3, [r1, #4]
	data->BaseTimems=CC_SCHDLR_BASE_TIME*CC_SCHDLR_MAX_THREADS;
 8001200:	687b      	ldr	r3, [r7, #4]
 8001202:	22a0      	movs	r2, #160	@ 0xa0
 8001204:	210a      	movs	r1, #10
 8001206:	5499      	strb	r1, [r3, r2]

	pfunction=&CC_APP_BoardLedBlinking;							//Task9.0 initialization. Led blinking
 8001208:	4b54      	ldr	r3, [pc, #336]	@ (800135c <CC_SCHDLR_InitSlowScheduler+0x188>)
 800120a:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[0].function=(void*)pfunction;
 800120c:	687b      	ldr	r3, [r7, #4]
 800120e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001210:	601a      	str	r2, [r3, #0]
	puint8=&CC_APP_BlinkCnts;
 8001212:	4b53      	ldr	r3, [pc, #332]	@ (8001360 <CC_SCHDLR_InitSlowScheduler+0x18c>)
 8001214:	623b      	str	r3, [r7, #32]
	data->Task2Launch[0].input_param1=(void*)puint8;
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	6a3a      	ldr	r2, [r7, #32]
 800121a:	605a      	str	r2, [r3, #4]
	data->Task2Launch[0].input_param2=(void*)NULL;
 800121c:	687b      	ldr	r3, [r7, #4]
 800121e:	2200      	movs	r2, #0
 8001220:	609a      	str	r2, [r3, #8]
	data->Task2Launch[0].input_param3=(void*)NULL;
 8001222:	687b      	ldr	r3, [r7, #4]
 8001224:	2200      	movs	r2, #0
 8001226:	60da      	str	r2, [r3, #12]

	pfunction=&CC_ML_GetDipSwitch4pos;							//Task9.1 initialization. DIP-Switch update
 8001228:	4b4e      	ldr	r3, [pc, #312]	@ (8001364 <CC_SCHDLR_InitSlowScheduler+0x190>)
 800122a:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[1].function=(void*) pfunction;
 800122c:	687b      	ldr	r3, [r7, #4]
 800122e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001230:	611a      	str	r2, [r3, #16]
	pCC_DIPSW_DipSw=&CC_DIPSW_DipSwitch;
 8001232:	4b4d      	ldr	r3, [pc, #308]	@ (8001368 <CC_SCHDLR_InitSlowScheduler+0x194>)
 8001234:	61fb      	str	r3, [r7, #28]
	data->Task2Launch[1].input_param1=(void*)pCC_DIPSW_DipSw;
 8001236:	687b      	ldr	r3, [r7, #4]
 8001238:	69fa      	ldr	r2, [r7, #28]
 800123a:	615a      	str	r2, [r3, #20]
	data->Task2Launch[1].input_param2=(void*)NULL;
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	2200      	movs	r2, #0
 8001240:	619a      	str	r2, [r3, #24]
	data->Task2Launch[1].input_param3=(void*)NULL;
 8001242:	687b      	ldr	r3, [r7, #4]
 8001244:	2200      	movs	r2, #0
 8001246:	61da      	str	r2, [r3, #28]

	pfunction=&CC_ML_UpdateIdSysFromDipSwitch;					//Task9.2 initialization. Board Id update from DIP-Switch
 8001248:	4b48      	ldr	r3, [pc, #288]	@ (800136c <CC_SCHDLR_InitSlowScheduler+0x198>)
 800124a:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[2].function=(void*)pfunction;
 800124c:	687b      	ldr	r3, [r7, #4]
 800124e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001250:	621a      	str	r2, [r3, #32]
	pCC_DIPSW_DipSw=&CC_DIPSW_DipSwitch;
 8001252:	4b45      	ldr	r3, [pc, #276]	@ (8001368 <CC_SCHDLR_InitSlowScheduler+0x194>)
 8001254:	61fb      	str	r3, [r7, #28]
	pCC_SYS_Config=&CC_APP_BoardData;
 8001256:	4b46      	ldr	r3, [pc, #280]	@ (8001370 <CC_SCHDLR_InitSlowScheduler+0x19c>)
 8001258:	61bb      	str	r3, [r7, #24]
	data->Task2Launch[2].input_param1=(void*)pCC_SYS_Config;
 800125a:	687b      	ldr	r3, [r7, #4]
 800125c:	69ba      	ldr	r2, [r7, #24]
 800125e:	625a      	str	r2, [r3, #36]	@ 0x24
	data->Task2Launch[2].input_param2=(void*)pCC_DIPSW_DipSw;
 8001260:	687b      	ldr	r3, [r7, #4]
 8001262:	69fa      	ldr	r2, [r7, #28]
 8001264:	629a      	str	r2, [r3, #40]	@ 0x28
	data->Task2Launch[2].input_param3=(void*)NULL;
 8001266:	687b      	ldr	r3, [r7, #4]
 8001268:	2200      	movs	r2, #0
 800126a:	62da      	str	r2, [r3, #44]	@ 0x2c

	pfunction=&CC_SM_UsartSM;									//Task9.3 initialization. USART state machine
 800126c:	4b41      	ldr	r3, [pc, #260]	@ (8001374 <CC_SCHDLR_InitSlowScheduler+0x1a0>)
 800126e:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[3].function=(void*)pfunction;
 8001270:	687b      	ldr	r3, [r7, #4]
 8001272:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001274:	631a      	str	r2, [r3, #48]	@ 0x30
	data->Task2Launch[3].input_param1=(void*)NULL;
 8001276:	687b      	ldr	r3, [r7, #4]
 8001278:	2200      	movs	r2, #0
 800127a:	635a      	str	r2, [r3, #52]	@ 0x34
	data->Task2Launch[3].input_param2=(void*)NULL;
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	2200      	movs	r2, #0
 8001280:	639a      	str	r2, [r3, #56]	@ 0x38
	data->Task2Launch[3].input_param3=(void*)NULL;
 8001282:	687b      	ldr	r3, [r7, #4]
 8001284:	2200      	movs	r2, #0
 8001286:	63da      	str	r2, [r3, #60]	@ 0x3c

	pfunction=&CC_ML_SendMessageCAN;							//Task9.4 initialization. Send CAN
 8001288:	4b3b      	ldr	r3, [pc, #236]	@ (8001378 <CC_SCHDLR_InitSlowScheduler+0x1a4>)
 800128a:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[4].function=(void*)pfunction;
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001290:	641a      	str	r2, [r3, #64]	@ 0x40
	pFDCAN_HandleTypeDef=&hfdcan2;
 8001292:	4b3a      	ldr	r3, [pc, #232]	@ (800137c <CC_SCHDLR_InitSlowScheduler+0x1a8>)
 8001294:	617b      	str	r3, [r7, #20]
	pFDCAN_TxHeaderTypeDef=&CC_CAN_TxHeader;
 8001296:	4b3a      	ldr	r3, [pc, #232]	@ (8001380 <CC_SCHDLR_InitSlowScheduler+0x1ac>)
 8001298:	613b      	str	r3, [r7, #16]
	puint8=CC_CAN_TxData;
 800129a:	4b3a      	ldr	r3, [pc, #232]	@ (8001384 <CC_SCHDLR_InitSlowScheduler+0x1b0>)
 800129c:	623b      	str	r3, [r7, #32]
	data->Task2Launch[4].input_param1=(void*)pFDCAN_HandleTypeDef;
 800129e:	687b      	ldr	r3, [r7, #4]
 80012a0:	697a      	ldr	r2, [r7, #20]
 80012a2:	645a      	str	r2, [r3, #68]	@ 0x44
	data->Task2Launch[4].input_param2=(void*)pFDCAN_TxHeaderTypeDef;
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	693a      	ldr	r2, [r7, #16]
 80012a8:	649a      	str	r2, [r3, #72]	@ 0x48
	data->Task2Launch[4].input_param3=(void*)puint8;
 80012aa:	687b      	ldr	r3, [r7, #4]
 80012ac:	6a3a      	ldr	r2, [r7, #32]
 80012ae:	64da      	str	r2, [r3, #76]	@ 0x4c

	pfunction=&CC_LEDPWM_CntrCalculus;										//Task9.5 initialization
 80012b0:	4b35      	ldr	r3, [pc, #212]	@ (8001388 <CC_SCHDLR_InitSlowScheduler+0x1b4>)
 80012b2:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[5].function=(void*)pfunction;
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80012b8:	651a      	str	r2, [r3, #80]	@ 0x50
	pCC_LEDPWM_SoftPwm=&CC_LEDPWM_Strip;
 80012ba:	4b34      	ldr	r3, [pc, #208]	@ (800138c <CC_SCHDLR_InitSlowScheduler+0x1b8>)
 80012bc:	60fb      	str	r3, [r7, #12]
	data->Task2Launch[5].input_param1=(void*)pCC_LEDPWM_SoftPwm;
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	68fa      	ldr	r2, [r7, #12]
 80012c2:	655a      	str	r2, [r3, #84]	@ 0x54
	puint8_2=&CC_LEDPWM_TotalStrips;
 80012c4:	4b32      	ldr	r3, [pc, #200]	@ (8001390 <CC_SCHDLR_InitSlowScheduler+0x1bc>)
 80012c6:	60bb      	str	r3, [r7, #8]
	data->Task2Launch[5].input_param2=(void*)puint8_2;
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	68ba      	ldr	r2, [r7, #8]
 80012cc:	659a      	str	r2, [r3, #88]	@ 0x58
	data->Task2Launch[5].input_param3=(void*)NULL;
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	2200      	movs	r2, #0
 80012d2:	65da      	str	r2, [r3, #92]	@ 0x5c

	pfunction=&CC_APP_Nop;										//Task9.6 initialization
 80012d4:	4b2f      	ldr	r3, [pc, #188]	@ (8001394 <CC_SCHDLR_InitSlowScheduler+0x1c0>)
 80012d6:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[6].function=(void*)pfunction;
 80012d8:	687b      	ldr	r3, [r7, #4]
 80012da:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80012dc:	661a      	str	r2, [r3, #96]	@ 0x60
	data->Task2Launch[6].input_param1=(void*)NULL;
 80012de:	687b      	ldr	r3, [r7, #4]
 80012e0:	2200      	movs	r2, #0
 80012e2:	665a      	str	r2, [r3, #100]	@ 0x64
	data->Task2Launch[6].input_param2=(void*)NULL;
 80012e4:	687b      	ldr	r3, [r7, #4]
 80012e6:	2200      	movs	r2, #0
 80012e8:	669a      	str	r2, [r3, #104]	@ 0x68
	data->Task2Launch[6].input_param3=(void*)NULL;
 80012ea:	687b      	ldr	r3, [r7, #4]
 80012ec:	2200      	movs	r2, #0
 80012ee:	66da      	str	r2, [r3, #108]	@ 0x6c

	pfunction=&CC_APP_Nop;										//Task9.7 initialization
 80012f0:	4b28      	ldr	r3, [pc, #160]	@ (8001394 <CC_SCHDLR_InitSlowScheduler+0x1c0>)
 80012f2:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[7].function=(void*)pfunction;
 80012f4:	687b      	ldr	r3, [r7, #4]
 80012f6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80012f8:	671a      	str	r2, [r3, #112]	@ 0x70
	data->Task2Launch[7].input_param1=(void*)NULL;
 80012fa:	687b      	ldr	r3, [r7, #4]
 80012fc:	2200      	movs	r2, #0
 80012fe:	675a      	str	r2, [r3, #116]	@ 0x74
	data->Task2Launch[7].input_param2=(void*)NULL;
 8001300:	687b      	ldr	r3, [r7, #4]
 8001302:	2200      	movs	r2, #0
 8001304:	679a      	str	r2, [r3, #120]	@ 0x78
	data->Task2Launch[7].input_param3=(void*)NULL;
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	2200      	movs	r2, #0
 800130a:	67da      	str	r2, [r3, #124]	@ 0x7c

	pfunction=&CC_APP_Nop;										//Task9.8 initialization
 800130c:	4b21      	ldr	r3, [pc, #132]	@ (8001394 <CC_SCHDLR_InitSlowScheduler+0x1c0>)
 800130e:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[8].function=(void*)pfunction;
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	2180      	movs	r1, #128	@ 0x80
 8001314:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001316:	505a      	str	r2, [r3, r1]
	data->Task2Launch[8].input_param1=(void*)NULL;
 8001318:	687b      	ldr	r3, [r7, #4]
 800131a:	2284      	movs	r2, #132	@ 0x84
 800131c:	2100      	movs	r1, #0
 800131e:	5099      	str	r1, [r3, r2]
	data->Task2Launch[8].input_param2=(void*)NULL;
 8001320:	687b      	ldr	r3, [r7, #4]
 8001322:	2288      	movs	r2, #136	@ 0x88
 8001324:	2100      	movs	r1, #0
 8001326:	5099      	str	r1, [r3, r2]
	data->Task2Launch[8].input_param3=(void*)NULL;
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	228c      	movs	r2, #140	@ 0x8c
 800132c:	2100      	movs	r1, #0
 800132e:	5099      	str	r1, [r3, r2]

	pfunction=&CC_APP_Nop;										//Task9.9 initialization
 8001330:	4b18      	ldr	r3, [pc, #96]	@ (8001394 <CC_SCHDLR_InitSlowScheduler+0x1c0>)
 8001332:	627b      	str	r3, [r7, #36]	@ 0x24
	data->Task2Launch[9].function=(void*)pfunction;
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	2190      	movs	r1, #144	@ 0x90
 8001338:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800133a:	505a      	str	r2, [r3, r1]
	data->Task2Launch[9].input_param1=(void*)NULL;
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	2294      	movs	r2, #148	@ 0x94
 8001340:	2100      	movs	r1, #0
 8001342:	5099      	str	r1, [r3, r2]
	data->Task2Launch[9].input_param2=(void*)NULL;
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	2298      	movs	r2, #152	@ 0x98
 8001348:	2100      	movs	r1, #0
 800134a:	5099      	str	r1, [r3, r2]
	data->Task2Launch[9].input_param3=(void*)NULL;
 800134c:	687b      	ldr	r3, [r7, #4]
 800134e:	229c      	movs	r2, #156	@ 0x9c
 8001350:	2100      	movs	r1, #0
 8001352:	5099      	str	r1, [r3, r2]
}
 8001354:	46c0      	nop			@ (mov r8, r8)
 8001356:	46bd      	mov	sp, r7
 8001358:	b00a      	add	sp, #40	@ 0x28
 800135a:	bd80      	pop	{r7, pc}
 800135c:	08000b85 	.word	0x08000b85
 8001360:	20000000 	.word	0x20000000
 8001364:	08002021 	.word	0x08002021
 8001368:	20000398 	.word	0x20000398
 800136c:	08002041 	.word	0x08002041
 8001370:	20000034 	.word	0x20000034
 8001374:	080013e5 	.word	0x080013e5
 8001378:	08001ff5 	.word	0x08001ff5
 800137c:	200003b4 	.word	0x200003b4
 8001380:	20000374 	.word	0x20000374
 8001384:	20000344 	.word	0x20000344
 8001388:	08000ce1 	.word	0x08000ce1
 800138c:	20000094 	.word	0x20000094
 8001390:	08007e70 	.word	0x08007e70
 8001394:	08000b6d 	.word	0x08000b6d

08001398 <CC_SM_SetColor>:
//Global Variables Declaration

//Functions
void CC_SM_SetColor(CC_LED_Colors_t RequestedColor)
//Connector between the State Machine and the LED's controller
{
 8001398:	b580      	push	{r7, lr}
 800139a:	b084      	sub	sp, #16
 800139c:	af00      	add	r7, sp, #0
 800139e:	0002      	movs	r2, r0
 80013a0:	1dfb      	adds	r3, r7, #7
 80013a2:	701a      	strb	r2, [r3, #0]
	uint8_t i=0;
 80013a4:	230f      	movs	r3, #15
 80013a6:	18fb      	adds	r3, r7, r3
 80013a8:	2200      	movs	r2, #0
 80013aa:	701a      	strb	r2, [r3, #0]
	while(i<CC_LED_MAX_STRIPS)
 80013ac:	e00e      	b.n	80013cc <CC_SM_SetColor+0x34>
	{
		CC_LED_hStrip[i].color = RequestedColor;
 80013ae:	210f      	movs	r1, #15
 80013b0:	187b      	adds	r3, r7, r1
 80013b2:	781b      	ldrb	r3, [r3, #0]
 80013b4:	4a0a      	ldr	r2, [pc, #40]	@ (80013e0 <CC_SM_SetColor+0x48>)
 80013b6:	005b      	lsls	r3, r3, #1
 80013b8:	18d3      	adds	r3, r2, r3
 80013ba:	3301      	adds	r3, #1
 80013bc:	1dfa      	adds	r2, r7, #7
 80013be:	7812      	ldrb	r2, [r2, #0]
 80013c0:	701a      	strb	r2, [r3, #0]
		i++;
 80013c2:	187b      	adds	r3, r7, r1
 80013c4:	781a      	ldrb	r2, [r3, #0]
 80013c6:	187b      	adds	r3, r7, r1
 80013c8:	3201      	adds	r2, #1
 80013ca:	701a      	strb	r2, [r3, #0]
	while(i<CC_LED_MAX_STRIPS)
 80013cc:	230f      	movs	r3, #15
 80013ce:	18fb      	adds	r3, r7, r3
 80013d0:	781b      	ldrb	r3, [r3, #0]
 80013d2:	2b09      	cmp	r3, #9
 80013d4:	d9eb      	bls.n	80013ae <CC_SM_SetColor+0x16>
	}
}
 80013d6:	46c0      	nop			@ (mov r8, r8)
 80013d8:	46c0      	nop			@ (mov r8, r8)
 80013da:	46bd      	mov	sp, r7
 80013dc:	b004      	add	sp, #16
 80013de:	bd80      	pop	{r7, pc}
 80013e0:	2000039c 	.word	0x2000039c

080013e4 <CC_SM_UsartSM>:

void CC_SM_UsartSM(void* param1, void* param2, void* param3)
{
 80013e4:	b590      	push	{r4, r7, lr}
 80013e6:	b0ab      	sub	sp, #172	@ 0xac
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	60f8      	str	r0, [r7, #12]
 80013ec:	60b9      	str	r1, [r7, #8]
 80013ee:	607a      	str	r2, [r7, #4]
	static CC_SM_SerialStatesTypedef UsartSM_state=UART_SM_WELCOME_MESSAGE;
	char sendString[TX_BUFF_LENGTH];

	switch (UsartSM_state)
 80013f0:	4b70      	ldr	r3, [pc, #448]	@ (80015b4 <CC_SM_UsartSM+0x1d0>)
 80013f2:	781b      	ldrb	r3, [r3, #0]
 80013f4:	2b05      	cmp	r3, #5
 80013f6:	d900      	bls.n	80013fa <CC_SM_UsartSM+0x16>
 80013f8:	e0d8      	b.n	80015ac <CC_SM_UsartSM+0x1c8>
 80013fa:	009a      	lsls	r2, r3, #2
 80013fc:	4b6e      	ldr	r3, [pc, #440]	@ (80015b8 <CC_SM_UsartSM+0x1d4>)
 80013fe:	18d3      	adds	r3, r2, r3
 8001400:	681b      	ldr	r3, [r3, #0]
 8001402:	469f      	mov	pc, r3
	{
	case UART_SM_WELCOME_MESSAGE:
		CC_ML_SendUARTString((const char*)MESSAGE1, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001404:	4a6d      	ldr	r2, [pc, #436]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 8001406:	4b6e      	ldr	r3, [pc, #440]	@ (80015c0 <CC_SM_UsartSM+0x1dc>)
 8001408:	0011      	movs	r1, r2
 800140a:	0018      	movs	r0, r3
 800140c:	f000 fe5d 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE2, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001410:	4a6a      	ldr	r2, [pc, #424]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 8001412:	4b6c      	ldr	r3, [pc, #432]	@ (80015c4 <CC_SM_UsartSM+0x1e0>)
 8001414:	0011      	movs	r1, r2
 8001416:	0018      	movs	r0, r3
 8001418:	f000 fe57 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE3, &CC_ML_SERIAL_DEBUG_HANDLER);
 800141c:	4a67      	ldr	r2, [pc, #412]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 800141e:	4b6a      	ldr	r3, [pc, #424]	@ (80015c8 <CC_SM_UsartSM+0x1e4>)
 8001420:	0011      	movs	r1, r2
 8001422:	0018      	movs	r0, r3
 8001424:	f000 fe51 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)CC_APP_BoardData.HwCode, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001428:	4a64      	ldr	r2, [pc, #400]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 800142a:	4b68      	ldr	r3, [pc, #416]	@ (80015cc <CC_SM_UsartSM+0x1e8>)
 800142c:	0011      	movs	r1, r2
 800142e:	0018      	movs	r0, r3
 8001430:	f000 fe4b 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE_RETURN, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001434:	4a61      	ldr	r2, [pc, #388]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 8001436:	4b66      	ldr	r3, [pc, #408]	@ (80015d0 <CC_SM_UsartSM+0x1ec>)
 8001438:	0011      	movs	r1, r2
 800143a:	0018      	movs	r0, r3
 800143c:	f000 fe45 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE4, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001440:	4a5e      	ldr	r2, [pc, #376]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 8001442:	4b64      	ldr	r3, [pc, #400]	@ (80015d4 <CC_SM_UsartSM+0x1f0>)
 8001444:	0011      	movs	r1, r2
 8001446:	0018      	movs	r0, r3
 8001448:	f000 fe3f 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)CC_APP_BoardData.uC, &CC_ML_SERIAL_DEBUG_HANDLER);
 800144c:	4a5b      	ldr	r2, [pc, #364]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 800144e:	4b62      	ldr	r3, [pc, #392]	@ (80015d8 <CC_SM_UsartSM+0x1f4>)
 8001450:	0011      	movs	r1, r2
 8001452:	0018      	movs	r0, r3
 8001454:	f000 fe39 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE_RETURN, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001458:	4a58      	ldr	r2, [pc, #352]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 800145a:	4b5d      	ldr	r3, [pc, #372]	@ (80015d0 <CC_SM_UsartSM+0x1ec>)
 800145c:	0011      	movs	r1, r2
 800145e:	0018      	movs	r0, r3
 8001460:	f000 fe33 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE5, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001464:	4a55      	ldr	r2, [pc, #340]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 8001466:	4b5d      	ldr	r3, [pc, #372]	@ (80015dc <CC_SM_UsartSM+0x1f8>)
 8001468:	0011      	movs	r1, r2
 800146a:	0018      	movs	r0, r3
 800146c:	f000 fe2d 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)CC_APP_BoardData.SwVer, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001470:	4a52      	ldr	r2, [pc, #328]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 8001472:	4b5b      	ldr	r3, [pc, #364]	@ (80015e0 <CC_SM_UsartSM+0x1fc>)
 8001474:	0011      	movs	r1, r2
 8001476:	0018      	movs	r0, r3
 8001478:	f000 fe27 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE_RETURN, &CC_ML_SERIAL_DEBUG_HANDLER);
 800147c:	4a4f      	ldr	r2, [pc, #316]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 800147e:	4b54      	ldr	r3, [pc, #336]	@ (80015d0 <CC_SM_UsartSM+0x1ec>)
 8001480:	0011      	movs	r1, r2
 8001482:	0018      	movs	r0, r3
 8001484:	f000 fe21 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE6, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001488:	4a4c      	ldr	r2, [pc, #304]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 800148a:	4b56      	ldr	r3, [pc, #344]	@ (80015e4 <CC_SM_UsartSM+0x200>)
 800148c:	0011      	movs	r1, r2
 800148e:	0018      	movs	r0, r3
 8001490:	f000 fe1b 	bl	80020ca <CC_ML_SendUARTString>
		utoa(CC_APP_BoardData.id, sendString, 10);									//Converting the identifier to ascii in decimal base
 8001494:	4b4d      	ldr	r3, [pc, #308]	@ (80015cc <CC_SM_UsartSM+0x1e8>)
 8001496:	225b      	movs	r2, #91	@ 0x5b
 8001498:	5c9b      	ldrb	r3, [r3, r2]
 800149a:	0018      	movs	r0, r3
 800149c:	2410      	movs	r4, #16
 800149e:	193b      	adds	r3, r7, r4
 80014a0:	220a      	movs	r2, #10
 80014a2:	0019      	movs	r1, r3
 80014a4:	f006 fb46 	bl	8007b34 <utoa>
		CC_ML_SendUARTString((const char*)sendString, &CC_ML_SERIAL_DEBUG_HANDLER);
 80014a8:	4a44      	ldr	r2, [pc, #272]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 80014aa:	193b      	adds	r3, r7, r4
 80014ac:	0011      	movs	r1, r2
 80014ae:	0018      	movs	r0, r3
 80014b0:	f000 fe0b 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE_RETURN, &CC_ML_SERIAL_DEBUG_HANDLER);
 80014b4:	4a41      	ldr	r2, [pc, #260]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 80014b6:	4b46      	ldr	r3, [pc, #280]	@ (80015d0 <CC_SM_UsartSM+0x1ec>)
 80014b8:	0011      	movs	r1, r2
 80014ba:	0018      	movs	r0, r3
 80014bc:	f000 fe05 	bl	80020ca <CC_ML_SendUARTString>
		UsartSM_state=UART_SM_GETTING_COLORS_MESSAGE;
 80014c0:	4b3c      	ldr	r3, [pc, #240]	@ (80015b4 <CC_SM_UsartSM+0x1d0>)
 80014c2:	2201      	movs	r2, #1
 80014c4:	701a      	strb	r2, [r3, #0]
	break;
 80014c6:	e071      	b.n	80015ac <CC_SM_UsartSM+0x1c8>

	case UART_SM_GETTING_COLORS_MESSAGE:
		CC_ML_SendUARTString((const char*)MESSAGE7, &CC_ML_SERIAL_DEBUG_HANDLER);
 80014c8:	4a3c      	ldr	r2, [pc, #240]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 80014ca:	4b47      	ldr	r3, [pc, #284]	@ (80015e8 <CC_SM_UsartSM+0x204>)
 80014cc:	0011      	movs	r1, r2
 80014ce:	0018      	movs	r0, r3
 80014d0:	f000 fdfb 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE8, &CC_ML_SERIAL_DEBUG_HANDLER);
 80014d4:	4a39      	ldr	r2, [pc, #228]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 80014d6:	4b45      	ldr	r3, [pc, #276]	@ (80015ec <CC_SM_UsartSM+0x208>)
 80014d8:	0011      	movs	r1, r2
 80014da:	0018      	movs	r0, r3
 80014dc:	f000 fdf5 	bl	80020ca <CC_ML_SendUARTString>
		UsartSM_state=UART_SM_GET_COLOR_ALL;
 80014e0:	4b34      	ldr	r3, [pc, #208]	@ (80015b4 <CC_SM_UsartSM+0x1d0>)
 80014e2:	2202      	movs	r2, #2
 80014e4:	701a      	strb	r2, [r3, #0]
	break;
 80014e6:	e061      	b.n	80015ac <CC_SM_UsartSM+0x1c8>

	case UART_SM_GET_COLOR_ALL:
		char input_char=*(pCC_ML_SERIAL_DEBUG_RxData+0);
 80014e8:	4b41      	ldr	r3, [pc, #260]	@ (80015f0 <CC_SM_UsartSM+0x20c>)
 80014ea:	681a      	ldr	r2, [r3, #0]
 80014ec:	21a7      	movs	r1, #167	@ 0xa7
 80014ee:	187b      	adds	r3, r7, r1
 80014f0:	7812      	ldrb	r2, [r2, #0]
 80014f2:	701a      	strb	r2, [r3, #0]
		switch (input_char)
 80014f4:	187b      	adds	r3, r7, r1
 80014f6:	781b      	ldrb	r3, [r3, #0]
 80014f8:	2b79      	cmp	r3, #121	@ 0x79
 80014fa:	d828      	bhi.n	800154e <CC_SM_UsartSM+0x16a>
 80014fc:	009a      	lsls	r2, r3, #2
 80014fe:	4b3d      	ldr	r3, [pc, #244]	@ (80015f4 <CC_SM_UsartSM+0x210>)
 8001500:	18d3      	adds	r3, r2, r3
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	469f      	mov	pc, r3
		case '\0':					//No order gotten

		break;
		case 'E':
		case 'e':					//Exit order
			UsartSM_state=UART_SM_EXIT;
 8001506:	4b2b      	ldr	r3, [pc, #172]	@ (80015b4 <CC_SM_UsartSM+0x1d0>)
 8001508:	2204      	movs	r2, #4
 800150a:	701a      	strb	r2, [r3, #0]
		break;
 800150c:	e024      	b.n	8001558 <CC_SM_UsartSM+0x174>
		case 'R':
		case 'r':					//Set all red
			CC_SM_SetColor(RED);
 800150e:	2000      	movs	r0, #0
 8001510:	f7ff ff42 	bl	8001398 <CC_SM_SetColor>
		break;
 8001514:	e020      	b.n	8001558 <CC_SM_UsartSM+0x174>
		case 'G':
		case 'g':					//Set all green
			CC_SM_SetColor(GREEN);
 8001516:	2001      	movs	r0, #1
 8001518:	f7ff ff3e 	bl	8001398 <CC_SM_SetColor>
		break;
 800151c:	e01c      	b.n	8001558 <CC_SM_UsartSM+0x174>
		case 'B':
		case 'b':					//Set all blue
			CC_SM_SetColor(BLUE);
 800151e:	2002      	movs	r0, #2
 8001520:	f7ff ff3a 	bl	8001398 <CC_SM_SetColor>
		break;
 8001524:	e018      	b.n	8001558 <CC_SM_UsartSM+0x174>
		case 'Y':
		case 'y':					//Set all yellow
			CC_SM_SetColor(YELLOW);
 8001526:	2003      	movs	r0, #3
 8001528:	f7ff ff36 	bl	8001398 <CC_SM_SetColor>
		break;
 800152c:	e014      	b.n	8001558 <CC_SM_UsartSM+0x174>
		case 'P':
		case 'p':					//Set all pink
			CC_SM_SetColor(PINK);
 800152e:	2004      	movs	r0, #4
 8001530:	f7ff ff32 	bl	8001398 <CC_SM_SetColor>
		break;
 8001534:	e010      	b.n	8001558 <CC_SM_UsartSM+0x174>
		case 'C':
		case 'c':					//Set all pink
			CC_SM_SetColor(CYAN);
 8001536:	2005      	movs	r0, #5
 8001538:	f7ff ff2e 	bl	8001398 <CC_SM_SetColor>
		break;
 800153c:	e00c      	b.n	8001558 <CC_SM_UsartSM+0x174>
		case 'W':
		case 'w':					//Set all white
			CC_SM_SetColor(WHITE);
 800153e:	2006      	movs	r0, #6
 8001540:	f7ff ff2a 	bl	8001398 <CC_SM_SetColor>
		break;
 8001544:	e008      	b.n	8001558 <CC_SM_UsartSM+0x174>
		case 'O':
		case 'o':					//Set all off
			CC_SM_SetColor(BLACK);
 8001546:	2007      	movs	r0, #7
 8001548:	f7ff ff26 	bl	8001398 <CC_SM_SetColor>
		break;
 800154c:	e004      	b.n	8001558 <CC_SM_UsartSM+0x174>
		default:					//Wrong order gotten
			UsartSM_state=UART_SM_WRONG_INPUT;
 800154e:	4b19      	ldr	r3, [pc, #100]	@ (80015b4 <CC_SM_UsartSM+0x1d0>)
 8001550:	2203      	movs	r2, #3
 8001552:	701a      	strb	r2, [r3, #0]
		break;
 8001554:	e000      	b.n	8001558 <CC_SM_UsartSM+0x174>
		break;
 8001556:	46c0      	nop			@ (mov r8, r8)
		}
		CC_ML_ClearUARTRxData();
 8001558:	f000 fe08 	bl	800216c <CC_ML_ClearUARTRxData>
	break;
 800155c:	e026      	b.n	80015ac <CC_SM_UsartSM+0x1c8>

	case UART_SM_WRONG_INPUT:
		CC_ML_SendUARTString((const char*)MESSAGE_RETURN, &CC_ML_SERIAL_DEBUG_HANDLER);
 800155e:	4a17      	ldr	r2, [pc, #92]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 8001560:	4b1b      	ldr	r3, [pc, #108]	@ (80015d0 <CC_SM_UsartSM+0x1ec>)
 8001562:	0011      	movs	r1, r2
 8001564:	0018      	movs	r0, r3
 8001566:	f000 fdb0 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE9, &CC_ML_SERIAL_DEBUG_HANDLER);
 800156a:	4a14      	ldr	r2, [pc, #80]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 800156c:	4b22      	ldr	r3, [pc, #136]	@ (80015f8 <CC_SM_UsartSM+0x214>)
 800156e:	0011      	movs	r1, r2
 8001570:	0018      	movs	r0, r3
 8001572:	f000 fdaa 	bl	80020ca <CC_ML_SendUARTString>
		UsartSM_state=UART_SM_GET_COLOR_ALL;
 8001576:	4b0f      	ldr	r3, [pc, #60]	@ (80015b4 <CC_SM_UsartSM+0x1d0>)
 8001578:	2202      	movs	r2, #2
 800157a:	701a      	strb	r2, [r3, #0]
	break;
 800157c:	e016      	b.n	80015ac <CC_SM_UsartSM+0x1c8>

	case UART_SM_EXIT:
		CC_ML_SendUARTString((const char*)MESSAGE_RETURN, &CC_ML_SERIAL_DEBUG_HANDLER);
 800157e:	4a0f      	ldr	r2, [pc, #60]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 8001580:	4b13      	ldr	r3, [pc, #76]	@ (80015d0 <CC_SM_UsartSM+0x1ec>)
 8001582:	0011      	movs	r1, r2
 8001584:	0018      	movs	r0, r3
 8001586:	f000 fda0 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE10, &CC_ML_SERIAL_DEBUG_HANDLER);
 800158a:	4a0c      	ldr	r2, [pc, #48]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 800158c:	4b1b      	ldr	r3, [pc, #108]	@ (80015fc <CC_SM_UsartSM+0x218>)
 800158e:	0011      	movs	r1, r2
 8001590:	0018      	movs	r0, r3
 8001592:	f000 fd9a 	bl	80020ca <CC_ML_SendUARTString>
		CC_ML_SendUARTString((const char*)MESSAGE_TRIPLERETURN, &CC_ML_SERIAL_DEBUG_HANDLER);
 8001596:	4a09      	ldr	r2, [pc, #36]	@ (80015bc <CC_SM_UsartSM+0x1d8>)
 8001598:	4b19      	ldr	r3, [pc, #100]	@ (8001600 <CC_SM_UsartSM+0x21c>)
 800159a:	0011      	movs	r1, r2
 800159c:	0018      	movs	r0, r3
 800159e:	f000 fd94 	bl	80020ca <CC_ML_SendUARTString>
		UsartSM_state=UART_SM_STOP;
 80015a2:	4b04      	ldr	r3, [pc, #16]	@ (80015b4 <CC_SM_UsartSM+0x1d0>)
 80015a4:	2205      	movs	r2, #5
 80015a6:	701a      	strb	r2, [r3, #0]
	break;
 80015a8:	e000      	b.n	80015ac <CC_SM_UsartSM+0x1c8>

	case UART_SM_STOP:

	break;
 80015aa:	46c0      	nop			@ (mov r8, r8)
	}
}
 80015ac:	46c0      	nop			@ (mov r8, r8)
 80015ae:	46bd      	mov	sp, r7
 80015b0:	b02b      	add	sp, #172	@ 0xac
 80015b2:	bd90      	pop	{r4, r7, pc}
 80015b4:	20000338 	.word	0x20000338
 80015b8:	08007e74 	.word	0x08007e74
 80015bc:	200004fc 	.word	0x200004fc
 80015c0:	08007c4c 	.word	0x08007c4c
 80015c4:	08007c70 	.word	0x08007c70
 80015c8:	08007cb0 	.word	0x08007cb0
 80015cc:	20000034 	.word	0x20000034
 80015d0:	08007ccc 	.word	0x08007ccc
 80015d4:	08007cd0 	.word	0x08007cd0
 80015d8:	20000081 	.word	0x20000081
 80015dc:	08007cdc 	.word	0x08007cdc
 80015e0:	20000045 	.word	0x20000045
 80015e4:	08007cf0 	.word	0x08007cf0
 80015e8:	08007d04 	.word	0x08007d04
 80015ec:	08007d30 	.word	0x08007d30
 80015f0:	08008074 	.word	0x08008074
 80015f4:	08007e8c 	.word	0x08007e8c
 80015f8:	08007d9c 	.word	0x08007d9c
 80015fc:	08007dc0 	.word	0x08007dc0
 8001600:	08007dec 	.word	0x08007dec

08001604 <CC_BOARDLED_Led1Toggle>:
	{
		HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, CC_BOARDLED_OFF);
	}

	inline void CC_BOARDLED_Led1Toggle(void)
	{
 8001604:	b580      	push	{r7, lr}
 8001606:	af00      	add	r7, sp, #0
		HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 8001608:	23a0      	movs	r3, #160	@ 0xa0
 800160a:	05db      	lsls	r3, r3, #23
 800160c:	2102      	movs	r1, #2
 800160e:	0018      	movs	r0, r3
 8001610:	f002 fcc8 	bl	8003fa4 <HAL_GPIO_TogglePin>
	}
 8001614:	46c0      	nop			@ (mov r8, r8)
 8001616:	46bd      	mov	sp, r7
 8001618:	bd80      	pop	{r7, pc}

0800161a <CC_CAN_EnableCANInt>:
FDCAN_TxHeaderTypeDef CC_CAN_TxHeader;
uint32_t CC_CAN_RxAdress=CC_CAN_RX_ADRESS;

//Functions
inline void CC_CAN_EnableCANInt(FDCAN_HandleTypeDef *hfdcan, uint32_t ActiveITs,uint32_t BufferIndexes)
{
 800161a:	b580      	push	{r7, lr}
 800161c:	b084      	sub	sp, #16
 800161e:	af00      	add	r7, sp, #0
 8001620:	60f8      	str	r0, [r7, #12]
 8001622:	60b9      	str	r1, [r7, #8]
 8001624:	607a      	str	r2, [r7, #4]
	HAL_FDCAN_ActivateNotification(hfdcan, ActiveITs, BufferIndexes);
 8001626:	687a      	ldr	r2, [r7, #4]
 8001628:	68b9      	ldr	r1, [r7, #8]
 800162a:	68fb      	ldr	r3, [r7, #12]
 800162c:	0018      	movs	r0, r3
 800162e:	f001 ffcb 	bl	80035c8 <HAL_FDCAN_ActivateNotification>
}
 8001632:	46c0      	nop			@ (mov r8, r8)
 8001634:	46bd      	mov	sp, r7
 8001636:	b004      	add	sp, #16
 8001638:	bd80      	pop	{r7, pc}

0800163a <CC_CAN_StartCAN>:

inline void CC_CAN_StartCAN(FDCAN_HandleTypeDef *hfdcan)
{
 800163a:	b580      	push	{r7, lr}
 800163c:	b082      	sub	sp, #8
 800163e:	af00      	add	r7, sp, #0
 8001640:	6078      	str	r0, [r7, #4]
	HAL_FDCAN_Start(hfdcan);
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	0018      	movs	r0, r3
 8001646:	f001 fe45 	bl	80032d4 <HAL_FDCAN_Start>
}
 800164a:	46c0      	nop			@ (mov r8, r8)
 800164c:	46bd      	mov	sp, r7
 800164e:	b002      	add	sp, #8
 8001650:	bd80      	pop	{r7, pc}

08001652 <CC_CAN_SendMessage>:
void CC_CAN_SendMessage(
						FDCAN_HandleTypeDef* const pHeaderCan,
						const FDCAN_TxHeaderTypeDef* const pHeaderTx,
						const uint8_t* const pdata2send
						)
{
 8001652:	b580      	push	{r7, lr}
 8001654:	b084      	sub	sp, #16
 8001656:	af00      	add	r7, sp, #0
 8001658:	60f8      	str	r0, [r7, #12]
 800165a:	60b9      	str	r1, [r7, #8]
 800165c:	607a      	str	r2, [r7, #4]
	HAL_FDCAN_AddMessageToTxFifoQ
 800165e:	687a      	ldr	r2, [r7, #4]
 8001660:	68b9      	ldr	r1, [r7, #8]
 8001662:	68fb      	ldr	r3, [r7, #12]
 8001664:	0018      	movs	r0, r3
 8001666:	f001 fe5b 	bl	8003320 <HAL_FDCAN_AddMessageToTxFifoQ>
	(
		pHeaderCan,
		pHeaderTx,
		pdata2send
	);
}
 800166a:	46c0      	nop			@ (mov r8, r8)
 800166c:	46bd      	mov	sp, r7
 800166e:	b004      	add	sp, #16
 8001670:	bd80      	pop	{r7, pc}

08001672 <CC_CAN_Init>:

void CC_CAN_Init(FDCAN_TxHeaderTypeDef* const txheader )
{
 8001672:	b580      	push	{r7, lr}
 8001674:	b082      	sub	sp, #8
 8001676:	af00      	add	r7, sp, #0
 8001678:	6078      	str	r0, [r7, #4]
//	sFilterConfig.FilterID1 = 0x000;						//First possible delta module. Extended id
//	sFilterConfig.FilterID2 = 0x7FF;						//Last possible delta module. Extended id
//	if (HAL_FDCAN_ConfigFilter(&hfdcan2, &sFilterConfig) != HAL_OK){Error_Handler();}		//Filter configuration

	//Tx header configuration
	txheader->Identifier = CC_CAN_TX_ADRESS;			//Transmit identifier
 800167a:	687b      	ldr	r3, [r7, #4]
 800167c:	2202      	movs	r2, #2
 800167e:	32ff      	adds	r2, #255	@ 0xff
 8001680:	601a      	str	r2, [r3, #0]
	txheader->IdType = FDCAN_STANDARD_ID;				//Standard format identifier
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	2200      	movs	r2, #0
 8001686:	605a      	str	r2, [r3, #4]
	txheader->TxFrameType = FDCAN_DATA_FRAME;			//Frame type
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	2200      	movs	r2, #0
 800168c:	609a      	str	r2, [r3, #8]
	txheader->DataLength = CC_CAN_TXDATALENGHT;			//Length of the data is 8 bytes
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	2208      	movs	r2, #8
 8001692:	60da      	str	r2, [r3, #12]
	txheader->ErrorStateIndicator = FDCAN_ESI_ACTIVE;	//Error indicator active
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	2200      	movs	r2, #0
 8001698:	611a      	str	r2, [r3, #16]
	txheader->BitRateSwitch = FDCAN_BRS_OFF;			//Without bit rate switching
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	2200      	movs	r2, #0
 800169e:	615a      	str	r2, [r3, #20]
	txheader->FDFormat = FDCAN_CLASSIC_CAN;				//Classic format
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	2200      	movs	r2, #0
 80016a4:	619a      	str	r2, [r3, #24]
	txheader->TxEventFifoControl = FDCAN_NO_TX_EVENTS;	//Without any Tx event
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	2200      	movs	r2, #0
 80016aa:	61da      	str	r2, [r3, #28]
	txheader->MessageMarker = 0;						//Identifier (marker) in case of an Tx event
 80016ac:	687b      	ldr	r3, [r7, #4]
 80016ae:	2200      	movs	r2, #0
 80016b0:	621a      	str	r2, [r3, #32]
}
 80016b2:	46c0      	nop			@ (mov r8, r8)
 80016b4:	46bd      	mov	sp, r7
 80016b6:	b002      	add	sp, #8
 80016b8:	bd80      	pop	{r7, pc}
	...

080016bc <HAL_FDCAN_RxFifo0Callback>:

void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef* const hfdcan, uint32_t RxFifo0ITs)
//CAN bus receiver, FIFO 0 callback (FIFO it is not used).
{
 80016bc:	b580      	push	{r7, lr}
 80016be:	b084      	sub	sp, #16
 80016c0:	af00      	add	r7, sp, #0
 80016c2:	6078      	str	r0, [r7, #4]
 80016c4:	6039      	str	r1, [r7, #0]
	uint8_t temp_data[CC_CAN_RXDATALENGHT];

	if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 80016c6:	683b      	ldr	r3, [r7, #0]
 80016c8:	2201      	movs	r2, #1
 80016ca:	4013      	ands	r3, r2
 80016cc:	d015      	beq.n	80016fa <HAL_FDCAN_RxFifo0Callback+0x3e>
	{
		if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO0, &CC_CAN_RxHeader, temp_data) != HAL_OK)
 80016ce:	2308      	movs	r3, #8
 80016d0:	18fb      	adds	r3, r7, r3
 80016d2:	4a0c      	ldr	r2, [pc, #48]	@ (8001704 <HAL_FDCAN_RxFifo0Callback+0x48>)
 80016d4:	6878      	ldr	r0, [r7, #4]
 80016d6:	2140      	movs	r1, #64	@ 0x40
 80016d8:	f001 fe68 	bl	80033ac <HAL_FDCAN_GetRxMessage>
 80016dc:	1e03      	subs	r3, r0, #0
 80016de:	d001      	beq.n	80016e4 <HAL_FDCAN_RxFifo0Callback+0x28>
		{
			Error_Handler();
 80016e0:	f001 f826 	bl	8002730 <Error_Handler>
		}
		if (CC_CAN_RxHeader.Identifier == CC_CAN_RxAdress)
 80016e4:	4b07      	ldr	r3, [pc, #28]	@ (8001704 <HAL_FDCAN_RxFifo0Callback+0x48>)
 80016e6:	681a      	ldr	r2, [r3, #0]
 80016e8:	4b07      	ldr	r3, [pc, #28]	@ (8001708 <HAL_FDCAN_RxFifo0Callback+0x4c>)
 80016ea:	681b      	ldr	r3, [r3, #0]
 80016ec:	429a      	cmp	r2, r3
 80016ee:	d104      	bne.n	80016fa <HAL_FDCAN_RxFifo0Callback+0x3e>
		{
			memcpy(&CC_CAN_RxData,&temp_data, sizeof(temp_data));
 80016f0:	4b06      	ldr	r3, [pc, #24]	@ (800170c <HAL_FDCAN_RxFifo0Callback+0x50>)
 80016f2:	2208      	movs	r2, #8
 80016f4:	18ba      	adds	r2, r7, r2
 80016f6:	ca03      	ldmia	r2!, {r0, r1}
 80016f8:	c303      	stmia	r3!, {r0, r1}
//			CC_CAN_RXPROCESS;
		}
	}
}
 80016fa:	46c0      	nop			@ (mov r8, r8)
 80016fc:	46bd      	mov	sp, r7
 80016fe:	b004      	add	sp, #16
 8001700:	bd80      	pop	{r7, pc}
 8001702:	46c0      	nop			@ (mov r8, r8)
 8001704:	2000034c 	.word	0x2000034c
 8001708:	20000004 	.word	0x20000004
 800170c:	2000033c 	.word	0x2000033c

08001710 <CC_DIPSW_GetDipSwitch4pos>:
		pdata->bits.bit2=HAL_GPIO_ReadPin(DIP_SW3_GPIO_Port, DIP_SW3_Pin);
	}
#endif
#ifdef DIP_SW4_Pin
	void CC_DIPSW_GetDipSwitch4pos(CC_DIPSW_DipSw_t* const pdata)
	{
 8001710:	b580      	push	{r7, lr}
 8001712:	b082      	sub	sp, #8
 8001714:	af00      	add	r7, sp, #0
 8001716:	6078      	str	r0, [r7, #4]
		pdata->bits.bit0=HAL_GPIO_ReadPin(DIP_SW1_GPIO_Port, DIP_SW1_Pin);
 8001718:	2380      	movs	r3, #128	@ 0x80
 800171a:	019b      	lsls	r3, r3, #6
 800171c:	4a2e      	ldr	r2, [pc, #184]	@ (80017d8 <CC_DIPSW_GetDipSwitch4pos+0xc8>)
 800171e:	0019      	movs	r1, r3
 8001720:	0010      	movs	r0, r2
 8001722:	f002 fc05 	bl	8003f30 <HAL_GPIO_ReadPin>
 8001726:	0003      	movs	r3, r0
 8001728:	1c1a      	adds	r2, r3, #0
 800172a:	2301      	movs	r3, #1
 800172c:	4013      	ands	r3, r2
 800172e:	b2da      	uxtb	r2, r3
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	2101      	movs	r1, #1
 8001734:	400a      	ands	r2, r1
 8001736:	0010      	movs	r0, r2
 8001738:	781a      	ldrb	r2, [r3, #0]
 800173a:	2101      	movs	r1, #1
 800173c:	438a      	bics	r2, r1
 800173e:	1c11      	adds	r1, r2, #0
 8001740:	1c02      	adds	r2, r0, #0
 8001742:	430a      	orrs	r2, r1
 8001744:	701a      	strb	r2, [r3, #0]
		pdata->bits.bit1=HAL_GPIO_ReadPin(DIP_SW2_GPIO_Port, DIP_SW2_Pin);
 8001746:	2380      	movs	r3, #128	@ 0x80
 8001748:	01db      	lsls	r3, r3, #7
 800174a:	4a23      	ldr	r2, [pc, #140]	@ (80017d8 <CC_DIPSW_GetDipSwitch4pos+0xc8>)
 800174c:	0019      	movs	r1, r3
 800174e:	0010      	movs	r0, r2
 8001750:	f002 fbee 	bl	8003f30 <HAL_GPIO_ReadPin>
 8001754:	0003      	movs	r3, r0
 8001756:	1c1a      	adds	r2, r3, #0
 8001758:	2301      	movs	r3, #1
 800175a:	4013      	ands	r3, r2
 800175c:	b2da      	uxtb	r2, r3
 800175e:	687b      	ldr	r3, [r7, #4]
 8001760:	2101      	movs	r1, #1
 8001762:	400a      	ands	r2, r1
 8001764:	1890      	adds	r0, r2, r2
 8001766:	781a      	ldrb	r2, [r3, #0]
 8001768:	2102      	movs	r1, #2
 800176a:	438a      	bics	r2, r1
 800176c:	1c11      	adds	r1, r2, #0
 800176e:	1c02      	adds	r2, r0, #0
 8001770:	430a      	orrs	r2, r1
 8001772:	701a      	strb	r2, [r3, #0]
		pdata->bits.bit2=HAL_GPIO_ReadPin(DIP_SW3_GPIO_Port, DIP_SW3_Pin);
 8001774:	2380      	movs	r3, #128	@ 0x80
 8001776:	021b      	lsls	r3, r3, #8
 8001778:	4a17      	ldr	r2, [pc, #92]	@ (80017d8 <CC_DIPSW_GetDipSwitch4pos+0xc8>)
 800177a:	0019      	movs	r1, r3
 800177c:	0010      	movs	r0, r2
 800177e:	f002 fbd7 	bl	8003f30 <HAL_GPIO_ReadPin>
 8001782:	0003      	movs	r3, r0
 8001784:	1c1a      	adds	r2, r3, #0
 8001786:	2301      	movs	r3, #1
 8001788:	4013      	ands	r3, r2
 800178a:	b2da      	uxtb	r2, r3
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	2101      	movs	r1, #1
 8001790:	400a      	ands	r2, r1
 8001792:	0090      	lsls	r0, r2, #2
 8001794:	781a      	ldrb	r2, [r3, #0]
 8001796:	2104      	movs	r1, #4
 8001798:	438a      	bics	r2, r1
 800179a:	1c11      	adds	r1, r2, #0
 800179c:	1c02      	adds	r2, r0, #0
 800179e:	430a      	orrs	r2, r1
 80017a0:	701a      	strb	r2, [r3, #0]
		pdata->bits.bit3=HAL_GPIO_ReadPin(DIP_SW4_GPIO_Port, DIP_SW4_Pin);
 80017a2:	23a0      	movs	r3, #160	@ 0xa0
 80017a4:	05db      	lsls	r3, r3, #23
 80017a6:	2101      	movs	r1, #1
 80017a8:	0018      	movs	r0, r3
 80017aa:	f002 fbc1 	bl	8003f30 <HAL_GPIO_ReadPin>
 80017ae:	0003      	movs	r3, r0
 80017b0:	1c1a      	adds	r2, r3, #0
 80017b2:	2301      	movs	r3, #1
 80017b4:	4013      	ands	r3, r2
 80017b6:	b2da      	uxtb	r2, r3
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	2101      	movs	r1, #1
 80017bc:	400a      	ands	r2, r1
 80017be:	00d0      	lsls	r0, r2, #3
 80017c0:	781a      	ldrb	r2, [r3, #0]
 80017c2:	2108      	movs	r1, #8
 80017c4:	438a      	bics	r2, r1
 80017c6:	1c11      	adds	r1, r2, #0
 80017c8:	1c02      	adds	r2, r0, #0
 80017ca:	430a      	orrs	r2, r1
 80017cc:	701a      	strb	r2, [r3, #0]
	}
 80017ce:	46c0      	nop			@ (mov r8, r8)
 80017d0:	46bd      	mov	sp, r7
 80017d2:	b002      	add	sp, #8
 80017d4:	bd80      	pop	{r7, pc}
 80017d6:	46c0      	nop			@ (mov r8, r8)
 80017d8:	50000800 	.word	0x50000800

080017dc <CC_LED_TurnOnRedOnStrip1>:
}

//Single led action
//Strip1
inline void CC_LED_TurnOnRedOnStrip1(void)
{
 80017dc:	b580      	push	{r7, lr}
 80017de:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R1_GPIO_Port, R1_Pin, GPIO_PIN_SET);
 80017e0:	2380      	movs	r3, #128	@ 0x80
 80017e2:	009b      	lsls	r3, r3, #2
 80017e4:	4803      	ldr	r0, [pc, #12]	@ (80017f4 <CC_LED_TurnOnRedOnStrip1+0x18>)
 80017e6:	2201      	movs	r2, #1
 80017e8:	0019      	movs	r1, r3
 80017ea:	f002 fbbe 	bl	8003f6a <HAL_GPIO_WritePin>
}
 80017ee:	46c0      	nop			@ (mov r8, r8)
 80017f0:	46bd      	mov	sp, r7
 80017f2:	bd80      	pop	{r7, pc}
 80017f4:	50000400 	.word	0x50000400

080017f8 <CC_LED_TurnOnGreenOnStrip1>:
inline void CC_LED_TurnOnGreenOnStrip1(void)
{
 80017f8:	b580      	push	{r7, lr}
 80017fa:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G1_GPIO_Port, G1_Pin, GPIO_PIN_SET);
 80017fc:	2380      	movs	r3, #128	@ 0x80
 80017fe:	005b      	lsls	r3, r3, #1
 8001800:	4803      	ldr	r0, [pc, #12]	@ (8001810 <CC_LED_TurnOnGreenOnStrip1+0x18>)
 8001802:	2201      	movs	r2, #1
 8001804:	0019      	movs	r1, r3
 8001806:	f002 fbb0 	bl	8003f6a <HAL_GPIO_WritePin>
}
 800180a:	46c0      	nop			@ (mov r8, r8)
 800180c:	46bd      	mov	sp, r7
 800180e:	bd80      	pop	{r7, pc}
 8001810:	50000400 	.word	0x50000400

08001814 <CC_LED_TurnOnBlueOnStrip1>:
inline void CC_LED_TurnOnBlueOnStrip1(void)
{
 8001814:	b580      	push	{r7, lr}
 8001816:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B1_GPIO_Port, B1_Pin, GPIO_PIN_SET);
 8001818:	4b04      	ldr	r3, [pc, #16]	@ (800182c <CC_LED_TurnOnBlueOnStrip1+0x18>)
 800181a:	2201      	movs	r2, #1
 800181c:	2180      	movs	r1, #128	@ 0x80
 800181e:	0018      	movs	r0, r3
 8001820:	f002 fba3 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001824:	46c0      	nop			@ (mov r8, r8)
 8001826:	46bd      	mov	sp, r7
 8001828:	bd80      	pop	{r7, pc}
 800182a:	46c0      	nop			@ (mov r8, r8)
 800182c:	50000400 	.word	0x50000400

08001830 <CC_LED_TurnOffRedOnStrip1>:
inline void CC_LED_TurnOffRedOnStrip1(void)
{
 8001830:	b580      	push	{r7, lr}
 8001832:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R1_GPIO_Port, R1_Pin, GPIO_PIN_RESET);
 8001834:	2380      	movs	r3, #128	@ 0x80
 8001836:	009b      	lsls	r3, r3, #2
 8001838:	4803      	ldr	r0, [pc, #12]	@ (8001848 <CC_LED_TurnOffRedOnStrip1+0x18>)
 800183a:	2200      	movs	r2, #0
 800183c:	0019      	movs	r1, r3
 800183e:	f002 fb94 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001842:	46c0      	nop			@ (mov r8, r8)
 8001844:	46bd      	mov	sp, r7
 8001846:	bd80      	pop	{r7, pc}
 8001848:	50000400 	.word	0x50000400

0800184c <CC_LED_TurnOffGreenOnStrip1>:
inline void CC_LED_TurnOffGreenOnStrip1(void)
{
 800184c:	b580      	push	{r7, lr}
 800184e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G1_GPIO_Port, G1_Pin, GPIO_PIN_RESET);
 8001850:	2380      	movs	r3, #128	@ 0x80
 8001852:	005b      	lsls	r3, r3, #1
 8001854:	4803      	ldr	r0, [pc, #12]	@ (8001864 <CC_LED_TurnOffGreenOnStrip1+0x18>)
 8001856:	2200      	movs	r2, #0
 8001858:	0019      	movs	r1, r3
 800185a:	f002 fb86 	bl	8003f6a <HAL_GPIO_WritePin>
}
 800185e:	46c0      	nop			@ (mov r8, r8)
 8001860:	46bd      	mov	sp, r7
 8001862:	bd80      	pop	{r7, pc}
 8001864:	50000400 	.word	0x50000400

08001868 <CC_LED_TurnOffBlueOnStrip1>:
inline void CC_LED_TurnOffBlueOnStrip1(void)
{
 8001868:	b580      	push	{r7, lr}
 800186a:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B1_GPIO_Port, B1_Pin, GPIO_PIN_RESET);
 800186c:	4b04      	ldr	r3, [pc, #16]	@ (8001880 <CC_LED_TurnOffBlueOnStrip1+0x18>)
 800186e:	2200      	movs	r2, #0
 8001870:	2180      	movs	r1, #128	@ 0x80
 8001872:	0018      	movs	r0, r3
 8001874:	f002 fb79 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001878:	46c0      	nop			@ (mov r8, r8)
 800187a:	46bd      	mov	sp, r7
 800187c:	bd80      	pop	{r7, pc}
 800187e:	46c0      	nop			@ (mov r8, r8)
 8001880:	50000400 	.word	0x50000400

08001884 <CC_LED_TurnOnRedOnStrip2>:
//Strip2
inline void CC_LED_TurnOnRedOnStrip2(void)
{
 8001884:	b580      	push	{r7, lr}
 8001886:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R2_GPIO_Port, R2_Pin, GPIO_PIN_SET);
 8001888:	4b04      	ldr	r3, [pc, #16]	@ (800189c <CC_LED_TurnOnRedOnStrip2+0x18>)
 800188a:	2201      	movs	r2, #1
 800188c:	2140      	movs	r1, #64	@ 0x40
 800188e:	0018      	movs	r0, r3
 8001890:	f002 fb6b 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001894:	46c0      	nop			@ (mov r8, r8)
 8001896:	46bd      	mov	sp, r7
 8001898:	bd80      	pop	{r7, pc}
 800189a:	46c0      	nop			@ (mov r8, r8)
 800189c:	50000400 	.word	0x50000400

080018a0 <CC_LED_TurnOnGreenOnStrip2>:
inline void CC_LED_TurnOnGreenOnStrip2(void)
{
 80018a0:	b580      	push	{r7, lr}
 80018a2:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G2_GPIO_Port, G2_Pin, GPIO_PIN_SET);
 80018a4:	4b04      	ldr	r3, [pc, #16]	@ (80018b8 <CC_LED_TurnOnGreenOnStrip2+0x18>)
 80018a6:	2201      	movs	r2, #1
 80018a8:	2120      	movs	r1, #32
 80018aa:	0018      	movs	r0, r3
 80018ac:	f002 fb5d 	bl	8003f6a <HAL_GPIO_WritePin>
}
 80018b0:	46c0      	nop			@ (mov r8, r8)
 80018b2:	46bd      	mov	sp, r7
 80018b4:	bd80      	pop	{r7, pc}
 80018b6:	46c0      	nop			@ (mov r8, r8)
 80018b8:	50000400 	.word	0x50000400

080018bc <CC_LED_TurnOnBlueOnStrip2>:
inline void CC_LED_TurnOnBlueOnStrip2(void)
{
 80018bc:	b580      	push	{r7, lr}
 80018be:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B2_GPIO_Port, B2_Pin, GPIO_PIN_SET);
 80018c0:	4b04      	ldr	r3, [pc, #16]	@ (80018d4 <CC_LED_TurnOnBlueOnStrip2+0x18>)
 80018c2:	2201      	movs	r2, #1
 80018c4:	2110      	movs	r1, #16
 80018c6:	0018      	movs	r0, r3
 80018c8:	f002 fb4f 	bl	8003f6a <HAL_GPIO_WritePin>
}
 80018cc:	46c0      	nop			@ (mov r8, r8)
 80018ce:	46bd      	mov	sp, r7
 80018d0:	bd80      	pop	{r7, pc}
 80018d2:	46c0      	nop			@ (mov r8, r8)
 80018d4:	50000400 	.word	0x50000400

080018d8 <CC_LED_TurnOffRedOnStrip2>:
inline void CC_LED_TurnOffRedOnStrip2(void)
{
 80018d8:	b580      	push	{r7, lr}
 80018da:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R2_GPIO_Port, R2_Pin, GPIO_PIN_RESET);
 80018dc:	4b04      	ldr	r3, [pc, #16]	@ (80018f0 <CC_LED_TurnOffRedOnStrip2+0x18>)
 80018de:	2200      	movs	r2, #0
 80018e0:	2140      	movs	r1, #64	@ 0x40
 80018e2:	0018      	movs	r0, r3
 80018e4:	f002 fb41 	bl	8003f6a <HAL_GPIO_WritePin>
}
 80018e8:	46c0      	nop			@ (mov r8, r8)
 80018ea:	46bd      	mov	sp, r7
 80018ec:	bd80      	pop	{r7, pc}
 80018ee:	46c0      	nop			@ (mov r8, r8)
 80018f0:	50000400 	.word	0x50000400

080018f4 <CC_LED_TurnOffGreenOnStrip2>:
inline void CC_LED_TurnOffGreenOnStrip2(void)
{
 80018f4:	b580      	push	{r7, lr}
 80018f6:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G2_GPIO_Port, G2_Pin, GPIO_PIN_RESET);
 80018f8:	4b04      	ldr	r3, [pc, #16]	@ (800190c <CC_LED_TurnOffGreenOnStrip2+0x18>)
 80018fa:	2200      	movs	r2, #0
 80018fc:	2120      	movs	r1, #32
 80018fe:	0018      	movs	r0, r3
 8001900:	f002 fb33 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001904:	46c0      	nop			@ (mov r8, r8)
 8001906:	46bd      	mov	sp, r7
 8001908:	bd80      	pop	{r7, pc}
 800190a:	46c0      	nop			@ (mov r8, r8)
 800190c:	50000400 	.word	0x50000400

08001910 <CC_LED_TurnOffBlueOnStrip2>:
inline void CC_LED_TurnOffBlueOnStrip2(void)
{
 8001910:	b580      	push	{r7, lr}
 8001912:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B2_GPIO_Port, B2_Pin, GPIO_PIN_RESET);
 8001914:	4b04      	ldr	r3, [pc, #16]	@ (8001928 <CC_LED_TurnOffBlueOnStrip2+0x18>)
 8001916:	2200      	movs	r2, #0
 8001918:	2110      	movs	r1, #16
 800191a:	0018      	movs	r0, r3
 800191c:	f002 fb25 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001920:	46c0      	nop			@ (mov r8, r8)
 8001922:	46bd      	mov	sp, r7
 8001924:	bd80      	pop	{r7, pc}
 8001926:	46c0      	nop			@ (mov r8, r8)
 8001928:	50000400 	.word	0x50000400

0800192c <CC_LED_TurnOnRedOnStrip3>:
//Strip3
inline void CC_LED_TurnOnRedOnStrip3(void)
{
 800192c:	b580      	push	{r7, lr}
 800192e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R3_GPIO_Port, R3_Pin, GPIO_PIN_SET);
 8001930:	4b04      	ldr	r3, [pc, #16]	@ (8001944 <CC_LED_TurnOnRedOnStrip3+0x18>)
 8001932:	2201      	movs	r2, #1
 8001934:	2108      	movs	r1, #8
 8001936:	0018      	movs	r0, r3
 8001938:	f002 fb17 	bl	8003f6a <HAL_GPIO_WritePin>
}
 800193c:	46c0      	nop			@ (mov r8, r8)
 800193e:	46bd      	mov	sp, r7
 8001940:	bd80      	pop	{r7, pc}
 8001942:	46c0      	nop			@ (mov r8, r8)
 8001944:	50000400 	.word	0x50000400

08001948 <CC_LED_TurnOnGreenOnStrip3>:
inline void CC_LED_TurnOnGreenOnStrip3(void)
{
 8001948:	b580      	push	{r7, lr}
 800194a:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G3_GPIO_Port, G3_Pin, GPIO_PIN_SET);
 800194c:	4b04      	ldr	r3, [pc, #16]	@ (8001960 <CC_LED_TurnOnGreenOnStrip3+0x18>)
 800194e:	2201      	movs	r2, #1
 8001950:	2108      	movs	r1, #8
 8001952:	0018      	movs	r0, r3
 8001954:	f002 fb09 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001958:	46c0      	nop			@ (mov r8, r8)
 800195a:	46bd      	mov	sp, r7
 800195c:	bd80      	pop	{r7, pc}
 800195e:	46c0      	nop			@ (mov r8, r8)
 8001960:	50000c00 	.word	0x50000c00

08001964 <CC_LED_TurnOnBlueOnStrip3>:
inline void CC_LED_TurnOnBlueOnStrip3(void)
{
 8001964:	b580      	push	{r7, lr}
 8001966:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B3_GPIO_Port, B3_Pin, GPIO_PIN_SET);
 8001968:	4b04      	ldr	r3, [pc, #16]	@ (800197c <CC_LED_TurnOnBlueOnStrip3+0x18>)
 800196a:	2201      	movs	r2, #1
 800196c:	2104      	movs	r1, #4
 800196e:	0018      	movs	r0, r3
 8001970:	f002 fafb 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001974:	46c0      	nop			@ (mov r8, r8)
 8001976:	46bd      	mov	sp, r7
 8001978:	bd80      	pop	{r7, pc}
 800197a:	46c0      	nop			@ (mov r8, r8)
 800197c:	50000c00 	.word	0x50000c00

08001980 <CC_LED_TurnOffRedOnStrip3>:
inline void CC_LED_TurnOffRedOnStrip3(void)
{
 8001980:	b580      	push	{r7, lr}
 8001982:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R3_GPIO_Port, R3_Pin, GPIO_PIN_RESET);
 8001984:	4b04      	ldr	r3, [pc, #16]	@ (8001998 <CC_LED_TurnOffRedOnStrip3+0x18>)
 8001986:	2200      	movs	r2, #0
 8001988:	2108      	movs	r1, #8
 800198a:	0018      	movs	r0, r3
 800198c:	f002 faed 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001990:	46c0      	nop			@ (mov r8, r8)
 8001992:	46bd      	mov	sp, r7
 8001994:	bd80      	pop	{r7, pc}
 8001996:	46c0      	nop			@ (mov r8, r8)
 8001998:	50000400 	.word	0x50000400

0800199c <CC_LED_TurnOffGreenOnStrip3>:
inline void CC_LED_TurnOffGreenOnStrip3(void)
{
 800199c:	b580      	push	{r7, lr}
 800199e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G3_GPIO_Port, G3_Pin, GPIO_PIN_RESET);
 80019a0:	4b04      	ldr	r3, [pc, #16]	@ (80019b4 <CC_LED_TurnOffGreenOnStrip3+0x18>)
 80019a2:	2200      	movs	r2, #0
 80019a4:	2108      	movs	r1, #8
 80019a6:	0018      	movs	r0, r3
 80019a8:	f002 fadf 	bl	8003f6a <HAL_GPIO_WritePin>
}
 80019ac:	46c0      	nop			@ (mov r8, r8)
 80019ae:	46bd      	mov	sp, r7
 80019b0:	bd80      	pop	{r7, pc}
 80019b2:	46c0      	nop			@ (mov r8, r8)
 80019b4:	50000c00 	.word	0x50000c00

080019b8 <CC_LED_TurnOffBlueOnStrip3>:
inline void CC_LED_TurnOffBlueOnStrip3(void)
{
 80019b8:	b580      	push	{r7, lr}
 80019ba:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B3_GPIO_Port, B3_Pin, GPIO_PIN_RESET);
 80019bc:	4b04      	ldr	r3, [pc, #16]	@ (80019d0 <CC_LED_TurnOffBlueOnStrip3+0x18>)
 80019be:	2200      	movs	r2, #0
 80019c0:	2104      	movs	r1, #4
 80019c2:	0018      	movs	r0, r3
 80019c4:	f002 fad1 	bl	8003f6a <HAL_GPIO_WritePin>
}
 80019c8:	46c0      	nop			@ (mov r8, r8)
 80019ca:	46bd      	mov	sp, r7
 80019cc:	bd80      	pop	{r7, pc}
 80019ce:	46c0      	nop			@ (mov r8, r8)
 80019d0:	50000c00 	.word	0x50000c00

080019d4 <CC_LED_TurnOnRedOnStrip4>:
//Strip4
inline void CC_LED_TurnOnRedOnStrip4(void)
{
 80019d4:	b580      	push	{r7, lr}
 80019d6:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R4_GPIO_Port, R4_Pin, GPIO_PIN_SET);
 80019d8:	4b04      	ldr	r3, [pc, #16]	@ (80019ec <CC_LED_TurnOnRedOnStrip4+0x18>)
 80019da:	2201      	movs	r2, #1
 80019dc:	2102      	movs	r1, #2
 80019de:	0018      	movs	r0, r3
 80019e0:	f002 fac3 	bl	8003f6a <HAL_GPIO_WritePin>
}
 80019e4:	46c0      	nop			@ (mov r8, r8)
 80019e6:	46bd      	mov	sp, r7
 80019e8:	bd80      	pop	{r7, pc}
 80019ea:	46c0      	nop			@ (mov r8, r8)
 80019ec:	50000c00 	.word	0x50000c00

080019f0 <CC_LED_TurnOnGreenOnStrip4>:
inline void CC_LED_TurnOnGreenOnStrip4(void)
{
 80019f0:	b580      	push	{r7, lr}
 80019f2:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G4_GPIO_Port, G4_Pin, GPIO_PIN_SET);
 80019f4:	4b04      	ldr	r3, [pc, #16]	@ (8001a08 <CC_LED_TurnOnGreenOnStrip4+0x18>)
 80019f6:	2201      	movs	r2, #1
 80019f8:	2101      	movs	r1, #1
 80019fa:	0018      	movs	r0, r3
 80019fc:	f002 fab5 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001a00:	46c0      	nop			@ (mov r8, r8)
 8001a02:	46bd      	mov	sp, r7
 8001a04:	bd80      	pop	{r7, pc}
 8001a06:	46c0      	nop			@ (mov r8, r8)
 8001a08:	50000c00 	.word	0x50000c00

08001a0c <CC_LED_TurnOnBlueOnStrip4>:
inline void CC_LED_TurnOnBlueOnStrip4(void)
{
 8001a0c:	b580      	push	{r7, lr}
 8001a0e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B4_GPIO_Port, B4_Pin, GPIO_PIN_SET);
 8001a10:	2380      	movs	r3, #128	@ 0x80
 8001a12:	0219      	lsls	r1, r3, #8
 8001a14:	23a0      	movs	r3, #160	@ 0xa0
 8001a16:	05db      	lsls	r3, r3, #23
 8001a18:	2201      	movs	r2, #1
 8001a1a:	0018      	movs	r0, r3
 8001a1c:	f002 faa5 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001a20:	46c0      	nop			@ (mov r8, r8)
 8001a22:	46bd      	mov	sp, r7
 8001a24:	bd80      	pop	{r7, pc}
	...

08001a28 <CC_LED_TurnOffRedOnStrip4>:
inline void CC_LED_TurnOffRedOnStrip4(void)
{
 8001a28:	b580      	push	{r7, lr}
 8001a2a:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R4_GPIO_Port, R4_Pin, GPIO_PIN_RESET);
 8001a2c:	4b04      	ldr	r3, [pc, #16]	@ (8001a40 <CC_LED_TurnOffRedOnStrip4+0x18>)
 8001a2e:	2200      	movs	r2, #0
 8001a30:	2102      	movs	r1, #2
 8001a32:	0018      	movs	r0, r3
 8001a34:	f002 fa99 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001a38:	46c0      	nop			@ (mov r8, r8)
 8001a3a:	46bd      	mov	sp, r7
 8001a3c:	bd80      	pop	{r7, pc}
 8001a3e:	46c0      	nop			@ (mov r8, r8)
 8001a40:	50000c00 	.word	0x50000c00

08001a44 <CC_LED_TurnOffGreenOnStrip4>:
inline void CC_LED_TurnOffGreenOnStrip4(void)
{
 8001a44:	b580      	push	{r7, lr}
 8001a46:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G4_GPIO_Port, G4_Pin, GPIO_PIN_RESET);
 8001a48:	4b04      	ldr	r3, [pc, #16]	@ (8001a5c <CC_LED_TurnOffGreenOnStrip4+0x18>)
 8001a4a:	2200      	movs	r2, #0
 8001a4c:	2101      	movs	r1, #1
 8001a4e:	0018      	movs	r0, r3
 8001a50:	f002 fa8b 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001a54:	46c0      	nop			@ (mov r8, r8)
 8001a56:	46bd      	mov	sp, r7
 8001a58:	bd80      	pop	{r7, pc}
 8001a5a:	46c0      	nop			@ (mov r8, r8)
 8001a5c:	50000c00 	.word	0x50000c00

08001a60 <CC_LED_TurnOffBlueOnStrip4>:
inline void CC_LED_TurnOffBlueOnStrip4(void)
{
 8001a60:	b580      	push	{r7, lr}
 8001a62:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B4_GPIO_Port, B4_Pin, GPIO_PIN_RESET);
 8001a64:	2380      	movs	r3, #128	@ 0x80
 8001a66:	0219      	lsls	r1, r3, #8
 8001a68:	23a0      	movs	r3, #160	@ 0xa0
 8001a6a:	05db      	lsls	r3, r3, #23
 8001a6c:	2200      	movs	r2, #0
 8001a6e:	0018      	movs	r0, r3
 8001a70:	f002 fa7b 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001a74:	46c0      	nop			@ (mov r8, r8)
 8001a76:	46bd      	mov	sp, r7
 8001a78:	bd80      	pop	{r7, pc}

08001a7a <CC_LED_TurnOnRedOnStrip5>:
//Strip5
inline void CC_LED_TurnOnRedOnStrip5(void)
{
 8001a7a:	b580      	push	{r7, lr}
 8001a7c:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R5_GPIO_Port, R5_Pin, GPIO_PIN_SET);
 8001a7e:	2380      	movs	r3, #128	@ 0x80
 8001a80:	0159      	lsls	r1, r3, #5
 8001a82:	23a0      	movs	r3, #160	@ 0xa0
 8001a84:	05db      	lsls	r3, r3, #23
 8001a86:	2201      	movs	r2, #1
 8001a88:	0018      	movs	r0, r3
 8001a8a:	f002 fa6e 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001a8e:	46c0      	nop			@ (mov r8, r8)
 8001a90:	46bd      	mov	sp, r7
 8001a92:	bd80      	pop	{r7, pc}

08001a94 <CC_LED_TurnOnGreenOnStrip5>:
inline void CC_LED_TurnOnGreenOnStrip5(void)
{
 8001a94:	b580      	push	{r7, lr}
 8001a96:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G5_GPIO_Port, G5_Pin, GPIO_PIN_SET);
 8001a98:	2380      	movs	r3, #128	@ 0x80
 8001a9a:	0119      	lsls	r1, r3, #4
 8001a9c:	23a0      	movs	r3, #160	@ 0xa0
 8001a9e:	05db      	lsls	r3, r3, #23
 8001aa0:	2201      	movs	r2, #1
 8001aa2:	0018      	movs	r0, r3
 8001aa4:	f002 fa61 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001aa8:	46c0      	nop			@ (mov r8, r8)
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	bd80      	pop	{r7, pc}
	...

08001ab0 <CC_LED_TurnOnBlueOnStrip5>:
inline void CC_LED_TurnOnBlueOnStrip5(void)
{
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B5_GPIO_Port, B5_Pin, GPIO_PIN_SET);
 8001ab4:	4b04      	ldr	r3, [pc, #16]	@ (8001ac8 <CC_LED_TurnOnBlueOnStrip5+0x18>)
 8001ab6:	2201      	movs	r2, #1
 8001ab8:	2180      	movs	r1, #128	@ 0x80
 8001aba:	0018      	movs	r0, r3
 8001abc:	f002 fa55 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001ac0:	46c0      	nop			@ (mov r8, r8)
 8001ac2:	46bd      	mov	sp, r7
 8001ac4:	bd80      	pop	{r7, pc}
 8001ac6:	46c0      	nop			@ (mov r8, r8)
 8001ac8:	50000800 	.word	0x50000800

08001acc <CC_LED_TurnOffRedOnStrip5>:
inline void CC_LED_TurnOffRedOnStrip5(void)
{
 8001acc:	b580      	push	{r7, lr}
 8001ace:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R5_GPIO_Port, R5_Pin, GPIO_PIN_RESET);
 8001ad0:	2380      	movs	r3, #128	@ 0x80
 8001ad2:	0159      	lsls	r1, r3, #5
 8001ad4:	23a0      	movs	r3, #160	@ 0xa0
 8001ad6:	05db      	lsls	r3, r3, #23
 8001ad8:	2200      	movs	r2, #0
 8001ada:	0018      	movs	r0, r3
 8001adc:	f002 fa45 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001ae0:	46c0      	nop			@ (mov r8, r8)
 8001ae2:	46bd      	mov	sp, r7
 8001ae4:	bd80      	pop	{r7, pc}

08001ae6 <CC_LED_TurnOffGreenOnStrip5>:
inline void CC_LED_TurnOffGreenOnStrip5(void)
{
 8001ae6:	b580      	push	{r7, lr}
 8001ae8:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G5_GPIO_Port, G5_Pin, GPIO_PIN_RESET);
 8001aea:	2380      	movs	r3, #128	@ 0x80
 8001aec:	0119      	lsls	r1, r3, #4
 8001aee:	23a0      	movs	r3, #160	@ 0xa0
 8001af0:	05db      	lsls	r3, r3, #23
 8001af2:	2200      	movs	r2, #0
 8001af4:	0018      	movs	r0, r3
 8001af6:	f002 fa38 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001afa:	46c0      	nop			@ (mov r8, r8)
 8001afc:	46bd      	mov	sp, r7
 8001afe:	bd80      	pop	{r7, pc}

08001b00 <CC_LED_TurnOffBlueOnStrip5>:
inline void CC_LED_TurnOffBlueOnStrip5(void)
{
 8001b00:	b580      	push	{r7, lr}
 8001b02:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B5_GPIO_Port, B5_Pin, GPIO_PIN_RESET);
 8001b04:	4b04      	ldr	r3, [pc, #16]	@ (8001b18 <CC_LED_TurnOffBlueOnStrip5+0x18>)
 8001b06:	2200      	movs	r2, #0
 8001b08:	2180      	movs	r1, #128	@ 0x80
 8001b0a:	0018      	movs	r0, r3
 8001b0c:	f002 fa2d 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001b10:	46c0      	nop			@ (mov r8, r8)
 8001b12:	46bd      	mov	sp, r7
 8001b14:	bd80      	pop	{r7, pc}
 8001b16:	46c0      	nop			@ (mov r8, r8)
 8001b18:	50000800 	.word	0x50000800

08001b1c <CC_LED_TurnOnRedOnStrip6>:
//Strip6
inline void CC_LED_TurnOnRedOnStrip6(void)
{
 8001b1c:	b580      	push	{r7, lr}
 8001b1e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R6_GPIO_Port, R6_Pin, GPIO_PIN_SET);
 8001b20:	4b04      	ldr	r3, [pc, #16]	@ (8001b34 <CC_LED_TurnOnRedOnStrip6+0x18>)
 8001b22:	2201      	movs	r2, #1
 8001b24:	2140      	movs	r1, #64	@ 0x40
 8001b26:	0018      	movs	r0, r3
 8001b28:	f002 fa1f 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001b2c:	46c0      	nop			@ (mov r8, r8)
 8001b2e:	46bd      	mov	sp, r7
 8001b30:	bd80      	pop	{r7, pc}
 8001b32:	46c0      	nop			@ (mov r8, r8)
 8001b34:	50000800 	.word	0x50000800

08001b38 <CC_LED_TurnOnGreenOnStrip6>:
inline void CC_LED_TurnOnGreenOnStrip6(void)
{
 8001b38:	b580      	push	{r7, lr}
 8001b3a:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G6_GPIO_Port, G6_Pin, GPIO_PIN_SET);
 8001b3c:	2380      	movs	r3, #128	@ 0x80
 8001b3e:	0059      	lsls	r1, r3, #1
 8001b40:	23a0      	movs	r3, #160	@ 0xa0
 8001b42:	05db      	lsls	r3, r3, #23
 8001b44:	2201      	movs	r2, #1
 8001b46:	0018      	movs	r0, r3
 8001b48:	f002 fa0f 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001b4c:	46c0      	nop			@ (mov r8, r8)
 8001b4e:	46bd      	mov	sp, r7
 8001b50:	bd80      	pop	{r7, pc}
	...

08001b54 <CC_LED_TurnOnBlueOnStrip6>:
inline void CC_LED_TurnOnBlueOnStrip6(void)
{
 8001b54:	b580      	push	{r7, lr}
 8001b56:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B6_GPIO_Port, B6_Pin, GPIO_PIN_SET);
 8001b58:	2380      	movs	r3, #128	@ 0x80
 8001b5a:	021b      	lsls	r3, r3, #8
 8001b5c:	4803      	ldr	r0, [pc, #12]	@ (8001b6c <CC_LED_TurnOnBlueOnStrip6+0x18>)
 8001b5e:	2201      	movs	r2, #1
 8001b60:	0019      	movs	r1, r3
 8001b62:	f002 fa02 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001b66:	46c0      	nop			@ (mov r8, r8)
 8001b68:	46bd      	mov	sp, r7
 8001b6a:	bd80      	pop	{r7, pc}
 8001b6c:	50000400 	.word	0x50000400

08001b70 <CC_LED_TurnOffRedOnStrip6>:
inline void CC_LED_TurnOffRedOnStrip6(void)
{
 8001b70:	b580      	push	{r7, lr}
 8001b72:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R6_GPIO_Port, R6_Pin, GPIO_PIN_RESET);
 8001b74:	4b04      	ldr	r3, [pc, #16]	@ (8001b88 <CC_LED_TurnOffRedOnStrip6+0x18>)
 8001b76:	2200      	movs	r2, #0
 8001b78:	2140      	movs	r1, #64	@ 0x40
 8001b7a:	0018      	movs	r0, r3
 8001b7c:	f002 f9f5 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001b80:	46c0      	nop			@ (mov r8, r8)
 8001b82:	46bd      	mov	sp, r7
 8001b84:	bd80      	pop	{r7, pc}
 8001b86:	46c0      	nop			@ (mov r8, r8)
 8001b88:	50000800 	.word	0x50000800

08001b8c <CC_LED_TurnOffGreenOnStrip6>:
inline void CC_LED_TurnOffGreenOnStrip6(void)
{
 8001b8c:	b580      	push	{r7, lr}
 8001b8e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G6_GPIO_Port, G6_Pin, GPIO_PIN_RESET);
 8001b90:	2380      	movs	r3, #128	@ 0x80
 8001b92:	0059      	lsls	r1, r3, #1
 8001b94:	23a0      	movs	r3, #160	@ 0xa0
 8001b96:	05db      	lsls	r3, r3, #23
 8001b98:	2200      	movs	r2, #0
 8001b9a:	0018      	movs	r0, r3
 8001b9c:	f002 f9e5 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001ba0:	46c0      	nop			@ (mov r8, r8)
 8001ba2:	46bd      	mov	sp, r7
 8001ba4:	bd80      	pop	{r7, pc}
	...

08001ba8 <CC_LED_TurnOffBlueOnStrip6>:
inline void CC_LED_TurnOffBlueOnStrip6(void)
{
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B6_GPIO_Port, B6_Pin, GPIO_PIN_RESET);
 8001bac:	2380      	movs	r3, #128	@ 0x80
 8001bae:	021b      	lsls	r3, r3, #8
 8001bb0:	4803      	ldr	r0, [pc, #12]	@ (8001bc0 <CC_LED_TurnOffBlueOnStrip6+0x18>)
 8001bb2:	2200      	movs	r2, #0
 8001bb4:	0019      	movs	r1, r3
 8001bb6:	f002 f9d8 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001bba:	46c0      	nop			@ (mov r8, r8)
 8001bbc:	46bd      	mov	sp, r7
 8001bbe:	bd80      	pop	{r7, pc}
 8001bc0:	50000400 	.word	0x50000400

08001bc4 <CC_LED_TurnOnRedOnStrip7>:
//Strip7
inline void CC_LED_TurnOnRedOnStrip7(void)
{
 8001bc4:	b580      	push	{r7, lr}
 8001bc6:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R7_GPIO_Port, R7_Pin, GPIO_PIN_SET);
 8001bc8:	2380      	movs	r3, #128	@ 0x80
 8001bca:	01db      	lsls	r3, r3, #7
 8001bcc:	4803      	ldr	r0, [pc, #12]	@ (8001bdc <CC_LED_TurnOnRedOnStrip7+0x18>)
 8001bce:	2201      	movs	r2, #1
 8001bd0:	0019      	movs	r1, r3
 8001bd2:	f002 f9ca 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001bd6:	46c0      	nop			@ (mov r8, r8)
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	bd80      	pop	{r7, pc}
 8001bdc:	50000400 	.word	0x50000400

08001be0 <CC_LED_TurnOnGreenOnStrip7>:
inline void CC_LED_TurnOnGreenOnStrip7(void)
{
 8001be0:	b580      	push	{r7, lr}
 8001be2:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G7_GPIO_Port, G7_Pin, GPIO_PIN_SET);
 8001be4:	2380      	movs	r3, #128	@ 0x80
 8001be6:	019b      	lsls	r3, r3, #6
 8001be8:	4803      	ldr	r0, [pc, #12]	@ (8001bf8 <CC_LED_TurnOnGreenOnStrip7+0x18>)
 8001bea:	2201      	movs	r2, #1
 8001bec:	0019      	movs	r1, r3
 8001bee:	f002 f9bc 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001bf2:	46c0      	nop			@ (mov r8, r8)
 8001bf4:	46bd      	mov	sp, r7
 8001bf6:	bd80      	pop	{r7, pc}
 8001bf8:	50000400 	.word	0x50000400

08001bfc <CC_LED_TurnOnBlueOnStrip7>:
inline void CC_LED_TurnOnBlueOnStrip7(void)
{
 8001bfc:	b580      	push	{r7, lr}
 8001bfe:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B7_GPIO_Port, B7_Pin, GPIO_PIN_SET);
 8001c00:	2380      	movs	r3, #128	@ 0x80
 8001c02:	015b      	lsls	r3, r3, #5
 8001c04:	4803      	ldr	r0, [pc, #12]	@ (8001c14 <CC_LED_TurnOnBlueOnStrip7+0x18>)
 8001c06:	2201      	movs	r2, #1
 8001c08:	0019      	movs	r1, r3
 8001c0a:	f002 f9ae 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001c0e:	46c0      	nop			@ (mov r8, r8)
 8001c10:	46bd      	mov	sp, r7
 8001c12:	bd80      	pop	{r7, pc}
 8001c14:	50000400 	.word	0x50000400

08001c18 <CC_LED_TurnOffRedOnStrip7>:
inline void CC_LED_TurnOffRedOnStrip7(void)
{
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R7_GPIO_Port, R7_Pin, GPIO_PIN_RESET);
 8001c1c:	2380      	movs	r3, #128	@ 0x80
 8001c1e:	01db      	lsls	r3, r3, #7
 8001c20:	4803      	ldr	r0, [pc, #12]	@ (8001c30 <CC_LED_TurnOffRedOnStrip7+0x18>)
 8001c22:	2200      	movs	r2, #0
 8001c24:	0019      	movs	r1, r3
 8001c26:	f002 f9a0 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001c2a:	46c0      	nop			@ (mov r8, r8)
 8001c2c:	46bd      	mov	sp, r7
 8001c2e:	bd80      	pop	{r7, pc}
 8001c30:	50000400 	.word	0x50000400

08001c34 <CC_LED_TurnOffGreenOnStrip7>:
inline void CC_LED_TurnOffGreenOnStrip7(void)
{
 8001c34:	b580      	push	{r7, lr}
 8001c36:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G7_GPIO_Port, G7_Pin, GPIO_PIN_RESET);
 8001c38:	2380      	movs	r3, #128	@ 0x80
 8001c3a:	019b      	lsls	r3, r3, #6
 8001c3c:	4803      	ldr	r0, [pc, #12]	@ (8001c4c <CC_LED_TurnOffGreenOnStrip7+0x18>)
 8001c3e:	2200      	movs	r2, #0
 8001c40:	0019      	movs	r1, r3
 8001c42:	f002 f992 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001c46:	46c0      	nop			@ (mov r8, r8)
 8001c48:	46bd      	mov	sp, r7
 8001c4a:	bd80      	pop	{r7, pc}
 8001c4c:	50000400 	.word	0x50000400

08001c50 <CC_LED_TurnOffBlueOnStrip7>:
inline void CC_LED_TurnOffBlueOnStrip7(void)
{
 8001c50:	b580      	push	{r7, lr}
 8001c52:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B7_GPIO_Port, B7_Pin, GPIO_PIN_RESET);
 8001c54:	2380      	movs	r3, #128	@ 0x80
 8001c56:	015b      	lsls	r3, r3, #5
 8001c58:	4803      	ldr	r0, [pc, #12]	@ (8001c68 <CC_LED_TurnOffBlueOnStrip7+0x18>)
 8001c5a:	2200      	movs	r2, #0
 8001c5c:	0019      	movs	r1, r3
 8001c5e:	f002 f984 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001c62:	46c0      	nop			@ (mov r8, r8)
 8001c64:	46bd      	mov	sp, r7
 8001c66:	bd80      	pop	{r7, pc}
 8001c68:	50000400 	.word	0x50000400

08001c6c <CC_LED_TurnOnRedOnStrip8>:
//Strip8
inline void CC_LED_TurnOnRedOnStrip8(void)
{
 8001c6c:	b580      	push	{r7, lr}
 8001c6e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R8_GPIO_Port, R8_Pin, GPIO_PIN_SET);
 8001c70:	2380      	movs	r3, #128	@ 0x80
 8001c72:	011b      	lsls	r3, r3, #4
 8001c74:	4803      	ldr	r0, [pc, #12]	@ (8001c84 <CC_LED_TurnOnRedOnStrip8+0x18>)
 8001c76:	2201      	movs	r2, #1
 8001c78:	0019      	movs	r1, r3
 8001c7a:	f002 f976 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001c7e:	46c0      	nop			@ (mov r8, r8)
 8001c80:	46bd      	mov	sp, r7
 8001c82:	bd80      	pop	{r7, pc}
 8001c84:	50000400 	.word	0x50000400

08001c88 <CC_LED_TurnOnGreenOnStrip8>:
inline void CC_LED_TurnOnGreenOnStrip8(void)
{
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G8_GPIO_Port, G8_Pin, GPIO_PIN_SET);
 8001c8c:	2380      	movs	r3, #128	@ 0x80
 8001c8e:	00db      	lsls	r3, r3, #3
 8001c90:	4803      	ldr	r0, [pc, #12]	@ (8001ca0 <CC_LED_TurnOnGreenOnStrip8+0x18>)
 8001c92:	2201      	movs	r2, #1
 8001c94:	0019      	movs	r1, r3
 8001c96:	f002 f968 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001c9a:	46c0      	nop			@ (mov r8, r8)
 8001c9c:	46bd      	mov	sp, r7
 8001c9e:	bd80      	pop	{r7, pc}
 8001ca0:	50000400 	.word	0x50000400

08001ca4 <CC_LED_TurnOnBlueOnStrip8>:
inline void CC_LED_TurnOnBlueOnStrip8(void)
{
 8001ca4:	b580      	push	{r7, lr}
 8001ca6:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B8_GPIO_Port, B8_Pin, GPIO_PIN_SET);
 8001ca8:	4b04      	ldr	r3, [pc, #16]	@ (8001cbc <CC_LED_TurnOnBlueOnStrip8+0x18>)
 8001caa:	2201      	movs	r2, #1
 8001cac:	2104      	movs	r1, #4
 8001cae:	0018      	movs	r0, r3
 8001cb0:	f002 f95b 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001cb4:	46c0      	nop			@ (mov r8, r8)
 8001cb6:	46bd      	mov	sp, r7
 8001cb8:	bd80      	pop	{r7, pc}
 8001cba:	46c0      	nop			@ (mov r8, r8)
 8001cbc:	50000400 	.word	0x50000400

08001cc0 <CC_LED_TurnOffRedOnStrip8>:
inline void CC_LED_TurnOffRedOnStrip8(void)
{
 8001cc0:	b580      	push	{r7, lr}
 8001cc2:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R8_GPIO_Port, R8_Pin, GPIO_PIN_RESET);
 8001cc4:	2380      	movs	r3, #128	@ 0x80
 8001cc6:	011b      	lsls	r3, r3, #4
 8001cc8:	4803      	ldr	r0, [pc, #12]	@ (8001cd8 <CC_LED_TurnOffRedOnStrip8+0x18>)
 8001cca:	2200      	movs	r2, #0
 8001ccc:	0019      	movs	r1, r3
 8001cce:	f002 f94c 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001cd2:	46c0      	nop			@ (mov r8, r8)
 8001cd4:	46bd      	mov	sp, r7
 8001cd6:	bd80      	pop	{r7, pc}
 8001cd8:	50000400 	.word	0x50000400

08001cdc <CC_LED_TurnOffGreenOnStrip8>:
inline void CC_LED_TurnOffGreenOnStrip8(void)
{
 8001cdc:	b580      	push	{r7, lr}
 8001cde:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G8_GPIO_Port, G8_Pin, GPIO_PIN_RESET);
 8001ce0:	2380      	movs	r3, #128	@ 0x80
 8001ce2:	00db      	lsls	r3, r3, #3
 8001ce4:	4803      	ldr	r0, [pc, #12]	@ (8001cf4 <CC_LED_TurnOffGreenOnStrip8+0x18>)
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	0019      	movs	r1, r3
 8001cea:	f002 f93e 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001cee:	46c0      	nop			@ (mov r8, r8)
 8001cf0:	46bd      	mov	sp, r7
 8001cf2:	bd80      	pop	{r7, pc}
 8001cf4:	50000400 	.word	0x50000400

08001cf8 <CC_LED_TurnOffBlueOnStrip8>:
inline void CC_LED_TurnOffBlueOnStrip8(void)
{
 8001cf8:	b580      	push	{r7, lr}
 8001cfa:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B8_GPIO_Port, B8_Pin, GPIO_PIN_RESET);
 8001cfc:	4b04      	ldr	r3, [pc, #16]	@ (8001d10 <CC_LED_TurnOffBlueOnStrip8+0x18>)
 8001cfe:	2200      	movs	r2, #0
 8001d00:	2104      	movs	r1, #4
 8001d02:	0018      	movs	r0, r3
 8001d04:	f002 f931 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001d08:	46c0      	nop			@ (mov r8, r8)
 8001d0a:	46bd      	mov	sp, r7
 8001d0c:	bd80      	pop	{r7, pc}
 8001d0e:	46c0      	nop			@ (mov r8, r8)
 8001d10:	50000400 	.word	0x50000400

08001d14 <CC_LED_TurnOnRedOnStrip9>:
//Strip9
inline void CC_LED_TurnOnRedOnStrip9(void)
{
 8001d14:	b580      	push	{r7, lr}
 8001d16:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R9_GPIO_Port, R9_Pin, GPIO_PIN_SET);
 8001d18:	23a0      	movs	r3, #160	@ 0xa0
 8001d1a:	05db      	lsls	r3, r3, #23
 8001d1c:	2201      	movs	r2, #1
 8001d1e:	2180      	movs	r1, #128	@ 0x80
 8001d20:	0018      	movs	r0, r3
 8001d22:	f002 f922 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001d26:	46c0      	nop			@ (mov r8, r8)
 8001d28:	46bd      	mov	sp, r7
 8001d2a:	bd80      	pop	{r7, pc}

08001d2c <CC_LED_TurnOnGreenOnStrip9>:
inline void CC_LED_TurnOnGreenOnStrip9(void)
{
 8001d2c:	b580      	push	{r7, lr}
 8001d2e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G9_GPIO_Port, G9_Pin, GPIO_PIN_SET);
 8001d30:	23a0      	movs	r3, #160	@ 0xa0
 8001d32:	05db      	lsls	r3, r3, #23
 8001d34:	2201      	movs	r2, #1
 8001d36:	2140      	movs	r1, #64	@ 0x40
 8001d38:	0018      	movs	r0, r3
 8001d3a:	f002 f916 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001d3e:	46c0      	nop			@ (mov r8, r8)
 8001d40:	46bd      	mov	sp, r7
 8001d42:	bd80      	pop	{r7, pc}

08001d44 <CC_LED_TurnOnBlueOnStrip9>:
inline void CC_LED_TurnOnBlueOnStrip9(void)
{
 8001d44:	b580      	push	{r7, lr}
 8001d46:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B9_GPIO_Port, B9_Pin, GPIO_PIN_SET);
 8001d48:	23a0      	movs	r3, #160	@ 0xa0
 8001d4a:	05db      	lsls	r3, r3, #23
 8001d4c:	2201      	movs	r2, #1
 8001d4e:	2120      	movs	r1, #32
 8001d50:	0018      	movs	r0, r3
 8001d52:	f002 f90a 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001d56:	46c0      	nop			@ (mov r8, r8)
 8001d58:	46bd      	mov	sp, r7
 8001d5a:	bd80      	pop	{r7, pc}

08001d5c <CC_LED_TurnOffRedOnStrip9>:
inline void CC_LED_TurnOffRedOnStrip9(void)
{
 8001d5c:	b580      	push	{r7, lr}
 8001d5e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R9_GPIO_Port, R9_Pin, GPIO_PIN_RESET);
 8001d60:	23a0      	movs	r3, #160	@ 0xa0
 8001d62:	05db      	lsls	r3, r3, #23
 8001d64:	2200      	movs	r2, #0
 8001d66:	2180      	movs	r1, #128	@ 0x80
 8001d68:	0018      	movs	r0, r3
 8001d6a:	f002 f8fe 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001d6e:	46c0      	nop			@ (mov r8, r8)
 8001d70:	46bd      	mov	sp, r7
 8001d72:	bd80      	pop	{r7, pc}

08001d74 <CC_LED_TurnOffGreenOnStrip9>:
inline void CC_LED_TurnOffGreenOnStrip9(void)
{
 8001d74:	b580      	push	{r7, lr}
 8001d76:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G9_GPIO_Port, G9_Pin, GPIO_PIN_RESET);
 8001d78:	23a0      	movs	r3, #160	@ 0xa0
 8001d7a:	05db      	lsls	r3, r3, #23
 8001d7c:	2200      	movs	r2, #0
 8001d7e:	2140      	movs	r1, #64	@ 0x40
 8001d80:	0018      	movs	r0, r3
 8001d82:	f002 f8f2 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001d86:	46c0      	nop			@ (mov r8, r8)
 8001d88:	46bd      	mov	sp, r7
 8001d8a:	bd80      	pop	{r7, pc}

08001d8c <CC_LED_TurnOffBlueOnStrip9>:
inline void CC_LED_TurnOffBlueOnStrip9(void)
{
 8001d8c:	b580      	push	{r7, lr}
 8001d8e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B9_GPIO_Port, B9_Pin, GPIO_PIN_RESET);
 8001d90:	23a0      	movs	r3, #160	@ 0xa0
 8001d92:	05db      	lsls	r3, r3, #23
 8001d94:	2200      	movs	r2, #0
 8001d96:	2120      	movs	r1, #32
 8001d98:	0018      	movs	r0, r3
 8001d9a:	f002 f8e6 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001d9e:	46c0      	nop			@ (mov r8, r8)
 8001da0:	46bd      	mov	sp, r7
 8001da2:	bd80      	pop	{r7, pc}

08001da4 <CC_LED_TurnOnRedOnStrip10>:
//Strip10
inline void CC_LED_TurnOnRedOnStrip10(void)
{
 8001da4:	b580      	push	{r7, lr}
 8001da6:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R10_GPIO_Port, R10_Pin, GPIO_PIN_SET);
 8001da8:	23a0      	movs	r3, #160	@ 0xa0
 8001daa:	05db      	lsls	r3, r3, #23
 8001dac:	2201      	movs	r2, #1
 8001dae:	2110      	movs	r1, #16
 8001db0:	0018      	movs	r0, r3
 8001db2:	f002 f8da 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001db6:	46c0      	nop			@ (mov r8, r8)
 8001db8:	46bd      	mov	sp, r7
 8001dba:	bd80      	pop	{r7, pc}

08001dbc <CC_LED_TurnOnGreenOnStrip10>:
inline void CC_LED_TurnOnGreenOnStrip10(void)
{
 8001dbc:	b580      	push	{r7, lr}
 8001dbe:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G10_GPIO_Port, G10_Pin, GPIO_PIN_SET);
 8001dc0:	23a0      	movs	r3, #160	@ 0xa0
 8001dc2:	05db      	lsls	r3, r3, #23
 8001dc4:	2201      	movs	r2, #1
 8001dc6:	2108      	movs	r1, #8
 8001dc8:	0018      	movs	r0, r3
 8001dca:	f002 f8ce 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001dce:	46c0      	nop			@ (mov r8, r8)
 8001dd0:	46bd      	mov	sp, r7
 8001dd2:	bd80      	pop	{r7, pc}

08001dd4 <CC_LED_TurnOnBlueOnStrip10>:
inline void CC_LED_TurnOnBlueOnStrip10(void)
{
 8001dd4:	b580      	push	{r7, lr}
 8001dd6:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B10_GPIO_Port, B10_Pin, GPIO_PIN_SET);
 8001dd8:	23a0      	movs	r3, #160	@ 0xa0
 8001dda:	05db      	lsls	r3, r3, #23
 8001ddc:	2201      	movs	r2, #1
 8001dde:	2104      	movs	r1, #4
 8001de0:	0018      	movs	r0, r3
 8001de2:	f002 f8c2 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001de6:	46c0      	nop			@ (mov r8, r8)
 8001de8:	46bd      	mov	sp, r7
 8001dea:	bd80      	pop	{r7, pc}

08001dec <CC_LED_TurnOffRedOnStrip10>:
inline void CC_LED_TurnOffRedOnStrip10(void)
{
 8001dec:	b580      	push	{r7, lr}
 8001dee:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(R10_GPIO_Port, R10_Pin, GPIO_PIN_RESET);
 8001df0:	23a0      	movs	r3, #160	@ 0xa0
 8001df2:	05db      	lsls	r3, r3, #23
 8001df4:	2200      	movs	r2, #0
 8001df6:	2110      	movs	r1, #16
 8001df8:	0018      	movs	r0, r3
 8001dfa:	f002 f8b6 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001dfe:	46c0      	nop			@ (mov r8, r8)
 8001e00:	46bd      	mov	sp, r7
 8001e02:	bd80      	pop	{r7, pc}

08001e04 <CC_LED_TurnOffGreenOnStrip10>:
inline void CC_LED_TurnOffGreenOnStrip10(void)
{
 8001e04:	b580      	push	{r7, lr}
 8001e06:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(G10_GPIO_Port, G10_Pin, GPIO_PIN_RESET);
 8001e08:	23a0      	movs	r3, #160	@ 0xa0
 8001e0a:	05db      	lsls	r3, r3, #23
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	2108      	movs	r1, #8
 8001e10:	0018      	movs	r0, r3
 8001e12:	f002 f8aa 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001e16:	46c0      	nop			@ (mov r8, r8)
 8001e18:	46bd      	mov	sp, r7
 8001e1a:	bd80      	pop	{r7, pc}

08001e1c <CC_LED_TurnOffBlueOnStrip10>:
inline void CC_LED_TurnOffBlueOnStrip10(void)
{
 8001e1c:	b580      	push	{r7, lr}
 8001e1e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(B10_GPIO_Port, B10_Pin, GPIO_PIN_RESET);
 8001e20:	23a0      	movs	r3, #160	@ 0xa0
 8001e22:	05db      	lsls	r3, r3, #23
 8001e24:	2200      	movs	r2, #0
 8001e26:	2104      	movs	r1, #4
 8001e28:	0018      	movs	r0, r3
 8001e2a:	f002 f89e 	bl	8003f6a <HAL_GPIO_WritePin>
}
 8001e2e:	46c0      	nop			@ (mov r8, r8)
 8001e30:	46bd      	mov	sp, r7
 8001e32:	bd80      	pop	{r7, pc}

08001e34 <HAL_UART_RxCpltCallback>:
uint8_t CC_SERIAL_RxData[CC_SERIAL_RX_BUFF_LENGTH];

//Functions
void HAL_UART_RxCpltCallback(UART_HandleTypeDef* const huart)
//UART callback
{
 8001e34:	b580      	push	{r7, lr}
 8001e36:	b082      	sub	sp, #8
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	6078      	str	r0, [r7, #4]

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_RxCpltCallback can be implemented in the user file.
   */
//  HAL_UART_Transmit(huart, CC_SERIAL_RxData, 1, 10);					//Gives back the character gotten
  HAL_UART_Receive_IT(huart, CC_SERIAL_RxData, CC_SERIAL_RX_CHAR_TIME);	//Restarts the listening and interruption by serial comm
 8001e3c:	4904      	ldr	r1, [pc, #16]	@ (8001e50 <HAL_UART_RxCpltCallback+0x1c>)
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	2201      	movs	r2, #1
 8001e42:	0018      	movs	r0, r3
 8001e44:	f003 fd4a 	bl	80058dc <HAL_UART_Receive_IT>
}
 8001e48:	46c0      	nop			@ (mov r8, r8)
 8001e4a:	46bd      	mov	sp, r7
 8001e4c:	b002      	add	sp, #8
 8001e4e:	bd80      	pop	{r7, pc}
 8001e50:	200003b0 	.word	0x200003b0

08001e54 <CC_SERIAL_SendData>:
void CC_SERIAL_SendData	(
						UART_HandleTypeDef* const huart,
						const uint8_t* const tx_buffer,
						const uint16_t Size
						)
{
 8001e54:	b580      	push	{r7, lr}
 8001e56:	b084      	sub	sp, #16
 8001e58:	af00      	add	r7, sp, #0
 8001e5a:	60f8      	str	r0, [r7, #12]
 8001e5c:	60b9      	str	r1, [r7, #8]
 8001e5e:	1dbb      	adds	r3, r7, #6
 8001e60:	801a      	strh	r2, [r3, #0]
    HAL_UART_Transmit(huart, tx_buffer, Size, CC_SERIAL_TX_TIMEOUT);	//Send the string via UART
 8001e62:	1dbb      	adds	r3, r7, #6
 8001e64:	881a      	ldrh	r2, [r3, #0]
 8001e66:	68b9      	ldr	r1, [r7, #8]
 8001e68:	68f8      	ldr	r0, [r7, #12]
 8001e6a:	2301      	movs	r3, #1
 8001e6c:	f003 fc92 	bl	8005794 <HAL_UART_Transmit>
}
 8001e70:	46c0      	nop			@ (mov r8, r8)
 8001e72:	46bd      	mov	sp, r7
 8001e74:	b004      	add	sp, #16
 8001e76:	bd80      	pop	{r7, pc}

08001e78 <CC_SERIAL_EnableRxIntUART>:

inline void CC_SERIAL_EnableRxIntUART(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8001e78:	b580      	push	{r7, lr}
 8001e7a:	b084      	sub	sp, #16
 8001e7c:	af00      	add	r7, sp, #0
 8001e7e:	60f8      	str	r0, [r7, #12]
 8001e80:	60b9      	str	r1, [r7, #8]
 8001e82:	1dbb      	adds	r3, r7, #6
 8001e84:	801a      	strh	r2, [r3, #0]
	HAL_UART_Receive_IT(huart, pData, Size);
 8001e86:	1dbb      	adds	r3, r7, #6
 8001e88:	881a      	ldrh	r2, [r3, #0]
 8001e8a:	68b9      	ldr	r1, [r7, #8]
 8001e8c:	68fb      	ldr	r3, [r7, #12]
 8001e8e:	0018      	movs	r0, r3
 8001e90:	f003 fd24 	bl	80058dc <HAL_UART_Receive_IT>
}
 8001e94:	46c0      	nop			@ (mov r8, r8)
 8001e96:	46bd      	mov	sp, r7
 8001e98:	b004      	add	sp, #16
 8001e9a:	bd80      	pop	{r7, pc}

08001e9c <CC_TMR_CheckTimIntFlag>:

//Global Variables Declaration

//Functions
uint8_t CC_TMR_CheckTimIntFlag(const TIM_HandleTypeDef* const htim)
{
 8001e9c:	b580      	push	{r7, lr}
 8001e9e:	b082      	sub	sp, #8
 8001ea0:	af00      	add	r7, sp, #0
 8001ea2:	6078      	str	r0, [r7, #4]
	if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE))	//Check if another interrupt event has happened
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	691b      	ldr	r3, [r3, #16]
 8001eaa:	2201      	movs	r2, #1
 8001eac:	4013      	ands	r3, r2
 8001eae:	2b01      	cmp	r3, #1
 8001eb0:	d101      	bne.n	8001eb6 <CC_TMR_CheckTimIntFlag+0x1a>
	{
		return 1;
 8001eb2:	2301      	movs	r3, #1
 8001eb4:	e000      	b.n	8001eb8 <CC_TMR_CheckTimIntFlag+0x1c>
	}
	else
	{
		return 0;
 8001eb6:	2300      	movs	r3, #0
	}
}
 8001eb8:	0018      	movs	r0, r3
 8001eba:	46bd      	mov	sp, r7
 8001ebc:	b002      	add	sp, #8
 8001ebe:	bd80      	pop	{r7, pc}

08001ec0 <CC_TMR_GetElapsedCounts>:

uint32_t CC_TMR_GetElapsedCounts(const TIM_HandleTypeDef* const htim)
{
 8001ec0:	b580      	push	{r7, lr}
 8001ec2:	b082      	sub	sp, #8
 8001ec4:	af00      	add	r7, sp, #0
 8001ec6:	6078      	str	r0, [r7, #4]
	return __HAL_TIM_GET_COUNTER(htim);
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
}
 8001ece:	0018      	movs	r0, r3
 8001ed0:	46bd      	mov	sp, r7
 8001ed2:	b002      	add	sp, #8
 8001ed4:	bd80      	pop	{r7, pc}

08001ed6 <CC_TMR_GetLimitCounts>:

uint32_t CC_TMR_GetLimitCounts(const TIM_HandleTypeDef* const htim)
{
 8001ed6:	b580      	push	{r7, lr}
 8001ed8:	b082      	sub	sp, #8
 8001eda:	af00      	add	r7, sp, #0
 8001edc:	6078      	str	r0, [r7, #4]
	return __HAL_TIM_GET_AUTORELOAD(htim);
 8001ede:	687b      	ldr	r3, [r7, #4]
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
}
 8001ee4:	0018      	movs	r0, r3
 8001ee6:	46bd      	mov	sp, r7
 8001ee8:	b002      	add	sp, #8
 8001eea:	bd80      	pop	{r7, pc}

08001eec <CC_TMR_TimerInit>:

inline void CC_TMR_TimerInit(TIM_HandleTypeDef* const htim)
{
 8001eec:	b580      	push	{r7, lr}
 8001eee:	b082      	sub	sp, #8
 8001ef0:	af00      	add	r7, sp, #0
 8001ef2:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Init(htim);
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	0018      	movs	r0, r3
 8001ef8:	f003 f866 	bl	8004fc8 <HAL_TIM_Base_Init>
}
 8001efc:	46c0      	nop			@ (mov r8, r8)
 8001efe:	46bd      	mov	sp, r7
 8001f00:	b002      	add	sp, #8
 8001f02:	bd80      	pop	{r7, pc}

08001f04 <CC_TMR_TimerStartAndInterruptsGen>:

inline void CC_TMR_TimerStartAndInterruptsGen(TIM_HandleTypeDef* const htim)
{
 8001f04:	b580      	push	{r7, lr}
 8001f06:	b082      	sub	sp, #8
 8001f08:	af00      	add	r7, sp, #0
 8001f0a:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Start_IT(htim);
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	0018      	movs	r0, r3
 8001f10:	f003 f932 	bl	8005178 <HAL_TIM_Base_Start_IT>
}
 8001f14:	46c0      	nop			@ (mov r8, r8)
 8001f16:	46bd      	mov	sp, r7
 8001f18:	b002      	add	sp, #8
 8001f1a:	bd80      	pop	{r7, pc}

08001f1c <CC_TMR_StartTimer>:

inline void CC_TMR_StartTimer(TIM_HandleTypeDef* const htim)
{
 8001f1c:	b580      	push	{r7, lr}
 8001f1e:	b082      	sub	sp, #8
 8001f20:	af00      	add	r7, sp, #0
 8001f22:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Start(htim);
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	0018      	movs	r0, r3
 8001f28:	f003 f8a6 	bl	8005078 <HAL_TIM_Base_Start>
}
 8001f2c:	46c0      	nop			@ (mov r8, r8)
 8001f2e:	46bd      	mov	sp, r7
 8001f30:	b002      	add	sp, #8
 8001f32:	bd80      	pop	{r7, pc}

08001f34 <CC_TMR_StopTimer>:

inline void CC_TMR_StopTimer(TIM_HandleTypeDef* const htim)
{
 8001f34:	b580      	push	{r7, lr}
 8001f36:	b082      	sub	sp, #8
 8001f38:	af00      	add	r7, sp, #0
 8001f3a:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Stop(htim);
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	0018      	movs	r0, r3
 8001f40:	f003 f8f4 	bl	800512c <HAL_TIM_Base_Stop>
}
 8001f44:	46c0      	nop			@ (mov r8, r8)
 8001f46:	46bd      	mov	sp, r7
 8001f48:	b002      	add	sp, #8
 8001f4a:	bd80      	pop	{r7, pc}

08001f4c <CC_TMR_SetTimer>:

inline void CC_TMR_SetTimer(TIM_HandleTypeDef* const htim, uint32_t counts)
{
 8001f4c:	b580      	push	{r7, lr}
 8001f4e:	b082      	sub	sp, #8
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	6078      	str	r0, [r7, #4]
 8001f54:	6039      	str	r1, [r7, #0]
	__HAL_TIM_SET_COUNTER(htim, counts);
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	683a      	ldr	r2, [r7, #0]
 8001f5c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001f5e:	46c0      	nop			@ (mov r8, r8)
 8001f60:	46bd      	mov	sp, r7
 8001f62:	b002      	add	sp, #8
 8001f64:	bd80      	pop	{r7, pc}
	...

08001f68 <CC_ML_SoftPwmBasetimeandIntrrptsInit>:
};

//Functions
	//SOFTPWM
void CC_ML_SoftPwmBasetimeandIntrrptsInit(void)
{
 8001f68:	b580      	push	{r7, lr}
 8001f6a:	af00      	add	r7, sp, #0
	CC_TMR_TimerInit(&CC_ML_PWM_GEN_BASETIME);
 8001f6c:	4b05      	ldr	r3, [pc, #20]	@ (8001f84 <CC_ML_SoftPwmBasetimeandIntrrptsInit+0x1c>)
 8001f6e:	0018      	movs	r0, r3
 8001f70:	f7ff ffbc 	bl	8001eec <CC_TMR_TimerInit>
	CC_TMR_TimerStartAndInterruptsGen(&CC_ML_PWM_GEN_BASETIME);
 8001f74:	4b03      	ldr	r3, [pc, #12]	@ (8001f84 <CC_ML_SoftPwmBasetimeandIntrrptsInit+0x1c>)
 8001f76:	0018      	movs	r0, r3
 8001f78:	f7ff ffc4 	bl	8001f04 <CC_TMR_TimerStartAndInterruptsGen>
}
 8001f7c:	46c0      	nop			@ (mov r8, r8)
 8001f7e:	46bd      	mov	sp, r7
 8001f80:	bd80      	pop	{r7, pc}
 8001f82:	46c0      	nop			@ (mov r8, r8)
 8001f84:	20000464 	.word	0x20000464

08001f88 <CC_ML_SchedulerInit>:

	//Scheduler
void CC_ML_SchedulerInit(void)
{
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	af00      	add	r7, sp, #0
	CC_TMR_TimerInit(&CC_ML_SCHEDULER_BASETIME_HANDLER);
 8001f8c:	4b05      	ldr	r3, [pc, #20]	@ (8001fa4 <CC_ML_SchedulerInit+0x1c>)
 8001f8e:	0018      	movs	r0, r3
 8001f90:	f7ff ffac 	bl	8001eec <CC_TMR_TimerInit>
	CC_TMR_TimerStartAndInterruptsGen(&CC_ML_SCHEDULER_BASETIME_HANDLER);
 8001f94:	4b03      	ldr	r3, [pc, #12]	@ (8001fa4 <CC_ML_SchedulerInit+0x1c>)
 8001f96:	0018      	movs	r0, r3
 8001f98:	f7ff ffb4 	bl	8001f04 <CC_TMR_TimerStartAndInterruptsGen>
}
 8001f9c:	46c0      	nop			@ (mov r8, r8)
 8001f9e:	46bd      	mov	sp, r7
 8001fa0:	bd80      	pop	{r7, pc}
 8001fa2:	46c0      	nop			@ (mov r8, r8)
 8001fa4:	200004b0 	.word	0x200004b0

08001fa8 <CC_ML_InitCAN>:

	//CC_CAN
void CC_ML_InitCAN(void)
{
 8001fa8:	b580      	push	{r7, lr}
 8001faa:	af00      	add	r7, sp, #0
	CC_CAN_Init(&CC_CAN_TxHeader);
 8001fac:	4b03      	ldr	r3, [pc, #12]	@ (8001fbc <CC_ML_InitCAN+0x14>)
 8001fae:	0018      	movs	r0, r3
 8001fb0:	f7ff fb5f 	bl	8001672 <CC_CAN_Init>
}
 8001fb4:	46c0      	nop			@ (mov r8, r8)
 8001fb6:	46bd      	mov	sp, r7
 8001fb8:	bd80      	pop	{r7, pc}
 8001fba:	46c0      	nop			@ (mov r8, r8)
 8001fbc:	20000374 	.word	0x20000374

08001fc0 <CC_ML_StartCAN>:
void CC_ML_StartCAN(void)
{
 8001fc0:	b580      	push	{r7, lr}
 8001fc2:	af00      	add	r7, sp, #0
	CC_CAN_StartCAN(&CC_ML_PERIPHERALS_CAN);													//Starting CAN module
 8001fc4:	4b03      	ldr	r3, [pc, #12]	@ (8001fd4 <CC_ML_StartCAN+0x14>)
 8001fc6:	0018      	movs	r0, r3
 8001fc8:	f7ff fb37 	bl	800163a <CC_CAN_StartCAN>
}
 8001fcc:	46c0      	nop			@ (mov r8, r8)
 8001fce:	46bd      	mov	sp, r7
 8001fd0:	bd80      	pop	{r7, pc}
 8001fd2:	46c0      	nop			@ (mov r8, r8)
 8001fd4:	200003b4 	.word	0x200003b4

08001fd8 <CC_ML_EnableCANInt>:
void CC_ML_EnableCANInt(void)
{
 8001fd8:	b580      	push	{r7, lr}
 8001fda:	af00      	add	r7, sp, #0
	CC_CAN_EnableCANInt(&CC_ML_PERIPHERALS_CAN, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0);
 8001fdc:	4b04      	ldr	r3, [pc, #16]	@ (8001ff0 <CC_ML_EnableCANInt+0x18>)
 8001fde:	2200      	movs	r2, #0
 8001fe0:	2101      	movs	r1, #1
 8001fe2:	0018      	movs	r0, r3
 8001fe4:	f7ff fb19 	bl	800161a <CC_CAN_EnableCANInt>
}
 8001fe8:	46c0      	nop			@ (mov r8, r8)
 8001fea:	46bd      	mov	sp, r7
 8001fec:	bd80      	pop	{r7, pc}
 8001fee:	46c0      	nop			@ (mov r8, r8)
 8001ff0:	200003b4 	.word	0x200003b4

08001ff4 <CC_ML_SendMessageCAN>:
void CC_ML_SendMessageCAN(void* param1, void* param2, void* param3)
{
 8001ff4:	b580      	push	{r7, lr}
 8001ff6:	b088      	sub	sp, #32
 8001ff8:	af00      	add	r7, sp, #0
 8001ffa:	60f8      	str	r0, [r7, #12]
 8001ffc:	60b9      	str	r1, [r7, #8]
 8001ffe:	607a      	str	r2, [r7, #4]
	FDCAN_HandleTypeDef* pHandlerCan;
	FDCAN_TxHeaderTypeDef* pHeaderTxCan;
	uint8_t* pdata2send;

	pHandlerCan=(FDCAN_HandleTypeDef*)param1;
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	61fb      	str	r3, [r7, #28]
	pHeaderTxCan=(FDCAN_TxHeaderTypeDef*)param2;
 8002004:	68bb      	ldr	r3, [r7, #8]
 8002006:	61bb      	str	r3, [r7, #24]
	pdata2send= (uint8_t*)param3;
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	617b      	str	r3, [r7, #20]
	CC_CAN_SendMessage(pHandlerCan,	pHeaderTxCan, pdata2send);
 800200c:	697a      	ldr	r2, [r7, #20]
 800200e:	69b9      	ldr	r1, [r7, #24]
 8002010:	69fb      	ldr	r3, [r7, #28]
 8002012:	0018      	movs	r0, r3
 8002014:	f7ff fb1d 	bl	8001652 <CC_CAN_SendMessage>
}
 8002018:	46c0      	nop			@ (mov r8, r8)
 800201a:	46bd      	mov	sp, r7
 800201c:	b008      	add	sp, #32
 800201e:	bd80      	pop	{r7, pc}

08002020 <CC_ML_GetDipSwitch4pos>:
	CC_CAN_SetRxAddress(*pAdress);
};

	//CC_DIPSW
void CC_ML_GetDipSwitch4pos(void* pdata, void* param2, void* param3)
{
 8002020:	b580      	push	{r7, lr}
 8002022:	b086      	sub	sp, #24
 8002024:	af00      	add	r7, sp, #0
 8002026:	60f8      	str	r0, [r7, #12]
 8002028:	60b9      	str	r1, [r7, #8]
 800202a:	607a      	str	r2, [r7, #4]
	CC_DIPSW_DipSw_t* pDipSwitch;
	pDipSwitch=(CC_DIPSW_DipSw_t*)pdata;
 800202c:	68fb      	ldr	r3, [r7, #12]
 800202e:	617b      	str	r3, [r7, #20]

	CC_DIPSW_GetDipSwitch4pos(pDipSwitch);
 8002030:	697b      	ldr	r3, [r7, #20]
 8002032:	0018      	movs	r0, r3
 8002034:	f7ff fb6c 	bl	8001710 <CC_DIPSW_GetDipSwitch4pos>
}
 8002038:	46c0      	nop			@ (mov r8, r8)
 800203a:	46bd      	mov	sp, r7
 800203c:	b006      	add	sp, #24
 800203e:	bd80      	pop	{r7, pc}

08002040 <CC_ML_UpdateIdSysFromDipSwitch>:
void CC_ML_UpdateIdSysFromDipSwitch(void* BoardData, void* DipSwData, void*)
{
 8002040:	b580      	push	{r7, lr}
 8002042:	b086      	sub	sp, #24
 8002044:	af00      	add	r7, sp, #0
 8002046:	60f8      	str	r0, [r7, #12]
 8002048:	60b9      	str	r1, [r7, #8]
 800204a:	607a      	str	r2, [r7, #4]
	CC_APP_Config_t* pBoardData=(CC_APP_Config_t*)BoardData;		//Input parameters castings
 800204c:	68fb      	ldr	r3, [r7, #12]
 800204e:	617b      	str	r3, [r7, #20]
	CC_DIPSW_DipSw_t* pDipSwitch=(CC_DIPSW_DipSw_t*)DipSwData;
 8002050:	68bb      	ldr	r3, [r7, #8]
 8002052:	613b      	str	r3, [r7, #16]

	pBoardData->id = pDipSwitch->all;
 8002054:	693b      	ldr	r3, [r7, #16]
 8002056:	7819      	ldrb	r1, [r3, #0]
 8002058:	697b      	ldr	r3, [r7, #20]
 800205a:	225b      	movs	r2, #91	@ 0x5b
 800205c:	5499      	strb	r1, [r3, r2]
}
 800205e:	46c0      	nop			@ (mov r8, r8)
 8002060:	46bd      	mov	sp, r7
 8002062:	b006      	add	sp, #24
 8002064:	bd80      	pop	{r7, pc}

08002066 <CC_ML_GetTimerElapsedCounts>:

	//CC_TMR
uint32_t CC_ML_GetTimerElapsedCounts(const TIM_HandleTypeDef* const ptimer_header)
{
 8002066:	b580      	push	{r7, lr}
 8002068:	b082      	sub	sp, #8
 800206a:	af00      	add	r7, sp, #0
 800206c:	6078      	str	r0, [r7, #4]
	return CC_TMR_GetElapsedCounts(ptimer_header);
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	0018      	movs	r0, r3
 8002072:	f7ff ff25 	bl	8001ec0 <CC_TMR_GetElapsedCounts>
 8002076:	0003      	movs	r3, r0
}
 8002078:	0018      	movs	r0, r3
 800207a:	46bd      	mov	sp, r7
 800207c:	b002      	add	sp, #8
 800207e:	bd80      	pop	{r7, pc}

08002080 <CC_ML_GetTimerLimitCounts>:
uint32_t CC_ML_GetTimerLimitCounts(const TIM_HandleTypeDef* const ptimer_header)
{
 8002080:	b580      	push	{r7, lr}
 8002082:	b082      	sub	sp, #8
 8002084:	af00      	add	r7, sp, #0
 8002086:	6078      	str	r0, [r7, #4]
	return 	CC_TMR_GetLimitCounts(ptimer_header);
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	0018      	movs	r0, r3
 800208c:	f7ff ff23 	bl	8001ed6 <CC_TMR_GetLimitCounts>
 8002090:	0003      	movs	r3, r0
}
 8002092:	0018      	movs	r0, r3
 8002094:	46bd      	mov	sp, r7
 8002096:	b002      	add	sp, #8
 8002098:	bd80      	pop	{r7, pc}

0800209a <CC_ML_StartTimer>:
void CC_ML_StartTimer(TIM_HandleTypeDef* htim)
{
 800209a:	b580      	push	{r7, lr}
 800209c:	b082      	sub	sp, #8
 800209e:	af00      	add	r7, sp, #0
 80020a0:	6078      	str	r0, [r7, #4]
	CC_TMR_StartTimer(htim);
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	0018      	movs	r0, r3
 80020a6:	f7ff ff39 	bl	8001f1c <CC_TMR_StartTimer>
}
 80020aa:	46c0      	nop			@ (mov r8, r8)
 80020ac:	46bd      	mov	sp, r7
 80020ae:	b002      	add	sp, #8
 80020b0:	bd80      	pop	{r7, pc}

080020b2 <CC_ML_StopTimer>:
void CC_ML_StopTimer(TIM_HandleTypeDef* htim)
{
 80020b2:	b580      	push	{r7, lr}
 80020b4:	b082      	sub	sp, #8
 80020b6:	af00      	add	r7, sp, #0
 80020b8:	6078      	str	r0, [r7, #4]
	CC_TMR_StopTimer(htim);
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	0018      	movs	r0, r3
 80020be:	f7ff ff39 	bl	8001f34 <CC_TMR_StopTimer>
}
 80020c2:	46c0      	nop			@ (mov r8, r8)
 80020c4:	46bd      	mov	sp, r7
 80020c6:	b002      	add	sp, #8
 80020c8:	bd80      	pop	{r7, pc}

080020ca <CC_ML_SendUARTString>:


	//CC_SERIAL
void CC_ML_SendUARTString(const char* String2bSend, UART_HandleTypeDef* const huart)
//Function to send strings via USART
{
 80020ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020cc:	46c6      	mov	lr, r8
 80020ce:	b500      	push	{lr}
 80020d0:	b08c      	sub	sp, #48	@ 0x30
 80020d2:	af00      	add	r7, sp, #0
 80020d4:	61f8      	str	r0, [r7, #28]
 80020d6:	61b9      	str	r1, [r7, #24]
 80020d8:	466b      	mov	r3, sp
 80020da:	4698      	mov	r8, r3
    uint32_t length=0;
 80020dc:	2300      	movs	r3, #0
 80020de:	62fb      	str	r3, [r7, #44]	@ 0x2c

    length = strlen(String2bSend);  	//Gets length of the string
 80020e0:	69fb      	ldr	r3, [r7, #28]
 80020e2:	0018      	movs	r0, r3
 80020e4:	f7fe f80e 	bl	8000104 <strlen>
 80020e8:	0003      	movs	r3, r0
 80020ea:	62fb      	str	r3, [r7, #44]	@ 0x2c
    length++;  							//Increasing one for the null terminator
 80020ec:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80020ee:	3301      	adds	r3, #1
 80020f0:	62fb      	str	r3, [r7, #44]	@ 0x2c

    uint8_t tx_buffer[length];  		//Creating an array (VLA) as long as the string to be sent, avoiding like this the intrinsic problem on strncpy() function (no length control)
 80020f2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80020f4:	001a      	movs	r2, r3
 80020f6:	3a01      	subs	r2, #1
 80020f8:	62ba      	str	r2, [r7, #40]	@ 0x28
 80020fa:	60bb      	str	r3, [r7, #8]
 80020fc:	2200      	movs	r2, #0
 80020fe:	60fa      	str	r2, [r7, #12]
 8002100:	68b8      	ldr	r0, [r7, #8]
 8002102:	68f9      	ldr	r1, [r7, #12]
 8002104:	0002      	movs	r2, r0
 8002106:	0f52      	lsrs	r2, r2, #29
 8002108:	000e      	movs	r6, r1
 800210a:	00f6      	lsls	r6, r6, #3
 800210c:	617e      	str	r6, [r7, #20]
 800210e:	697e      	ldr	r6, [r7, #20]
 8002110:	4316      	orrs	r6, r2
 8002112:	617e      	str	r6, [r7, #20]
 8002114:	0002      	movs	r2, r0
 8002116:	00d2      	lsls	r2, r2, #3
 8002118:	613a      	str	r2, [r7, #16]
 800211a:	603b      	str	r3, [r7, #0]
 800211c:	2200      	movs	r2, #0
 800211e:	607a      	str	r2, [r7, #4]
 8002120:	6838      	ldr	r0, [r7, #0]
 8002122:	6879      	ldr	r1, [r7, #4]
 8002124:	0002      	movs	r2, r0
 8002126:	0f52      	lsrs	r2, r2, #29
 8002128:	000e      	movs	r6, r1
 800212a:	00f5      	lsls	r5, r6, #3
 800212c:	4315      	orrs	r5, r2
 800212e:	0002      	movs	r2, r0
 8002130:	00d4      	lsls	r4, r2, #3
 8002132:	3307      	adds	r3, #7
 8002134:	08db      	lsrs	r3, r3, #3
 8002136:	00db      	lsls	r3, r3, #3
 8002138:	466a      	mov	r2, sp
 800213a:	1ad3      	subs	r3, r2, r3
 800213c:	469d      	mov	sp, r3
 800213e:	466b      	mov	r3, sp
 8002140:	3300      	adds	r3, #0
 8002142:	627b      	str	r3, [r7, #36]	@ 0x24

    strncpy((char*)tx_buffer, String2bSend, length);  		//Copy string to buffer
 8002144:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8002146:	69f9      	ldr	r1, [r7, #28]
 8002148:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800214a:	0018      	movs	r0, r3
 800214c:	f005 fcfe 	bl	8007b4c <strncpy>
    CC_SERIAL_SendData(huart, tx_buffer, length);
 8002150:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002152:	b29a      	uxth	r2, r3
 8002154:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8002156:	69bb      	ldr	r3, [r7, #24]
 8002158:	0018      	movs	r0, r3
 800215a:	f7ff fe7b 	bl	8001e54 <CC_SERIAL_SendData>
 800215e:	46c5      	mov	sp, r8
}
 8002160:	46c0      	nop			@ (mov r8, r8)
 8002162:	46bd      	mov	sp, r7
 8002164:	b00c      	add	sp, #48	@ 0x30
 8002166:	bc80      	pop	{r7}
 8002168:	46b8      	mov	r8, r7
 800216a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800216c <CC_ML_ClearUARTRxData>:
void CC_ML_ClearUARTRxData(void)
{
 800216c:	b580      	push	{r7, lr}
 800216e:	af00      	add	r7, sp, #0
	CC_SERIAL_RxData[0]='\0';
 8002170:	4b02      	ldr	r3, [pc, #8]	@ (800217c <CC_ML_ClearUARTRxData+0x10>)
 8002172:	2200      	movs	r2, #0
 8002174:	701a      	strb	r2, [r3, #0]
}
 8002176:	46c0      	nop			@ (mov r8, r8)
 8002178:	46bd      	mov	sp, r7
 800217a:	bd80      	pop	{r7, pc}
 800217c:	200003b0 	.word	0x200003b0

08002180 <CC_ML_EnableRxIntUART>:
void CC_ML_EnableRxIntUART(void)
{
 8002180:	b580      	push	{r7, lr}
 8002182:	af00      	add	r7, sp, #0
	CC_SERIAL_EnableRxIntUART(&CC_ML_SERIAL_DEBUG_HANDLER, CC_SERIAL_RxData, 1);
 8002184:	4904      	ldr	r1, [pc, #16]	@ (8002198 <CC_ML_EnableRxIntUART+0x18>)
 8002186:	4b05      	ldr	r3, [pc, #20]	@ (800219c <CC_ML_EnableRxIntUART+0x1c>)
 8002188:	2201      	movs	r2, #1
 800218a:	0018      	movs	r0, r3
 800218c:	f7ff fe74 	bl	8001e78 <CC_SERIAL_EnableRxIntUART>
}
 8002190:	46c0      	nop			@ (mov r8, r8)
 8002192:	46bd      	mov	sp, r7
 8002194:	bd80      	pop	{r7, pc}
 8002196:	46c0      	nop			@ (mov r8, r8)
 8002198:	200003b0 	.word	0x200003b0
 800219c:	200004fc 	.word	0x200004fc

080021a0 <CC_ML_LedBoardToggle>:

	//CC_BOARDLED
void CC_ML_LedBoardToggle(void)
{
 80021a0:	b580      	push	{r7, lr}
 80021a2:	af00      	add	r7, sp, #0
	CC_BOARDLED_Led1Toggle();
 80021a4:	f7ff fa2e 	bl	8001604 <CC_BOARDLED_Led1Toggle>
}
 80021a8:	46c0      	nop			@ (mov r8, r8)
 80021aa:	46bd      	mov	sp, r7
 80021ac:	bd80      	pop	{r7, pc}
	...

080021b0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80021b0:	b580      	push	{r7, lr}
 80021b2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80021b4:	f000 fce6 	bl	8002b84 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80021b8:	f000 f832 	bl	8002220 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80021bc:	f000 f9c6 	bl	800254c <MX_GPIO_Init>
  MX_FDCAN2_Init();
 80021c0:	f000 f890 	bl	80022e4 <MX_FDCAN2_Init>
  MX_TIM14_Init();
 80021c4:	f000 f94e 	bl	8002464 <MX_TIM14_Init>
  MX_USART1_UART_Init();
 80021c8:	f000 f972 	bl	80024b0 <MX_USART1_UART_Init>
  MX_TIM6_Init();
 80021cc:	f000 f8d2 	bl	8002374 <MX_TIM6_Init>
  MX_TIM7_Init();
 80021d0:	f000 f90c 	bl	80023ec <MX_TIM7_Init>
  /* USER CODE BEGIN 2 */
  CC_APP_SetBoardParam(&CC_APP_BoardData);	//Board's characteristics and parameters setting
 80021d4:	4b0e      	ldr	r3, [pc, #56]	@ (8002210 <main+0x60>)
 80021d6:	0018      	movs	r0, r3
 80021d8:	f7fe fcf8 	bl	8000bcc <CC_APP_SetBoardParam>
  CC_LEDPWM_Init(&CC_LEDPWM_Strip);	  		//Strip-leds handler initialization
 80021dc:	4b0d      	ldr	r3, [pc, #52]	@ (8002214 <main+0x64>)
 80021de:	0018      	movs	r0, r3
 80021e0:	f7fe fd46 	bl	8000c70 <CC_LEDPWM_Init>
  CC_ML_SoftPwmBasetimeandIntrrptsInit();	//Soft-PWM timer generation initialization
 80021e4:	f7ff fec0 	bl	8001f68 <CC_ML_SoftPwmBasetimeandIntrrptsInit>
  //Schedulers initialization
  CC_SCHDLR_InitFastScheduler(&CC_SCHDLR_FastScheduler);
 80021e8:	4b0b      	ldr	r3, [pc, #44]	@ (8002218 <main+0x68>)
 80021ea:	0018      	movs	r0, r3
 80021ec:	f7fe ff38 	bl	8001060 <CC_SCHDLR_InitFastScheduler>
  CC_SCHDLR_InitSlowScheduler(&CC_SCHDLR_SlowScheduler);
 80021f0:	4b0a      	ldr	r3, [pc, #40]	@ (800221c <main+0x6c>)
 80021f2:	0018      	movs	r0, r3
 80021f4:	f7fe ffee 	bl	80011d4 <CC_SCHDLR_InitSlowScheduler>
  CC_ML_SchedulerInit();
 80021f8:	f7ff fec6 	bl	8001f88 <CC_ML_SchedulerInit>
  //Serial receive initialization
  CC_ML_EnableRxIntUART();
 80021fc:	f7ff ffc0 	bl	8002180 <CC_ML_EnableRxIntUART>
  CC_ML_InitCAN();							//CAN initialization
 8002200:	f7ff fed2 	bl	8001fa8 <CC_ML_InitCAN>
  CC_ML_StartCAN();
 8002204:	f7ff fedc 	bl	8001fc0 <CC_ML_StartCAN>
  CC_ML_EnableCANInt();
 8002208:	f7ff fee6 	bl	8001fd8 <CC_ML_EnableCANInt>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800220c:	46c0      	nop			@ (mov r8, r8)
 800220e:	e7fd      	b.n	800220c <main+0x5c>
 8002210:	20000034 	.word	0x20000034
 8002214:	20000094 	.word	0x20000094
 8002218:	20000140 	.word	0x20000140
 800221c:	20000200 	.word	0x20000200

08002220 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002220:	b590      	push	{r4, r7, lr}
 8002222:	b095      	sub	sp, #84	@ 0x54
 8002224:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002226:	2414      	movs	r4, #20
 8002228:	193b      	adds	r3, r7, r4
 800222a:	0018      	movs	r0, r3
 800222c:	233c      	movs	r3, #60	@ 0x3c
 800222e:	001a      	movs	r2, r3
 8002230:	2100      	movs	r1, #0
 8002232:	f005 fc83 	bl	8007b3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002236:	1d3b      	adds	r3, r7, #4
 8002238:	0018      	movs	r0, r3
 800223a:	2310      	movs	r3, #16
 800223c:	001a      	movs	r2, r3
 800223e:	2100      	movs	r1, #0
 8002240:	f005 fc7c 	bl	8007b3c <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002244:	2380      	movs	r3, #128	@ 0x80
 8002246:	009b      	lsls	r3, r3, #2
 8002248:	0018      	movs	r0, r3
 800224a:	f001 fec7 	bl	8003fdc <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800224e:	193b      	adds	r3, r7, r4
 8002250:	2201      	movs	r2, #1
 8002252:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002254:	193b      	adds	r3, r7, r4
 8002256:	2280      	movs	r2, #128	@ 0x80
 8002258:	0252      	lsls	r2, r2, #9
 800225a:	605a      	str	r2, [r3, #4]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800225c:	0021      	movs	r1, r4
 800225e:	187b      	adds	r3, r7, r1
 8002260:	2202      	movs	r2, #2
 8002262:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002264:	187b      	adds	r3, r7, r1
 8002266:	2203      	movs	r2, #3
 8002268:	625a      	str	r2, [r3, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 800226a:	187b      	adds	r3, r7, r1
 800226c:	2200      	movs	r2, #0
 800226e:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLN = 25;
 8002270:	187b      	adds	r3, r7, r1
 8002272:	2219      	movs	r2, #25
 8002274:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV5;
 8002276:	187b      	adds	r3, r7, r1
 8002278:	2280      	movs	r2, #128	@ 0x80
 800227a:	0312      	lsls	r2, r2, #12
 800227c:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 800227e:	187b      	adds	r3, r7, r1
 8002280:	2280      	movs	r2, #128	@ 0x80
 8002282:	0492      	lsls	r2, r2, #18
 8002284:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV4;
 8002286:	187b      	adds	r3, r7, r1
 8002288:	22c0      	movs	r2, #192	@ 0xc0
 800228a:	05d2      	lsls	r2, r2, #23
 800228c:	639a      	str	r2, [r3, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800228e:	187b      	adds	r3, r7, r1
 8002290:	0018      	movs	r0, r3
 8002292:	f001 feef 	bl	8004074 <HAL_RCC_OscConfig>
 8002296:	1e03      	subs	r3, r0, #0
 8002298:	d001      	beq.n	800229e <SystemClock_Config+0x7e>
  {
    Error_Handler();
 800229a:	f000 fa49 	bl	8002730 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800229e:	1d3b      	adds	r3, r7, #4
 80022a0:	2207      	movs	r2, #7
 80022a2:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80022a4:	1d3b      	adds	r3, r7, #4
 80022a6:	2202      	movs	r2, #2
 80022a8:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80022aa:	1d3b      	adds	r3, r7, #4
 80022ac:	2200      	movs	r2, #0
 80022ae:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80022b0:	1d3b      	adds	r3, r7, #4
 80022b2:	2200      	movs	r2, #0
 80022b4:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80022b6:	1d3b      	adds	r3, r7, #4
 80022b8:	2102      	movs	r1, #2
 80022ba:	0018      	movs	r0, r3
 80022bc:	f002 fa3a 	bl	8004734 <HAL_RCC_ClockConfig>
 80022c0:	1e03      	subs	r3, r0, #0
 80022c2:	d001      	beq.n	80022c8 <SystemClock_Config+0xa8>
  {
    Error_Handler();
 80022c4:	f000 fa34 	bl	8002730 <Error_Handler>
  }
  HAL_RCC_MCOConfig(RCC_MCO_PF2, RCC_MCO1SOURCE_SYSCLK, RCC_MCODIV_1);
 80022c8:	2380      	movs	r3, #128	@ 0x80
 80022ca:	045b      	lsls	r3, r3, #17
 80022cc:	4804      	ldr	r0, [pc, #16]	@ (80022e0 <SystemClock_Config+0xc0>)
 80022ce:	2200      	movs	r2, #0
 80022d0:	0019      	movs	r1, r3
 80022d2:	f002 fb37 	bl	8004944 <HAL_RCC_MCOConfig>
}
 80022d6:	46c0      	nop			@ (mov r8, r8)
 80022d8:	46bd      	mov	sp, r7
 80022da:	b015      	add	sp, #84	@ 0x54
 80022dc:	bd90      	pop	{r4, r7, pc}
 80022de:	46c0      	nop			@ (mov r8, r8)
 80022e0:	00050004 	.word	0x00050004

080022e4 <MX_FDCAN2_Init>:
  * @brief FDCAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_FDCAN2_Init(void)
{
 80022e4:	b580      	push	{r7, lr}
 80022e6:	af00      	add	r7, sp, #0
  /* USER CODE END FDCAN2_Init 0 */

  /* USER CODE BEGIN FDCAN2_Init 1 */

  /* USER CODE END FDCAN2_Init 1 */
  hfdcan2.Instance = FDCAN2;
 80022e8:	4b20      	ldr	r3, [pc, #128]	@ (800236c <MX_FDCAN2_Init+0x88>)
 80022ea:	4a21      	ldr	r2, [pc, #132]	@ (8002370 <MX_FDCAN2_Init+0x8c>)
 80022ec:	601a      	str	r2, [r3, #0]
  hfdcan2.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 80022ee:	4b1f      	ldr	r3, [pc, #124]	@ (800236c <MX_FDCAN2_Init+0x88>)
 80022f0:	2200      	movs	r2, #0
 80022f2:	605a      	str	r2, [r3, #4]
  hfdcan2.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 80022f4:	4b1d      	ldr	r3, [pc, #116]	@ (800236c <MX_FDCAN2_Init+0x88>)
 80022f6:	2200      	movs	r2, #0
 80022f8:	609a      	str	r2, [r3, #8]
  hfdcan2.Init.Mode = FDCAN_MODE_NORMAL;
 80022fa:	4b1c      	ldr	r3, [pc, #112]	@ (800236c <MX_FDCAN2_Init+0x88>)
 80022fc:	2200      	movs	r2, #0
 80022fe:	60da      	str	r2, [r3, #12]
  hfdcan2.Init.AutoRetransmission = ENABLE;
 8002300:	4b1a      	ldr	r3, [pc, #104]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002302:	2201      	movs	r2, #1
 8002304:	741a      	strb	r2, [r3, #16]
  hfdcan2.Init.TransmitPause = ENABLE;
 8002306:	4b19      	ldr	r3, [pc, #100]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002308:	2201      	movs	r2, #1
 800230a:	745a      	strb	r2, [r3, #17]
  hfdcan2.Init.ProtocolException = DISABLE;
 800230c:	4b17      	ldr	r3, [pc, #92]	@ (800236c <MX_FDCAN2_Init+0x88>)
 800230e:	2200      	movs	r2, #0
 8002310:	749a      	strb	r2, [r3, #18]
  hfdcan2.Init.NominalPrescaler = 1;
 8002312:	4b16      	ldr	r3, [pc, #88]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002314:	2201      	movs	r2, #1
 8002316:	615a      	str	r2, [r3, #20]
  hfdcan2.Init.NominalSyncJumpWidth = 16;
 8002318:	4b14      	ldr	r3, [pc, #80]	@ (800236c <MX_FDCAN2_Init+0x88>)
 800231a:	2210      	movs	r2, #16
 800231c:	619a      	str	r2, [r3, #24]
  hfdcan2.Init.NominalTimeSeg1 = 86;
 800231e:	4b13      	ldr	r3, [pc, #76]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002320:	2256      	movs	r2, #86	@ 0x56
 8002322:	61da      	str	r2, [r3, #28]
  hfdcan2.Init.NominalTimeSeg2 = 13;
 8002324:	4b11      	ldr	r3, [pc, #68]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002326:	220d      	movs	r2, #13
 8002328:	621a      	str	r2, [r3, #32]
  hfdcan2.Init.DataPrescaler = 1;
 800232a:	4b10      	ldr	r3, [pc, #64]	@ (800236c <MX_FDCAN2_Init+0x88>)
 800232c:	2201      	movs	r2, #1
 800232e:	625a      	str	r2, [r3, #36]	@ 0x24
  hfdcan2.Init.DataSyncJumpWidth = 4;
 8002330:	4b0e      	ldr	r3, [pc, #56]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002332:	2204      	movs	r2, #4
 8002334:	629a      	str	r2, [r3, #40]	@ 0x28
  hfdcan2.Init.DataTimeSeg1 = 5;
 8002336:	4b0d      	ldr	r3, [pc, #52]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002338:	2205      	movs	r2, #5
 800233a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hfdcan2.Init.DataTimeSeg2 = 4;
 800233c:	4b0b      	ldr	r3, [pc, #44]	@ (800236c <MX_FDCAN2_Init+0x88>)
 800233e:	2204      	movs	r2, #4
 8002340:	631a      	str	r2, [r3, #48]	@ 0x30
  hfdcan2.Init.StdFiltersNbr = 1;
 8002342:	4b0a      	ldr	r3, [pc, #40]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002344:	2201      	movs	r2, #1
 8002346:	635a      	str	r2, [r3, #52]	@ 0x34
  hfdcan2.Init.ExtFiltersNbr = 0;
 8002348:	4b08      	ldr	r3, [pc, #32]	@ (800236c <MX_FDCAN2_Init+0x88>)
 800234a:	2200      	movs	r2, #0
 800234c:	639a      	str	r2, [r3, #56]	@ 0x38
  hfdcan2.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 800234e:	4b07      	ldr	r3, [pc, #28]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002350:	2200      	movs	r2, #0
 8002352:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_FDCAN_Init(&hfdcan2) != HAL_OK)
 8002354:	4b05      	ldr	r3, [pc, #20]	@ (800236c <MX_FDCAN2_Init+0x88>)
 8002356:	0018      	movs	r0, r3
 8002358:	f000 fe56 	bl	8003008 <HAL_FDCAN_Init>
 800235c:	1e03      	subs	r3, r0, #0
 800235e:	d001      	beq.n	8002364 <MX_FDCAN2_Init+0x80>
  {
    Error_Handler();
 8002360:	f000 f9e6 	bl	8002730 <Error_Handler>
  }
  /* USER CODE BEGIN FDCAN2_Init 2 */

  /* USER CODE END FDCAN2_Init 2 */

}
 8002364:	46c0      	nop			@ (mov r8, r8)
 8002366:	46bd      	mov	sp, r7
 8002368:	bd80      	pop	{r7, pc}
 800236a:	46c0      	nop			@ (mov r8, r8)
 800236c:	200003b4 	.word	0x200003b4
 8002370:	40006800 	.word	0x40006800

08002374 <MX_TIM6_Init>:
  * @brief TIM6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM6_Init(void)
{
 8002374:	b580      	push	{r7, lr}
 8002376:	b084      	sub	sp, #16
 8002378:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800237a:	1d3b      	adds	r3, r7, #4
 800237c:	0018      	movs	r0, r3
 800237e:	230c      	movs	r3, #12
 8002380:	001a      	movs	r2, r3
 8002382:	2100      	movs	r1, #0
 8002384:	f005 fbda 	bl	8007b3c <memset>

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 8002388:	4b15      	ldr	r3, [pc, #84]	@ (80023e0 <MX_TIM6_Init+0x6c>)
 800238a:	4a16      	ldr	r2, [pc, #88]	@ (80023e4 <MX_TIM6_Init+0x70>)
 800238c:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 0;
 800238e:	4b14      	ldr	r3, [pc, #80]	@ (80023e0 <MX_TIM6_Init+0x6c>)
 8002390:	2200      	movs	r2, #0
 8002392:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002394:	4b12      	ldr	r3, [pc, #72]	@ (80023e0 <MX_TIM6_Init+0x6c>)
 8002396:	2200      	movs	r2, #0
 8002398:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 800239a:	4b11      	ldr	r3, [pc, #68]	@ (80023e0 <MX_TIM6_Init+0x6c>)
 800239c:	4a12      	ldr	r2, [pc, #72]	@ (80023e8 <MX_TIM6_Init+0x74>)
 800239e:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80023a0:	4b0f      	ldr	r3, [pc, #60]	@ (80023e0 <MX_TIM6_Init+0x6c>)
 80023a2:	2200      	movs	r2, #0
 80023a4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 80023a6:	4b0e      	ldr	r3, [pc, #56]	@ (80023e0 <MX_TIM6_Init+0x6c>)
 80023a8:	0018      	movs	r0, r3
 80023aa:	f002 fe0d 	bl	8004fc8 <HAL_TIM_Base_Init>
 80023ae:	1e03      	subs	r3, r0, #0
 80023b0:	d001      	beq.n	80023b6 <MX_TIM6_Init+0x42>
  {
    Error_Handler();
 80023b2:	f000 f9bd 	bl	8002730 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80023b6:	1d3b      	adds	r3, r7, #4
 80023b8:	2200      	movs	r2, #0
 80023ba:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80023bc:	1d3b      	adds	r3, r7, #4
 80023be:	2200      	movs	r2, #0
 80023c0:	609a      	str	r2, [r3, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 80023c2:	1d3a      	adds	r2, r7, #4
 80023c4:	4b06      	ldr	r3, [pc, #24]	@ (80023e0 <MX_TIM6_Init+0x6c>)
 80023c6:	0011      	movs	r1, r2
 80023c8:	0018      	movs	r0, r3
 80023ca:	f003 f8ff 	bl	80055cc <HAL_TIMEx_MasterConfigSynchronization>
 80023ce:	1e03      	subs	r3, r0, #0
 80023d0:	d001      	beq.n	80023d6 <MX_TIM6_Init+0x62>
  {
    Error_Handler();
 80023d2:	f000 f9ad 	bl	8002730 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 80023d6:	46c0      	nop			@ (mov r8, r8)
 80023d8:	46bd      	mov	sp, r7
 80023da:	b004      	add	sp, #16
 80023dc:	bd80      	pop	{r7, pc}
 80023de:	46c0      	nop			@ (mov r8, r8)
 80023e0:	20000418 	.word	0x20000418
 80023e4:	40001000 	.word	0x40001000
 80023e8:	0000ffff 	.word	0x0000ffff

080023ec <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 80023ec:	b580      	push	{r7, lr}
 80023ee:	b084      	sub	sp, #16
 80023f0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80023f2:	1d3b      	adds	r3, r7, #4
 80023f4:	0018      	movs	r0, r3
 80023f6:	230c      	movs	r3, #12
 80023f8:	001a      	movs	r2, r3
 80023fa:	2100      	movs	r1, #0
 80023fc:	f005 fb9e 	bl	8007b3c <memset>

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 8002400:	4b15      	ldr	r3, [pc, #84]	@ (8002458 <MX_TIM7_Init+0x6c>)
 8002402:	4a16      	ldr	r2, [pc, #88]	@ (800245c <MX_TIM7_Init+0x70>)
 8002404:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 0;
 8002406:	4b14      	ldr	r3, [pc, #80]	@ (8002458 <MX_TIM7_Init+0x6c>)
 8002408:	2200      	movs	r2, #0
 800240a:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800240c:	4b12      	ldr	r3, [pc, #72]	@ (8002458 <MX_TIM7_Init+0x6c>)
 800240e:	2200      	movs	r2, #0
 8002410:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 5000-1;
 8002412:	4b11      	ldr	r3, [pc, #68]	@ (8002458 <MX_TIM7_Init+0x6c>)
 8002414:	4a12      	ldr	r2, [pc, #72]	@ (8002460 <MX_TIM7_Init+0x74>)
 8002416:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002418:	4b0f      	ldr	r3, [pc, #60]	@ (8002458 <MX_TIM7_Init+0x6c>)
 800241a:	2280      	movs	r2, #128	@ 0x80
 800241c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800241e:	4b0e      	ldr	r3, [pc, #56]	@ (8002458 <MX_TIM7_Init+0x6c>)
 8002420:	0018      	movs	r0, r3
 8002422:	f002 fdd1 	bl	8004fc8 <HAL_TIM_Base_Init>
 8002426:	1e03      	subs	r3, r0, #0
 8002428:	d001      	beq.n	800242e <MX_TIM7_Init+0x42>
  {
    Error_Handler();
 800242a:	f000 f981 	bl	8002730 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800242e:	1d3b      	adds	r3, r7, #4
 8002430:	2200      	movs	r2, #0
 8002432:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002434:	1d3b      	adds	r3, r7, #4
 8002436:	2200      	movs	r2, #0
 8002438:	609a      	str	r2, [r3, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800243a:	1d3a      	adds	r2, r7, #4
 800243c:	4b06      	ldr	r3, [pc, #24]	@ (8002458 <MX_TIM7_Init+0x6c>)
 800243e:	0011      	movs	r1, r2
 8002440:	0018      	movs	r0, r3
 8002442:	f003 f8c3 	bl	80055cc <HAL_TIMEx_MasterConfigSynchronization>
 8002446:	1e03      	subs	r3, r0, #0
 8002448:	d001      	beq.n	800244e <MX_TIM7_Init+0x62>
  {
    Error_Handler();
 800244a:	f000 f971 	bl	8002730 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 800244e:	46c0      	nop			@ (mov r8, r8)
 8002450:	46bd      	mov	sp, r7
 8002452:	b004      	add	sp, #16
 8002454:	bd80      	pop	{r7, pc}
 8002456:	46c0      	nop			@ (mov r8, r8)
 8002458:	20000464 	.word	0x20000464
 800245c:	40001400 	.word	0x40001400
 8002460:	00001387 	.word	0x00001387

08002464 <MX_TIM14_Init>:
  * @brief TIM14 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM14_Init(void)
{
 8002464:	b580      	push	{r7, lr}
 8002466:	af00      	add	r7, sp, #0
  /* USER CODE END TIM14_Init 0 */

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 8002468:	4b0e      	ldr	r3, [pc, #56]	@ (80024a4 <MX_TIM14_Init+0x40>)
 800246a:	4a0f      	ldr	r2, [pc, #60]	@ (80024a8 <MX_TIM14_Init+0x44>)
 800246c:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 0;
 800246e:	4b0d      	ldr	r3, [pc, #52]	@ (80024a4 <MX_TIM14_Init+0x40>)
 8002470:	2200      	movs	r2, #0
 8002472:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002474:	4b0b      	ldr	r3, [pc, #44]	@ (80024a4 <MX_TIM14_Init+0x40>)
 8002476:	2200      	movs	r2, #0
 8002478:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 50000-1;
 800247a:	4b0a      	ldr	r3, [pc, #40]	@ (80024a4 <MX_TIM14_Init+0x40>)
 800247c:	4a0b      	ldr	r2, [pc, #44]	@ (80024ac <MX_TIM14_Init+0x48>)
 800247e:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002480:	4b08      	ldr	r3, [pc, #32]	@ (80024a4 <MX_TIM14_Init+0x40>)
 8002482:	2200      	movs	r2, #0
 8002484:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002486:	4b07      	ldr	r3, [pc, #28]	@ (80024a4 <MX_TIM14_Init+0x40>)
 8002488:	2280      	movs	r2, #128	@ 0x80
 800248a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 800248c:	4b05      	ldr	r3, [pc, #20]	@ (80024a4 <MX_TIM14_Init+0x40>)
 800248e:	0018      	movs	r0, r3
 8002490:	f002 fd9a 	bl	8004fc8 <HAL_TIM_Base_Init>
 8002494:	1e03      	subs	r3, r0, #0
 8002496:	d001      	beq.n	800249c <MX_TIM14_Init+0x38>
  {
    Error_Handler();
 8002498:	f000 f94a 	bl	8002730 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */

}
 800249c:	46c0      	nop			@ (mov r8, r8)
 800249e:	46bd      	mov	sp, r7
 80024a0:	bd80      	pop	{r7, pc}
 80024a2:	46c0      	nop			@ (mov r8, r8)
 80024a4:	200004b0 	.word	0x200004b0
 80024a8:	40002000 	.word	0x40002000
 80024ac:	0000c34f 	.word	0x0000c34f

080024b0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80024b0:	b580      	push	{r7, lr}
 80024b2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80024b4:	4b23      	ldr	r3, [pc, #140]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024b6:	4a24      	ldr	r2, [pc, #144]	@ (8002548 <MX_USART1_UART_Init+0x98>)
 80024b8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80024ba:	4b22      	ldr	r3, [pc, #136]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024bc:	22e1      	movs	r2, #225	@ 0xe1
 80024be:	0252      	lsls	r2, r2, #9
 80024c0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80024c2:	4b20      	ldr	r3, [pc, #128]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024c4:	2200      	movs	r2, #0
 80024c6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80024c8:	4b1e      	ldr	r3, [pc, #120]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024ca:	2200      	movs	r2, #0
 80024cc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80024ce:	4b1d      	ldr	r3, [pc, #116]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024d0:	2200      	movs	r2, #0
 80024d2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80024d4:	4b1b      	ldr	r3, [pc, #108]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024d6:	220c      	movs	r2, #12
 80024d8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80024da:	4b1a      	ldr	r3, [pc, #104]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024dc:	2200      	movs	r2, #0
 80024de:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80024e0:	4b18      	ldr	r3, [pc, #96]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024e2:	2200      	movs	r2, #0
 80024e4:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80024e6:	4b17      	ldr	r3, [pc, #92]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024e8:	2200      	movs	r2, #0
 80024ea:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80024ec:	4b15      	ldr	r3, [pc, #84]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024ee:	2200      	movs	r2, #0
 80024f0:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80024f2:	4b14      	ldr	r3, [pc, #80]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024f4:	2200      	movs	r2, #0
 80024f6:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80024f8:	4b12      	ldr	r3, [pc, #72]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 80024fa:	0018      	movs	r0, r3
 80024fc:	f003 f8f4 	bl	80056e8 <HAL_UART_Init>
 8002500:	1e03      	subs	r3, r0, #0
 8002502:	d001      	beq.n	8002508 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 8002504:	f000 f914 	bl	8002730 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8002508:	4b0e      	ldr	r3, [pc, #56]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 800250a:	2100      	movs	r1, #0
 800250c:	0018      	movs	r0, r3
 800250e:	f005 f9fd 	bl	800790c <HAL_UARTEx_SetTxFifoThreshold>
 8002512:	1e03      	subs	r3, r0, #0
 8002514:	d001      	beq.n	800251a <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 8002516:	f000 f90b 	bl	8002730 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800251a:	4b0a      	ldr	r3, [pc, #40]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 800251c:	2100      	movs	r1, #0
 800251e:	0018      	movs	r0, r3
 8002520:	f005 fa34 	bl	800798c <HAL_UARTEx_SetRxFifoThreshold>
 8002524:	1e03      	subs	r3, r0, #0
 8002526:	d001      	beq.n	800252c <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 8002528:	f000 f902 	bl	8002730 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 800252c:	4b05      	ldr	r3, [pc, #20]	@ (8002544 <MX_USART1_UART_Init+0x94>)
 800252e:	0018      	movs	r0, r3
 8002530:	f005 f9b2 	bl	8007898 <HAL_UARTEx_DisableFifoMode>
 8002534:	1e03      	subs	r3, r0, #0
 8002536:	d001      	beq.n	800253c <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8002538:	f000 f8fa 	bl	8002730 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800253c:	46c0      	nop			@ (mov r8, r8)
 800253e:	46bd      	mov	sp, r7
 8002540:	bd80      	pop	{r7, pc}
 8002542:	46c0      	nop			@ (mov r8, r8)
 8002544:	200004fc 	.word	0x200004fc
 8002548:	40013800 	.word	0x40013800

0800254c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800254c:	b590      	push	{r4, r7, lr}
 800254e:	b08b      	sub	sp, #44	@ 0x2c
 8002550:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002552:	2414      	movs	r4, #20
 8002554:	193b      	adds	r3, r7, r4
 8002556:	0018      	movs	r0, r3
 8002558:	2314      	movs	r3, #20
 800255a:	001a      	movs	r2, r3
 800255c:	2100      	movs	r1, #0
 800255e:	f005 faed 	bl	8007b3c <memset>
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002562:	4b6c      	ldr	r3, [pc, #432]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 8002564:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002566:	4b6b      	ldr	r3, [pc, #428]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 8002568:	2104      	movs	r1, #4
 800256a:	430a      	orrs	r2, r1
 800256c:	635a      	str	r2, [r3, #52]	@ 0x34
 800256e:	4b69      	ldr	r3, [pc, #420]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 8002570:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002572:	2204      	movs	r2, #4
 8002574:	4013      	ands	r3, r2
 8002576:	613b      	str	r3, [r7, #16]
 8002578:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800257a:	4b66      	ldr	r3, [pc, #408]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 800257c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800257e:	4b65      	ldr	r3, [pc, #404]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 8002580:	2120      	movs	r1, #32
 8002582:	430a      	orrs	r2, r1
 8002584:	635a      	str	r2, [r3, #52]	@ 0x34
 8002586:	4b63      	ldr	r3, [pc, #396]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 8002588:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800258a:	2220      	movs	r2, #32
 800258c:	4013      	ands	r3, r2
 800258e:	60fb      	str	r3, [r7, #12]
 8002590:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002592:	4b60      	ldr	r3, [pc, #384]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 8002594:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002596:	4b5f      	ldr	r3, [pc, #380]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 8002598:	2101      	movs	r1, #1
 800259a:	430a      	orrs	r2, r1
 800259c:	635a      	str	r2, [r3, #52]	@ 0x34
 800259e:	4b5d      	ldr	r3, [pc, #372]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 80025a0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80025a2:	2201      	movs	r2, #1
 80025a4:	4013      	ands	r3, r2
 80025a6:	60bb      	str	r3, [r7, #8]
 80025a8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80025aa:	4b5a      	ldr	r3, [pc, #360]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 80025ac:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80025ae:	4b59      	ldr	r3, [pc, #356]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 80025b0:	2102      	movs	r1, #2
 80025b2:	430a      	orrs	r2, r1
 80025b4:	635a      	str	r2, [r3, #52]	@ 0x34
 80025b6:	4b57      	ldr	r3, [pc, #348]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 80025b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80025ba:	2202      	movs	r2, #2
 80025bc:	4013      	ands	r3, r2
 80025be:	607b      	str	r3, [r7, #4]
 80025c0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80025c2:	4b54      	ldr	r3, [pc, #336]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 80025c4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80025c6:	4b53      	ldr	r3, [pc, #332]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 80025c8:	2108      	movs	r1, #8
 80025ca:	430a      	orrs	r2, r1
 80025cc:	635a      	str	r2, [r3, #52]	@ 0x34
 80025ce:	4b51      	ldr	r3, [pc, #324]	@ (8002714 <MX_GPIO_Init+0x1c8>)
 80025d0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80025d2:	2208      	movs	r2, #8
 80025d4:	4013      	ands	r3, r2
 80025d6:	603b      	str	r3, [r7, #0]
 80025d8:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED1_Pin|B10_Pin|G10_Pin|R10_Pin
 80025da:	494f      	ldr	r1, [pc, #316]	@ (8002718 <MX_GPIO_Init+0x1cc>)
 80025dc:	23a0      	movs	r3, #160	@ 0xa0
 80025de:	05db      	lsls	r3, r3, #23
 80025e0:	2200      	movs	r2, #0
 80025e2:	0018      	movs	r0, r3
 80025e4:	f001 fcc1 	bl	8003f6a <HAL_GPIO_WritePin>
                          |B9_Pin|G9_Pin|R9_Pin|G6_Pin
                          |G5_Pin|R5_Pin|B4_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, B8_Pin|G8_Pin|R8_Pin|B7_Pin
 80025e8:	494c      	ldr	r1, [pc, #304]	@ (800271c <MX_GPIO_Init+0x1d0>)
 80025ea:	4b4d      	ldr	r3, [pc, #308]	@ (8002720 <MX_GPIO_Init+0x1d4>)
 80025ec:	2200      	movs	r2, #0
 80025ee:	0018      	movs	r0, r3
 80025f0:	f001 fcbb 	bl	8003f6a <HAL_GPIO_WritePin>
                          |G7_Pin|R7_Pin|B6_Pin|R3_Pin
                          |B2_Pin|G2_Pin|R2_Pin|B1_Pin
                          |G1_Pin|R1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, R6_Pin|B5_Pin, GPIO_PIN_RESET);
 80025f4:	4b4b      	ldr	r3, [pc, #300]	@ (8002724 <MX_GPIO_Init+0x1d8>)
 80025f6:	2200      	movs	r2, #0
 80025f8:	21c0      	movs	r1, #192	@ 0xc0
 80025fa:	0018      	movs	r0, r3
 80025fc:	f001 fcb5 	bl	8003f6a <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, G4_Pin|R4_Pin|B3_Pin|G3_Pin, GPIO_PIN_RESET);
 8002600:	4b49      	ldr	r3, [pc, #292]	@ (8002728 <MX_GPIO_Init+0x1dc>)
 8002602:	2200      	movs	r2, #0
 8002604:	210f      	movs	r1, #15
 8002606:	0018      	movs	r0, r3
 8002608:	f001 fcaf 	bl	8003f6a <HAL_GPIO_WritePin>

  /*Configure GPIO pins : DIP_SW1_Pin DIP_SW2_Pin DIP_SW3_Pin */
  GPIO_InitStruct.Pin = DIP_SW1_Pin|DIP_SW2_Pin|DIP_SW3_Pin;
 800260c:	193b      	adds	r3, r7, r4
 800260e:	22e0      	movs	r2, #224	@ 0xe0
 8002610:	0212      	lsls	r2, r2, #8
 8002612:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002614:	193b      	adds	r3, r7, r4
 8002616:	2200      	movs	r2, #0
 8002618:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800261a:	193b      	adds	r3, r7, r4
 800261c:	2200      	movs	r2, #0
 800261e:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002620:	193b      	adds	r3, r7, r4
 8002622:	4a40      	ldr	r2, [pc, #256]	@ (8002724 <MX_GPIO_Init+0x1d8>)
 8002624:	0019      	movs	r1, r3
 8002626:	0010      	movs	r0, r2
 8002628:	f001 fb16 	bl	8003c58 <HAL_GPIO_Init>

  /*Configure GPIO pin : PF2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800262c:	193b      	adds	r3, r7, r4
 800262e:	2204      	movs	r2, #4
 8002630:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002632:	193b      	adds	r3, r7, r4
 8002634:	2202      	movs	r2, #2
 8002636:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002638:	193b      	adds	r3, r7, r4
 800263a:	2200      	movs	r2, #0
 800263c:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800263e:	193b      	adds	r3, r7, r4
 8002640:	2200      	movs	r2, #0
 8002642:	60da      	str	r2, [r3, #12]
  GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 8002644:	193b      	adds	r3, r7, r4
 8002646:	2200      	movs	r2, #0
 8002648:	611a      	str	r2, [r3, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800264a:	193b      	adds	r3, r7, r4
 800264c:	4a37      	ldr	r2, [pc, #220]	@ (800272c <MX_GPIO_Init+0x1e0>)
 800264e:	0019      	movs	r1, r3
 8002650:	0010      	movs	r0, r2
 8002652:	f001 fb01 	bl	8003c58 <HAL_GPIO_Init>

  /*Configure GPIO pin : DIP_SW4_Pin */
  GPIO_InitStruct.Pin = DIP_SW4_Pin;
 8002656:	193b      	adds	r3, r7, r4
 8002658:	2201      	movs	r2, #1
 800265a:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800265c:	193b      	adds	r3, r7, r4
 800265e:	2200      	movs	r2, #0
 8002660:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002662:	193b      	adds	r3, r7, r4
 8002664:	2200      	movs	r2, #0
 8002666:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(DIP_SW4_GPIO_Port, &GPIO_InitStruct);
 8002668:	193a      	adds	r2, r7, r4
 800266a:	23a0      	movs	r3, #160	@ 0xa0
 800266c:	05db      	lsls	r3, r3, #23
 800266e:	0011      	movs	r1, r2
 8002670:	0018      	movs	r0, r3
 8002672:	f001 faf1 	bl	8003c58 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED1_Pin B10_Pin G10_Pin R10_Pin
                           B9_Pin G9_Pin R9_Pin G6_Pin
                           G5_Pin R5_Pin B4_Pin */
  GPIO_InitStruct.Pin = LED1_Pin|B10_Pin|G10_Pin|R10_Pin
 8002676:	193b      	adds	r3, r7, r4
 8002678:	4a27      	ldr	r2, [pc, #156]	@ (8002718 <MX_GPIO_Init+0x1cc>)
 800267a:	601a      	str	r2, [r3, #0]
                          |B9_Pin|G9_Pin|R9_Pin|G6_Pin
                          |G5_Pin|R5_Pin|B4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800267c:	193b      	adds	r3, r7, r4
 800267e:	2201      	movs	r2, #1
 8002680:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002682:	193b      	adds	r3, r7, r4
 8002684:	2200      	movs	r2, #0
 8002686:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002688:	193b      	adds	r3, r7, r4
 800268a:	2200      	movs	r2, #0
 800268c:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800268e:	193a      	adds	r2, r7, r4
 8002690:	23a0      	movs	r3, #160	@ 0xa0
 8002692:	05db      	lsls	r3, r3, #23
 8002694:	0011      	movs	r1, r2
 8002696:	0018      	movs	r0, r3
 8002698:	f001 fade 	bl	8003c58 <HAL_GPIO_Init>

  /*Configure GPIO pins : B8_Pin G8_Pin R8_Pin B7_Pin
                           G7_Pin R7_Pin B6_Pin R3_Pin
                           B2_Pin G2_Pin R2_Pin B1_Pin
                           G1_Pin R1_Pin */
  GPIO_InitStruct.Pin = B8_Pin|G8_Pin|R8_Pin|B7_Pin
 800269c:	193b      	adds	r3, r7, r4
 800269e:	4a1f      	ldr	r2, [pc, #124]	@ (800271c <MX_GPIO_Init+0x1d0>)
 80026a0:	601a      	str	r2, [r3, #0]
                          |G7_Pin|R7_Pin|B6_Pin|R3_Pin
                          |B2_Pin|G2_Pin|R2_Pin|B1_Pin
                          |G1_Pin|R1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80026a2:	193b      	adds	r3, r7, r4
 80026a4:	2201      	movs	r2, #1
 80026a6:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026a8:	193b      	adds	r3, r7, r4
 80026aa:	2200      	movs	r2, #0
 80026ac:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80026ae:	193b      	adds	r3, r7, r4
 80026b0:	2200      	movs	r2, #0
 80026b2:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026b4:	193b      	adds	r3, r7, r4
 80026b6:	4a1a      	ldr	r2, [pc, #104]	@ (8002720 <MX_GPIO_Init+0x1d4>)
 80026b8:	0019      	movs	r1, r3
 80026ba:	0010      	movs	r0, r2
 80026bc:	f001 facc 	bl	8003c58 <HAL_GPIO_Init>

  /*Configure GPIO pins : R6_Pin B5_Pin */
  GPIO_InitStruct.Pin = R6_Pin|B5_Pin;
 80026c0:	193b      	adds	r3, r7, r4
 80026c2:	22c0      	movs	r2, #192	@ 0xc0
 80026c4:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80026c6:	193b      	adds	r3, r7, r4
 80026c8:	2201      	movs	r2, #1
 80026ca:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026cc:	193b      	adds	r3, r7, r4
 80026ce:	2200      	movs	r2, #0
 80026d0:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80026d2:	193b      	adds	r3, r7, r4
 80026d4:	2200      	movs	r2, #0
 80026d6:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026d8:	193b      	adds	r3, r7, r4
 80026da:	4a12      	ldr	r2, [pc, #72]	@ (8002724 <MX_GPIO_Init+0x1d8>)
 80026dc:	0019      	movs	r1, r3
 80026de:	0010      	movs	r0, r2
 80026e0:	f001 faba 	bl	8003c58 <HAL_GPIO_Init>

  /*Configure GPIO pins : G4_Pin R4_Pin B3_Pin G3_Pin */
  GPIO_InitStruct.Pin = G4_Pin|R4_Pin|B3_Pin|G3_Pin;
 80026e4:	0021      	movs	r1, r4
 80026e6:	187b      	adds	r3, r7, r1
 80026e8:	220f      	movs	r2, #15
 80026ea:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80026ec:	187b      	adds	r3, r7, r1
 80026ee:	2201      	movs	r2, #1
 80026f0:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026f2:	187b      	adds	r3, r7, r1
 80026f4:	2200      	movs	r2, #0
 80026f6:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80026f8:	187b      	adds	r3, r7, r1
 80026fa:	2200      	movs	r2, #0
 80026fc:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026fe:	187b      	adds	r3, r7, r1
 8002700:	4a09      	ldr	r2, [pc, #36]	@ (8002728 <MX_GPIO_Init+0x1dc>)
 8002702:	0019      	movs	r1, r3
 8002704:	0010      	movs	r0, r2
 8002706:	f001 faa7 	bl	8003c58 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800270a:	46c0      	nop			@ (mov r8, r8)
 800270c:	46bd      	mov	sp, r7
 800270e:	b00b      	add	sp, #44	@ 0x2c
 8002710:	bd90      	pop	{r4, r7, pc}
 8002712:	46c0      	nop			@ (mov r8, r8)
 8002714:	40021000 	.word	0x40021000
 8002718:	000099fe 	.word	0x000099fe
 800271c:	0000fffc 	.word	0x0000fffc
 8002720:	50000400 	.word	0x50000400
 8002724:	50000800 	.word	0x50000800
 8002728:	50000c00 	.word	0x50000c00
 800272c:	50001400 	.word	0x50001400

08002730 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002730:	b580      	push	{r7, lr}
 8002732:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002734:	b672      	cpsid	i
}
 8002736:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002738:	46c0      	nop			@ (mov r8, r8)
 800273a:	e7fd      	b.n	8002738 <Error_Handler+0x8>

0800273c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800273c:	b580      	push	{r7, lr}
 800273e:	b082      	sub	sp, #8
 8002740:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002742:	4b11      	ldr	r3, [pc, #68]	@ (8002788 <HAL_MspInit+0x4c>)
 8002744:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002746:	4b10      	ldr	r3, [pc, #64]	@ (8002788 <HAL_MspInit+0x4c>)
 8002748:	2101      	movs	r1, #1
 800274a:	430a      	orrs	r2, r1
 800274c:	641a      	str	r2, [r3, #64]	@ 0x40
 800274e:	4b0e      	ldr	r3, [pc, #56]	@ (8002788 <HAL_MspInit+0x4c>)
 8002750:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002752:	2201      	movs	r2, #1
 8002754:	4013      	ands	r3, r2
 8002756:	607b      	str	r3, [r7, #4]
 8002758:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800275a:	4b0b      	ldr	r3, [pc, #44]	@ (8002788 <HAL_MspInit+0x4c>)
 800275c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800275e:	4b0a      	ldr	r3, [pc, #40]	@ (8002788 <HAL_MspInit+0x4c>)
 8002760:	2180      	movs	r1, #128	@ 0x80
 8002762:	0549      	lsls	r1, r1, #21
 8002764:	430a      	orrs	r2, r1
 8002766:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002768:	4b07      	ldr	r3, [pc, #28]	@ (8002788 <HAL_MspInit+0x4c>)
 800276a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800276c:	2380      	movs	r3, #128	@ 0x80
 800276e:	055b      	lsls	r3, r3, #21
 8002770:	4013      	ands	r3, r2
 8002772:	603b      	str	r3, [r7, #0]
 8002774:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_SYSCFG_StrobeDBattpinsConfig(SYSCFG_CFGR1_UCPD1_STROBE | SYSCFG_CFGR1_UCPD2_STROBE);
 8002776:	23c0      	movs	r3, #192	@ 0xc0
 8002778:	00db      	lsls	r3, r3, #3
 800277a:	0018      	movs	r0, r3
 800277c:	f000 fa88 	bl	8002c90 <HAL_SYSCFG_StrobeDBattpinsConfig>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002780:	46c0      	nop			@ (mov r8, r8)
 8002782:	46bd      	mov	sp, r7
 8002784:	b002      	add	sp, #8
 8002786:	bd80      	pop	{r7, pc}
 8002788:	40021000 	.word	0x40021000

0800278c <HAL_FDCAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hfdcan: FDCAN handle pointer
* @retval None
*/
void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef* hfdcan)
{
 800278c:	b590      	push	{r4, r7, lr}
 800278e:	b09d      	sub	sp, #116	@ 0x74
 8002790:	af00      	add	r7, sp, #0
 8002792:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002794:	235c      	movs	r3, #92	@ 0x5c
 8002796:	18fb      	adds	r3, r7, r3
 8002798:	0018      	movs	r0, r3
 800279a:	2314      	movs	r3, #20
 800279c:	001a      	movs	r2, r3
 800279e:	2100      	movs	r1, #0
 80027a0:	f005 f9cc 	bl	8007b3c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80027a4:	2410      	movs	r4, #16
 80027a6:	193b      	adds	r3, r7, r4
 80027a8:	0018      	movs	r0, r3
 80027aa:	234c      	movs	r3, #76	@ 0x4c
 80027ac:	001a      	movs	r2, r3
 80027ae:	2100      	movs	r1, #0
 80027b0:	f005 f9c4 	bl	8007b3c <memset>
  if(hfdcan->Instance==FDCAN2)
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	4a2a      	ldr	r2, [pc, #168]	@ (8002864 <HAL_FDCAN_MspInit+0xd8>)
 80027ba:	4293      	cmp	r3, r2
 80027bc:	d14e      	bne.n	800285c <HAL_FDCAN_MspInit+0xd0>

  /* USER CODE END FDCAN2_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
 80027be:	193b      	adds	r3, r7, r4
 80027c0:	2280      	movs	r2, #128	@ 0x80
 80027c2:	0492      	lsls	r2, r2, #18
 80027c4:	601a      	str	r2, [r3, #0]
    PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PCLK1;
 80027c6:	193b      	adds	r3, r7, r4
 80027c8:	2200      	movs	r2, #0
 80027ca:	649a      	str	r2, [r3, #72]	@ 0x48

    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80027cc:	193b      	adds	r3, r7, r4
 80027ce:	0018      	movs	r0, r3
 80027d0:	f002 f9be 	bl	8004b50 <HAL_RCCEx_PeriphCLKConfig>
 80027d4:	1e03      	subs	r3, r0, #0
 80027d6:	d001      	beq.n	80027dc <HAL_FDCAN_MspInit+0x50>
    {
      Error_Handler();
 80027d8:	f7ff ffaa 	bl	8002730 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_FDCAN_CLK_ENABLE();
 80027dc:	4b22      	ldr	r3, [pc, #136]	@ (8002868 <HAL_FDCAN_MspInit+0xdc>)
 80027de:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80027e0:	4b21      	ldr	r3, [pc, #132]	@ (8002868 <HAL_FDCAN_MspInit+0xdc>)
 80027e2:	2180      	movs	r1, #128	@ 0x80
 80027e4:	0149      	lsls	r1, r1, #5
 80027e6:	430a      	orrs	r2, r1
 80027e8:	63da      	str	r2, [r3, #60]	@ 0x3c
 80027ea:	4b1f      	ldr	r3, [pc, #124]	@ (8002868 <HAL_FDCAN_MspInit+0xdc>)
 80027ec:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80027ee:	2380      	movs	r3, #128	@ 0x80
 80027f0:	015b      	lsls	r3, r3, #5
 80027f2:	4013      	ands	r3, r2
 80027f4:	60fb      	str	r3, [r7, #12]
 80027f6:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80027f8:	4b1b      	ldr	r3, [pc, #108]	@ (8002868 <HAL_FDCAN_MspInit+0xdc>)
 80027fa:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80027fc:	4b1a      	ldr	r3, [pc, #104]	@ (8002868 <HAL_FDCAN_MspInit+0xdc>)
 80027fe:	2102      	movs	r1, #2
 8002800:	430a      	orrs	r2, r1
 8002802:	635a      	str	r2, [r3, #52]	@ 0x34
 8002804:	4b18      	ldr	r3, [pc, #96]	@ (8002868 <HAL_FDCAN_MspInit+0xdc>)
 8002806:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002808:	2202      	movs	r2, #2
 800280a:	4013      	ands	r3, r2
 800280c:	60bb      	str	r3, [r7, #8]
 800280e:	68bb      	ldr	r3, [r7, #8]
    /**FDCAN2 GPIO Configuration
    PB0     ------> FDCAN2_RX
    PB1     ------> FDCAN2_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002810:	215c      	movs	r1, #92	@ 0x5c
 8002812:	187b      	adds	r3, r7, r1
 8002814:	2203      	movs	r2, #3
 8002816:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002818:	187b      	adds	r3, r7, r1
 800281a:	2202      	movs	r2, #2
 800281c:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800281e:	187b      	adds	r3, r7, r1
 8002820:	2200      	movs	r2, #0
 8002822:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002824:	187b      	adds	r3, r7, r1
 8002826:	2200      	movs	r2, #0
 8002828:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF3_FDCAN2;
 800282a:	187b      	adds	r3, r7, r1
 800282c:	2203      	movs	r2, #3
 800282e:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002830:	187b      	adds	r3, r7, r1
 8002832:	4a0e      	ldr	r2, [pc, #56]	@ (800286c <HAL_FDCAN_MspInit+0xe0>)
 8002834:	0019      	movs	r1, r3
 8002836:	0010      	movs	r0, r2
 8002838:	f001 fa0e 	bl	8003c58 <HAL_GPIO_Init>

    /* FDCAN2 interrupt Init */
    HAL_NVIC_SetPriority(TIM16_FDCAN_IT0_IRQn, 2, 0);
 800283c:	2200      	movs	r2, #0
 800283e:	2102      	movs	r1, #2
 8002840:	2015      	movs	r0, #21
 8002842:	f000 fae7 	bl	8002e14 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM16_FDCAN_IT0_IRQn);
 8002846:	2015      	movs	r0, #21
 8002848:	f000 faf9 	bl	8002e3e <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM17_FDCAN_IT1_IRQn, 2, 0);
 800284c:	2200      	movs	r2, #0
 800284e:	2102      	movs	r1, #2
 8002850:	2016      	movs	r0, #22
 8002852:	f000 fadf 	bl	8002e14 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM17_FDCAN_IT1_IRQn);
 8002856:	2016      	movs	r0, #22
 8002858:	f000 faf1 	bl	8002e3e <HAL_NVIC_EnableIRQ>

  /* USER CODE END FDCAN2_MspInit 1 */

  }

}
 800285c:	46c0      	nop			@ (mov r8, r8)
 800285e:	46bd      	mov	sp, r7
 8002860:	b01d      	add	sp, #116	@ 0x74
 8002862:	bd90      	pop	{r4, r7, pc}
 8002864:	40006800 	.word	0x40006800
 8002868:	40021000 	.word	0x40021000
 800286c:	50000400 	.word	0x50000400

08002870 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002870:	b580      	push	{r7, lr}
 8002872:	b086      	sub	sp, #24
 8002874:	af00      	add	r7, sp, #0
 8002876:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM6)
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	681b      	ldr	r3, [r3, #0]
 800287c:	4a24      	ldr	r2, [pc, #144]	@ (8002910 <HAL_TIM_Base_MspInit+0xa0>)
 800287e:	4293      	cmp	r3, r2
 8002880:	d10c      	bne.n	800289c <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM6_MspInit 0 */

  /* USER CODE END TIM6_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM6_CLK_ENABLE();
 8002882:	4b24      	ldr	r3, [pc, #144]	@ (8002914 <HAL_TIM_Base_MspInit+0xa4>)
 8002884:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8002886:	4b23      	ldr	r3, [pc, #140]	@ (8002914 <HAL_TIM_Base_MspInit+0xa4>)
 8002888:	2110      	movs	r1, #16
 800288a:	430a      	orrs	r2, r1
 800288c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800288e:	4b21      	ldr	r3, [pc, #132]	@ (8002914 <HAL_TIM_Base_MspInit+0xa4>)
 8002890:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002892:	2210      	movs	r2, #16
 8002894:	4013      	ands	r3, r2
 8002896:	617b      	str	r3, [r7, #20]
 8002898:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 800289a:	e034      	b.n	8002906 <HAL_TIM_Base_MspInit+0x96>
  else if(htim_base->Instance==TIM7)
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	4a1d      	ldr	r2, [pc, #116]	@ (8002918 <HAL_TIM_Base_MspInit+0xa8>)
 80028a2:	4293      	cmp	r3, r2
 80028a4:	d114      	bne.n	80028d0 <HAL_TIM_Base_MspInit+0x60>
    __HAL_RCC_TIM7_CLK_ENABLE();
 80028a6:	4b1b      	ldr	r3, [pc, #108]	@ (8002914 <HAL_TIM_Base_MspInit+0xa4>)
 80028a8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80028aa:	4b1a      	ldr	r3, [pc, #104]	@ (8002914 <HAL_TIM_Base_MspInit+0xa4>)
 80028ac:	2120      	movs	r1, #32
 80028ae:	430a      	orrs	r2, r1
 80028b0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80028b2:	4b18      	ldr	r3, [pc, #96]	@ (8002914 <HAL_TIM_Base_MspInit+0xa4>)
 80028b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80028b6:	2220      	movs	r2, #32
 80028b8:	4013      	ands	r3, r2
 80028ba:	613b      	str	r3, [r7, #16]
 80028bc:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM7_LPTIM2_IRQn, 0, 0);
 80028be:	2200      	movs	r2, #0
 80028c0:	2100      	movs	r1, #0
 80028c2:	2012      	movs	r0, #18
 80028c4:	f000 faa6 	bl	8002e14 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_LPTIM2_IRQn);
 80028c8:	2012      	movs	r0, #18
 80028ca:	f000 fab8 	bl	8002e3e <HAL_NVIC_EnableIRQ>
}
 80028ce:	e01a      	b.n	8002906 <HAL_TIM_Base_MspInit+0x96>
  else if(htim_base->Instance==TIM14)
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	4a11      	ldr	r2, [pc, #68]	@ (800291c <HAL_TIM_Base_MspInit+0xac>)
 80028d6:	4293      	cmp	r3, r2
 80028d8:	d115      	bne.n	8002906 <HAL_TIM_Base_MspInit+0x96>
    __HAL_RCC_TIM14_CLK_ENABLE();
 80028da:	4b0e      	ldr	r3, [pc, #56]	@ (8002914 <HAL_TIM_Base_MspInit+0xa4>)
 80028dc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80028de:	4b0d      	ldr	r3, [pc, #52]	@ (8002914 <HAL_TIM_Base_MspInit+0xa4>)
 80028e0:	2180      	movs	r1, #128	@ 0x80
 80028e2:	0209      	lsls	r1, r1, #8
 80028e4:	430a      	orrs	r2, r1
 80028e6:	641a      	str	r2, [r3, #64]	@ 0x40
 80028e8:	4b0a      	ldr	r3, [pc, #40]	@ (8002914 <HAL_TIM_Base_MspInit+0xa4>)
 80028ea:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80028ec:	2380      	movs	r3, #128	@ 0x80
 80028ee:	021b      	lsls	r3, r3, #8
 80028f0:	4013      	ands	r3, r2
 80028f2:	60fb      	str	r3, [r7, #12]
 80028f4:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM14_IRQn, 1, 0);
 80028f6:	2200      	movs	r2, #0
 80028f8:	2101      	movs	r1, #1
 80028fa:	2013      	movs	r0, #19
 80028fc:	f000 fa8a 	bl	8002e14 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM14_IRQn);
 8002900:	2013      	movs	r0, #19
 8002902:	f000 fa9c 	bl	8002e3e <HAL_NVIC_EnableIRQ>
}
 8002906:	46c0      	nop			@ (mov r8, r8)
 8002908:	46bd      	mov	sp, r7
 800290a:	b006      	add	sp, #24
 800290c:	bd80      	pop	{r7, pc}
 800290e:	46c0      	nop			@ (mov r8, r8)
 8002910:	40001000 	.word	0x40001000
 8002914:	40021000 	.word	0x40021000
 8002918:	40001400 	.word	0x40001400
 800291c:	40002000 	.word	0x40002000

08002920 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002920:	b590      	push	{r4, r7, lr}
 8002922:	b09d      	sub	sp, #116	@ 0x74
 8002924:	af00      	add	r7, sp, #0
 8002926:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002928:	235c      	movs	r3, #92	@ 0x5c
 800292a:	18fb      	adds	r3, r7, r3
 800292c:	0018      	movs	r0, r3
 800292e:	2314      	movs	r3, #20
 8002930:	001a      	movs	r2, r3
 8002932:	2100      	movs	r1, #0
 8002934:	f005 f902 	bl	8007b3c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002938:	2410      	movs	r4, #16
 800293a:	193b      	adds	r3, r7, r4
 800293c:	0018      	movs	r0, r3
 800293e:	234c      	movs	r3, #76	@ 0x4c
 8002940:	001a      	movs	r2, r3
 8002942:	2100      	movs	r1, #0
 8002944:	f005 f8fa 	bl	8007b3c <memset>
  if(huart->Instance==USART1)
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	4a27      	ldr	r2, [pc, #156]	@ (80029ec <HAL_UART_MspInit+0xcc>)
 800294e:	4293      	cmp	r3, r2
 8002950:	d147      	bne.n	80029e2 <HAL_UART_MspInit+0xc2>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8002952:	193b      	adds	r3, r7, r4
 8002954:	2201      	movs	r2, #1
 8002956:	601a      	str	r2, [r3, #0]
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8002958:	193b      	adds	r3, r7, r4
 800295a:	2200      	movs	r2, #0
 800295c:	605a      	str	r2, [r3, #4]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800295e:	193b      	adds	r3, r7, r4
 8002960:	0018      	movs	r0, r3
 8002962:	f002 f8f5 	bl	8004b50 <HAL_RCCEx_PeriphCLKConfig>
 8002966:	1e03      	subs	r3, r0, #0
 8002968:	d001      	beq.n	800296e <HAL_UART_MspInit+0x4e>
    {
      Error_Handler();
 800296a:	f7ff fee1 	bl	8002730 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 800296e:	4b20      	ldr	r3, [pc, #128]	@ (80029f0 <HAL_UART_MspInit+0xd0>)
 8002970:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002972:	4b1f      	ldr	r3, [pc, #124]	@ (80029f0 <HAL_UART_MspInit+0xd0>)
 8002974:	2180      	movs	r1, #128	@ 0x80
 8002976:	01c9      	lsls	r1, r1, #7
 8002978:	430a      	orrs	r2, r1
 800297a:	641a      	str	r2, [r3, #64]	@ 0x40
 800297c:	4b1c      	ldr	r3, [pc, #112]	@ (80029f0 <HAL_UART_MspInit+0xd0>)
 800297e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002980:	2380      	movs	r3, #128	@ 0x80
 8002982:	01db      	lsls	r3, r3, #7
 8002984:	4013      	ands	r3, r2
 8002986:	60fb      	str	r3, [r7, #12]
 8002988:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800298a:	4b19      	ldr	r3, [pc, #100]	@ (80029f0 <HAL_UART_MspInit+0xd0>)
 800298c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800298e:	4b18      	ldr	r3, [pc, #96]	@ (80029f0 <HAL_UART_MspInit+0xd0>)
 8002990:	2101      	movs	r1, #1
 8002992:	430a      	orrs	r2, r1
 8002994:	635a      	str	r2, [r3, #52]	@ 0x34
 8002996:	4b16      	ldr	r3, [pc, #88]	@ (80029f0 <HAL_UART_MspInit+0xd0>)
 8002998:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800299a:	2201      	movs	r2, #1
 800299c:	4013      	ands	r3, r2
 800299e:	60bb      	str	r3, [r7, #8]
 80029a0:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80029a2:	215c      	movs	r1, #92	@ 0x5c
 80029a4:	187b      	adds	r3, r7, r1
 80029a6:	22c0      	movs	r2, #192	@ 0xc0
 80029a8:	00d2      	lsls	r2, r2, #3
 80029aa:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029ac:	187b      	adds	r3, r7, r1
 80029ae:	2202      	movs	r2, #2
 80029b0:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029b2:	187b      	adds	r3, r7, r1
 80029b4:	2200      	movs	r2, #0
 80029b6:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80029b8:	187b      	adds	r3, r7, r1
 80029ba:	2200      	movs	r2, #0
 80029bc:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 80029be:	187b      	adds	r3, r7, r1
 80029c0:	2201      	movs	r2, #1
 80029c2:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029c4:	187a      	adds	r2, r7, r1
 80029c6:	23a0      	movs	r3, #160	@ 0xa0
 80029c8:	05db      	lsls	r3, r3, #23
 80029ca:	0011      	movs	r1, r2
 80029cc:	0018      	movs	r0, r3
 80029ce:	f001 f943 	bl	8003c58 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 2, 0);
 80029d2:	2200      	movs	r2, #0
 80029d4:	2102      	movs	r1, #2
 80029d6:	201b      	movs	r0, #27
 80029d8:	f000 fa1c 	bl	8002e14 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80029dc:	201b      	movs	r0, #27
 80029de:	f000 fa2e 	bl	8002e3e <HAL_NVIC_EnableIRQ>

  /* USER CODE END USART1_MspInit 1 */

  }

}
 80029e2:	46c0      	nop			@ (mov r8, r8)
 80029e4:	46bd      	mov	sp, r7
 80029e6:	b01d      	add	sp, #116	@ 0x74
 80029e8:	bd90      	pop	{r4, r7, pc}
 80029ea:	46c0      	nop			@ (mov r8, r8)
 80029ec:	40013800 	.word	0x40013800
 80029f0:	40021000 	.word	0x40021000

080029f4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80029f4:	b580      	push	{r7, lr}
 80029f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80029f8:	46c0      	nop			@ (mov r8, r8)
 80029fa:	e7fd      	b.n	80029f8 <NMI_Handler+0x4>

080029fc <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80029fc:	b580      	push	{r7, lr}
 80029fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002a00:	46c0      	nop			@ (mov r8, r8)
 8002a02:	e7fd      	b.n	8002a00 <HardFault_Handler+0x4>

08002a04 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002a04:	b580      	push	{r7, lr}
 8002a06:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002a08:	46c0      	nop			@ (mov r8, r8)
 8002a0a:	46bd      	mov	sp, r7
 8002a0c:	bd80      	pop	{r7, pc}

08002a0e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002a0e:	b580      	push	{r7, lr}
 8002a10:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002a12:	46c0      	nop			@ (mov r8, r8)
 8002a14:	46bd      	mov	sp, r7
 8002a16:	bd80      	pop	{r7, pc}

08002a18 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002a18:	b580      	push	{r7, lr}
 8002a1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002a1c:	f000 f91c 	bl	8002c58 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002a20:	46c0      	nop			@ (mov r8, r8)
 8002a22:	46bd      	mov	sp, r7
 8002a24:	bd80      	pop	{r7, pc}
	...

08002a28 <TIM7_LPTIM2_IRQHandler>:

/**
  * @brief This function handles TIM7 and LPTIM2 global Interrupt.
  */
void TIM7_LPTIM2_IRQHandler(void)
{
 8002a28:	b580      	push	{r7, lr}
 8002a2a:	b082      	sub	sp, #8
 8002a2c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_LPTIM2_IRQn 0 */
//Timer used to generate the strip leds soft-PWM. The scheduler running over timer14
//was unable to run all the tasks fast enough.
  /* USER CODE END TIM7_LPTIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8002a2e:	4b0b      	ldr	r3, [pc, #44]	@ (8002a5c <TIM7_LPTIM2_IRQHandler+0x34>)
 8002a30:	0018      	movs	r0, r3
 8002a32:	f002 fc03 	bl	800523c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_LPTIM2_IRQn 1 */
	CC_LEDPWM_SoftPwm_t* 	pCC_LEDPWM_SoftPwm;									//Pointer to strip leds control data
	pCC_LEDPWM_SoftPwm=&CC_LEDPWM_Strip;
 8002a36:	4b0a      	ldr	r3, [pc, #40]	@ (8002a60 <TIM7_LPTIM2_IRQHandler+0x38>)
 8002a38:	607b      	str	r3, [r7, #4]

	CC_LEDPWM_UpdatePwms((void*)pCC_LEDPWM_SoftPwm, (void*)NULL, (void*)NULL);
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	2200      	movs	r2, #0
 8002a3e:	2100      	movs	r1, #0
 8002a40:	0018      	movs	r0, r3
 8002a42:	f7fe f9e3 	bl	8000e0c <CC_LEDPWM_UpdatePwms>
	CC_LEDPWM_IncreaseCntr((void*)pCC_LEDPWM_SoftPwm, (void*)NULL, (void*)NULL);
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	2200      	movs	r2, #0
 8002a4a:	2100      	movs	r1, #0
 8002a4c:	0018      	movs	r0, r3
 8002a4e:	f7fe f9bd 	bl	8000dcc <CC_LEDPWM_IncreaseCntr>
  /* USER CODE END TIM7_LPTIM2_IRQn 1 */
}
 8002a52:	46c0      	nop			@ (mov r8, r8)
 8002a54:	46bd      	mov	sp, r7
 8002a56:	b002      	add	sp, #8
 8002a58:	bd80      	pop	{r7, pc}
 8002a5a:	46c0      	nop			@ (mov r8, r8)
 8002a5c:	20000464 	.word	0x20000464
 8002a60:	20000094 	.word	0x20000094

08002a64 <TIM14_IRQHandler>:

/**
  * @brief This function handles TIM14 global interrupt.
  */
void TIM14_IRQHandler(void)
{
 8002a64:	b580      	push	{r7, lr}
 8002a66:	b082      	sub	sp, #8
 8002a68:	af00      	add	r7, sp, #0
//executed if there weren't too many overflows, and afterwards is
//checked if another TMR14 interrupt event has happened by checking again
//the interrupt flag. If so, it means that the procedure lasted too much
//and it is increased the missed interrupts count.

	CC_ML_StartTimer(&CC_ML_SCHEDULER_CHRONO_HANDLER);
 8002a6a:	4b18      	ldr	r3, [pc, #96]	@ (8002acc <TIM14_IRQHandler+0x68>)
 8002a6c:	0018      	movs	r0, r3
 8002a6e:	f7ff fb14 	bl	800209a <CC_ML_StartTimer>
  /* USER CODE END TIM14_IRQn 0 */
  HAL_TIM_IRQHandler(&htim14);
 8002a72:	4b17      	ldr	r3, [pc, #92]	@ (8002ad0 <TIM14_IRQHandler+0x6c>)
 8002a74:	0018      	movs	r0, r3
 8002a76:	f002 fbe1 	bl	800523c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM14_IRQn 1 */
	uint8_t current_task;

	current_task=CC_SCHDLR_FastScheduler.TaskOngoing;
 8002a7a:	1dfb      	adds	r3, r7, #7
 8002a7c:	4a15      	ldr	r2, [pc, #84]	@ (8002ad4 <TIM14_IRQHandler+0x70>)
 8002a7e:	21b0      	movs	r1, #176	@ 0xb0
 8002a80:	5c52      	ldrb	r2, [r2, r1]
 8002a82:	701a      	strb	r2, [r3, #0]
	//Overflowing stop
	if(CC_SCHDLR_FastScheduler.MissIntCnt>CC_SCHDLR_MAX_ALLOWED_MISS_INT)	//Check the number of overflows
 8002a84:	4b13      	ldr	r3, [pc, #76]	@ (8002ad4 <TIM14_IRQHandler+0x70>)
 8002a86:	33b8      	adds	r3, #184	@ 0xb8
 8002a88:	681a      	ldr	r2, [r3, #0]
 8002a8a:	685b      	ldr	r3, [r3, #4]
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	d119      	bne.n	8002ac4 <TIM14_IRQHandler+0x60>
 8002a90:	d101      	bne.n	8002a96 <TIM14_IRQHandler+0x32>
 8002a92:	2a64      	cmp	r2, #100	@ 0x64
 8002a94:	d816      	bhi.n	8002ac4 <TIM14_IRQHandler+0x60>
	{
	//INSERT AN ERROR LOG HERE
		return;																//After a limit Scheduler wont work anymore
	}
	CC_SCHDLR_Scheduler(((void*)&CC_SCHDLR_FastScheduler), (void*)NULL, (void*)NULL);
 8002a96:	4b0f      	ldr	r3, [pc, #60]	@ (8002ad4 <TIM14_IRQHandler+0x70>)
 8002a98:	2200      	movs	r2, #0
 8002a9a:	2100      	movs	r1, #0
 8002a9c:	0018      	movs	r0, r3
 8002a9e:	f7fe fa2b 	bl	8000ef8 <CC_SCHDLR_Scheduler>
	CC_ML_StopTimer(&CC_ML_SCHEDULER_CHRONO_HANDLER);
 8002aa2:	4b0a      	ldr	r3, [pc, #40]	@ (8002acc <TIM14_IRQHandler+0x68>)
 8002aa4:	0018      	movs	r0, r3
 8002aa6:	f7ff fb04 	bl	80020b2 <CC_ML_StopTimer>
	CC_SCHDLR_SchedulerUsage(&CC_SCHDLR_MainSchedulerUsage, current_task); 	//Keep in mind that the scheduler update the current task, so it needs to work with non-updated current task
 8002aaa:	1dfb      	adds	r3, r7, #7
 8002aac:	781a      	ldrb	r2, [r3, #0]
 8002aae:	4b0a      	ldr	r3, [pc, #40]	@ (8002ad8 <TIM14_IRQHandler+0x74>)
 8002ab0:	0011      	movs	r1, r2
 8002ab2:	0018      	movs	r0, r3
 8002ab4:	f7fe fa8e 	bl	8000fd4 <CC_SCHDLR_SchedulerUsage>
	CC_TMR_SetTimer(&CC_ML_SCHEDULER_CHRONO_HANDLER, 0);				//Reset counter timer used to calculate the task's usage
 8002ab8:	4b04      	ldr	r3, [pc, #16]	@ (8002acc <TIM14_IRQHandler+0x68>)
 8002aba:	2100      	movs	r1, #0
 8002abc:	0018      	movs	r0, r3
 8002abe:	f7ff fa45 	bl	8001f4c <CC_TMR_SetTimer>
 8002ac2:	e000      	b.n	8002ac6 <TIM14_IRQHandler+0x62>
		return;																//After a limit Scheduler wont work anymore
 8002ac4:	46c0      	nop			@ (mov r8, r8)

  /* USER CODE END TIM14_IRQn 1 */
}
 8002ac6:	46bd      	mov	sp, r7
 8002ac8:	b002      	add	sp, #8
 8002aca:	bd80      	pop	{r7, pc}
 8002acc:	20000418 	.word	0x20000418
 8002ad0:	200004b0 	.word	0x200004b0
 8002ad4:	20000140 	.word	0x20000140
 8002ad8:	200002c0 	.word	0x200002c0

08002adc <TIM16_FDCAN_IT0_IRQHandler>:

/**
  * @brief This function handles TIM16, FDCAN1_IT0 and FDCAN2_IT0 Interrupt.
  */
void TIM16_FDCAN_IT0_IRQHandler(void)
{
 8002adc:	b580      	push	{r7, lr}
 8002ade:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM16_FDCAN_IT0_IRQn 0 */

  /* USER CODE END TIM16_FDCAN_IT0_IRQn 0 */
  HAL_FDCAN_IRQHandler(&hfdcan2);
 8002ae0:	4b03      	ldr	r3, [pc, #12]	@ (8002af0 <TIM16_FDCAN_IT0_IRQHandler+0x14>)
 8002ae2:	0018      	movs	r0, r3
 8002ae4:	f000 fe46 	bl	8003774 <HAL_FDCAN_IRQHandler>
  /* USER CODE BEGIN TIM16_FDCAN_IT0_IRQn 1 */

  /* USER CODE END TIM16_FDCAN_IT0_IRQn 1 */
}
 8002ae8:	46c0      	nop			@ (mov r8, r8)
 8002aea:	46bd      	mov	sp, r7
 8002aec:	bd80      	pop	{r7, pc}
 8002aee:	46c0      	nop			@ (mov r8, r8)
 8002af0:	200003b4 	.word	0x200003b4

08002af4 <TIM17_FDCAN_IT1_IRQHandler>:

/**
  * @brief This function handles TIM17, FDCAN1_IT1 and FDCAN2_IT1 Interrupt.
  */
void TIM17_FDCAN_IT1_IRQHandler(void)
{
 8002af4:	b580      	push	{r7, lr}
 8002af6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM17_FDCAN_IT1_IRQn 0 */

  /* USER CODE END TIM17_FDCAN_IT1_IRQn 0 */
  HAL_FDCAN_IRQHandler(&hfdcan2);
 8002af8:	4b03      	ldr	r3, [pc, #12]	@ (8002b08 <TIM17_FDCAN_IT1_IRQHandler+0x14>)
 8002afa:	0018      	movs	r0, r3
 8002afc:	f000 fe3a 	bl	8003774 <HAL_FDCAN_IRQHandler>
  /* USER CODE BEGIN TIM17_FDCAN_IT1_IRQn 1 */

  /* USER CODE END TIM17_FDCAN_IT1_IRQn 1 */
}
 8002b00:	46c0      	nop			@ (mov r8, r8)
 8002b02:	46bd      	mov	sp, r7
 8002b04:	bd80      	pop	{r7, pc}
 8002b06:	46c0      	nop			@ (mov r8, r8)
 8002b08:	200003b4 	.word	0x200003b4

08002b0c <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI line 25.
  */
void USART1_IRQHandler(void)
{
 8002b0c:	b580      	push	{r7, lr}
 8002b0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002b10:	4b03      	ldr	r3, [pc, #12]	@ (8002b20 <USART1_IRQHandler+0x14>)
 8002b12:	0018      	movs	r0, r3
 8002b14:	f002 ff48 	bl	80059a8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002b18:	46c0      	nop			@ (mov r8, r8)
 8002b1a:	46bd      	mov	sp, r7
 8002b1c:	bd80      	pop	{r7, pc}
 8002b1e:	46c0      	nop			@ (mov r8, r8)
 8002b20:	200004fc 	.word	0x200004fc

08002b24 <SystemInit>:
 8002b24:	b580      	push	{r7, lr}
 8002b26:	af00      	add	r7, sp, #0
 8002b28:	46c0      	nop			@ (mov r8, r8)
 8002b2a:	46bd      	mov	sp, r7
 8002b2c:	bd80      	pop	{r7, pc}
	...

08002b30 <Reset_Handler>:
 8002b30:	480d      	ldr	r0, [pc, #52]	@ (8002b68 <LoopForever+0x2>)
 8002b32:	4685      	mov	sp, r0
 8002b34:	f7ff fff6 	bl	8002b24 <SystemInit>
 8002b38:	480c      	ldr	r0, [pc, #48]	@ (8002b6c <LoopForever+0x6>)
 8002b3a:	490d      	ldr	r1, [pc, #52]	@ (8002b70 <LoopForever+0xa>)
 8002b3c:	4a0d      	ldr	r2, [pc, #52]	@ (8002b74 <LoopForever+0xe>)
 8002b3e:	2300      	movs	r3, #0
 8002b40:	e002      	b.n	8002b48 <LoopCopyDataInit>

08002b42 <CopyDataInit>:
 8002b42:	58d4      	ldr	r4, [r2, r3]
 8002b44:	50c4      	str	r4, [r0, r3]
 8002b46:	3304      	adds	r3, #4

08002b48 <LoopCopyDataInit>:
 8002b48:	18c4      	adds	r4, r0, r3
 8002b4a:	428c      	cmp	r4, r1
 8002b4c:	d3f9      	bcc.n	8002b42 <CopyDataInit>
 8002b4e:	4a0a      	ldr	r2, [pc, #40]	@ (8002b78 <LoopForever+0x12>)
 8002b50:	4c0a      	ldr	r4, [pc, #40]	@ (8002b7c <LoopForever+0x16>)
 8002b52:	2300      	movs	r3, #0
 8002b54:	e001      	b.n	8002b5a <LoopFillZerobss>

08002b56 <FillZerobss>:
 8002b56:	6013      	str	r3, [r2, #0]
 8002b58:	3204      	adds	r2, #4

08002b5a <LoopFillZerobss>:
 8002b5a:	42a2      	cmp	r2, r4
 8002b5c:	d3fb      	bcc.n	8002b56 <FillZerobss>
 8002b5e:	f005 f809 	bl	8007b74 <__libc_init_array>
 8002b62:	f7ff fb25 	bl	80021b0 <main>

08002b66 <LoopForever>:
 8002b66:	e7fe      	b.n	8002b66 <LoopForever>
 8002b68:	20024000 	.word	0x20024000
 8002b6c:	20000000 	.word	0x20000000
 8002b70:	20000014 	.word	0x20000014
 8002b74:	08008238 	.word	0x08008238
 8002b78:	20000018 	.word	0x20000018
 8002b7c:	20000594 	.word	0x20000594

08002b80 <ADC1_COMP_IRQHandler>:
 8002b80:	e7fe      	b.n	8002b80 <ADC1_COMP_IRQHandler>
	...

08002b84 <HAL_Init>:
 8002b84:	b580      	push	{r7, lr}
 8002b86:	b082      	sub	sp, #8
 8002b88:	af00      	add	r7, sp, #0
 8002b8a:	1dfb      	adds	r3, r7, #7
 8002b8c:	2200      	movs	r2, #0
 8002b8e:	701a      	strb	r2, [r3, #0]
 8002b90:	4b0b      	ldr	r3, [pc, #44]	@ (8002bc0 <HAL_Init+0x3c>)
 8002b92:	681a      	ldr	r2, [r3, #0]
 8002b94:	4b0a      	ldr	r3, [pc, #40]	@ (8002bc0 <HAL_Init+0x3c>)
 8002b96:	2180      	movs	r1, #128	@ 0x80
 8002b98:	0049      	lsls	r1, r1, #1
 8002b9a:	430a      	orrs	r2, r1
 8002b9c:	601a      	str	r2, [r3, #0]
 8002b9e:	2003      	movs	r0, #3
 8002ba0:	f000 f810 	bl	8002bc4 <HAL_InitTick>
 8002ba4:	1e03      	subs	r3, r0, #0
 8002ba6:	d003      	beq.n	8002bb0 <HAL_Init+0x2c>
 8002ba8:	1dfb      	adds	r3, r7, #7
 8002baa:	2201      	movs	r2, #1
 8002bac:	701a      	strb	r2, [r3, #0]
 8002bae:	e001      	b.n	8002bb4 <HAL_Init+0x30>
 8002bb0:	f7ff fdc4 	bl	800273c <HAL_MspInit>
 8002bb4:	1dfb      	adds	r3, r7, #7
 8002bb6:	781b      	ldrb	r3, [r3, #0]
 8002bb8:	0018      	movs	r0, r3
 8002bba:	46bd      	mov	sp, r7
 8002bbc:	b002      	add	sp, #8
 8002bbe:	bd80      	pop	{r7, pc}
 8002bc0:	40022000 	.word	0x40022000

08002bc4 <HAL_InitTick>:
 8002bc4:	b590      	push	{r4, r7, lr}
 8002bc6:	b085      	sub	sp, #20
 8002bc8:	af00      	add	r7, sp, #0
 8002bca:	6078      	str	r0, [r7, #4]
 8002bcc:	230f      	movs	r3, #15
 8002bce:	18fb      	adds	r3, r7, r3
 8002bd0:	2200      	movs	r2, #0
 8002bd2:	701a      	strb	r2, [r3, #0]
 8002bd4:	4b1d      	ldr	r3, [pc, #116]	@ (8002c4c <HAL_InitTick+0x88>)
 8002bd6:	781b      	ldrb	r3, [r3, #0]
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d02b      	beq.n	8002c34 <HAL_InitTick+0x70>
 8002bdc:	4b1c      	ldr	r3, [pc, #112]	@ (8002c50 <HAL_InitTick+0x8c>)
 8002bde:	681c      	ldr	r4, [r3, #0]
 8002be0:	4b1a      	ldr	r3, [pc, #104]	@ (8002c4c <HAL_InitTick+0x88>)
 8002be2:	781b      	ldrb	r3, [r3, #0]
 8002be4:	0019      	movs	r1, r3
 8002be6:	23fa      	movs	r3, #250	@ 0xfa
 8002be8:	0098      	lsls	r0, r3, #2
 8002bea:	f7fd fa93 	bl	8000114 <__udivsi3>
 8002bee:	0003      	movs	r3, r0
 8002bf0:	0019      	movs	r1, r3
 8002bf2:	0020      	movs	r0, r4
 8002bf4:	f7fd fa8e 	bl	8000114 <__udivsi3>
 8002bf8:	0003      	movs	r3, r0
 8002bfa:	0018      	movs	r0, r3
 8002bfc:	f000 f92f 	bl	8002e5e <HAL_SYSTICK_Config>
 8002c00:	1e03      	subs	r3, r0, #0
 8002c02:	d112      	bne.n	8002c2a <HAL_InitTick+0x66>
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	2b03      	cmp	r3, #3
 8002c08:	d80a      	bhi.n	8002c20 <HAL_InitTick+0x5c>
 8002c0a:	6879      	ldr	r1, [r7, #4]
 8002c0c:	2301      	movs	r3, #1
 8002c0e:	425b      	negs	r3, r3
 8002c10:	2200      	movs	r2, #0
 8002c12:	0018      	movs	r0, r3
 8002c14:	f000 f8fe 	bl	8002e14 <HAL_NVIC_SetPriority>
 8002c18:	4b0e      	ldr	r3, [pc, #56]	@ (8002c54 <HAL_InitTick+0x90>)
 8002c1a:	687a      	ldr	r2, [r7, #4]
 8002c1c:	601a      	str	r2, [r3, #0]
 8002c1e:	e00d      	b.n	8002c3c <HAL_InitTick+0x78>
 8002c20:	230f      	movs	r3, #15
 8002c22:	18fb      	adds	r3, r7, r3
 8002c24:	2201      	movs	r2, #1
 8002c26:	701a      	strb	r2, [r3, #0]
 8002c28:	e008      	b.n	8002c3c <HAL_InitTick+0x78>
 8002c2a:	230f      	movs	r3, #15
 8002c2c:	18fb      	adds	r3, r7, r3
 8002c2e:	2201      	movs	r2, #1
 8002c30:	701a      	strb	r2, [r3, #0]
 8002c32:	e003      	b.n	8002c3c <HAL_InitTick+0x78>
 8002c34:	230f      	movs	r3, #15
 8002c36:	18fb      	adds	r3, r7, r3
 8002c38:	2201      	movs	r2, #1
 8002c3a:	701a      	strb	r2, [r3, #0]
 8002c3c:	230f      	movs	r3, #15
 8002c3e:	18fb      	adds	r3, r7, r3
 8002c40:	781b      	ldrb	r3, [r3, #0]
 8002c42:	0018      	movs	r0, r3
 8002c44:	46bd      	mov	sp, r7
 8002c46:	b005      	add	sp, #20
 8002c48:	bd90      	pop	{r4, r7, pc}
 8002c4a:	46c0      	nop			@ (mov r8, r8)
 8002c4c:	20000010 	.word	0x20000010
 8002c50:	20000008 	.word	0x20000008
 8002c54:	2000000c 	.word	0x2000000c

08002c58 <HAL_IncTick>:
 8002c58:	b580      	push	{r7, lr}
 8002c5a:	af00      	add	r7, sp, #0
 8002c5c:	4b05      	ldr	r3, [pc, #20]	@ (8002c74 <HAL_IncTick+0x1c>)
 8002c5e:	781b      	ldrb	r3, [r3, #0]
 8002c60:	001a      	movs	r2, r3
 8002c62:	4b05      	ldr	r3, [pc, #20]	@ (8002c78 <HAL_IncTick+0x20>)
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	18d2      	adds	r2, r2, r3
 8002c68:	4b03      	ldr	r3, [pc, #12]	@ (8002c78 <HAL_IncTick+0x20>)
 8002c6a:	601a      	str	r2, [r3, #0]
 8002c6c:	46c0      	nop			@ (mov r8, r8)
 8002c6e:	46bd      	mov	sp, r7
 8002c70:	bd80      	pop	{r7, pc}
 8002c72:	46c0      	nop			@ (mov r8, r8)
 8002c74:	20000010 	.word	0x20000010
 8002c78:	20000590 	.word	0x20000590

08002c7c <HAL_GetTick>:
 8002c7c:	b580      	push	{r7, lr}
 8002c7e:	af00      	add	r7, sp, #0
 8002c80:	4b02      	ldr	r3, [pc, #8]	@ (8002c8c <HAL_GetTick+0x10>)
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	0018      	movs	r0, r3
 8002c86:	46bd      	mov	sp, r7
 8002c88:	bd80      	pop	{r7, pc}
 8002c8a:	46c0      	nop			@ (mov r8, r8)
 8002c8c:	20000590 	.word	0x20000590

08002c90 <HAL_SYSCFG_StrobeDBattpinsConfig>:
 8002c90:	b580      	push	{r7, lr}
 8002c92:	b082      	sub	sp, #8
 8002c94:	af00      	add	r7, sp, #0
 8002c96:	6078      	str	r0, [r7, #4]
 8002c98:	4b06      	ldr	r3, [pc, #24]	@ (8002cb4 <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4a06      	ldr	r2, [pc, #24]	@ (8002cb8 <HAL_SYSCFG_StrobeDBattpinsConfig+0x28>)
 8002c9e:	4013      	ands	r3, r2
 8002ca0:	0019      	movs	r1, r3
 8002ca2:	4b04      	ldr	r3, [pc, #16]	@ (8002cb4 <HAL_SYSCFG_StrobeDBattpinsConfig+0x24>)
 8002ca4:	687a      	ldr	r2, [r7, #4]
 8002ca6:	430a      	orrs	r2, r1
 8002ca8:	601a      	str	r2, [r3, #0]
 8002caa:	46c0      	nop			@ (mov r8, r8)
 8002cac:	46bd      	mov	sp, r7
 8002cae:	b002      	add	sp, #8
 8002cb0:	bd80      	pop	{r7, pc}
 8002cb2:	46c0      	nop			@ (mov r8, r8)
 8002cb4:	40010000 	.word	0x40010000
 8002cb8:	fffff9ff 	.word	0xfffff9ff

08002cbc <__NVIC_EnableIRQ>:
 8002cbc:	b580      	push	{r7, lr}
 8002cbe:	b082      	sub	sp, #8
 8002cc0:	af00      	add	r7, sp, #0
 8002cc2:	0002      	movs	r2, r0
 8002cc4:	1dfb      	adds	r3, r7, #7
 8002cc6:	701a      	strb	r2, [r3, #0]
 8002cc8:	1dfb      	adds	r3, r7, #7
 8002cca:	781b      	ldrb	r3, [r3, #0]
 8002ccc:	2b7f      	cmp	r3, #127	@ 0x7f
 8002cce:	d809      	bhi.n	8002ce4 <__NVIC_EnableIRQ+0x28>
 8002cd0:	1dfb      	adds	r3, r7, #7
 8002cd2:	781b      	ldrb	r3, [r3, #0]
 8002cd4:	001a      	movs	r2, r3
 8002cd6:	231f      	movs	r3, #31
 8002cd8:	401a      	ands	r2, r3
 8002cda:	4b04      	ldr	r3, [pc, #16]	@ (8002cec <__NVIC_EnableIRQ+0x30>)
 8002cdc:	2101      	movs	r1, #1
 8002cde:	4091      	lsls	r1, r2
 8002ce0:	000a      	movs	r2, r1
 8002ce2:	601a      	str	r2, [r3, #0]
 8002ce4:	46c0      	nop			@ (mov r8, r8)
 8002ce6:	46bd      	mov	sp, r7
 8002ce8:	b002      	add	sp, #8
 8002cea:	bd80      	pop	{r7, pc}
 8002cec:	e000e100 	.word	0xe000e100

08002cf0 <__NVIC_SetPriority>:
 8002cf0:	b590      	push	{r4, r7, lr}
 8002cf2:	b083      	sub	sp, #12
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	0002      	movs	r2, r0
 8002cf8:	6039      	str	r1, [r7, #0]
 8002cfa:	1dfb      	adds	r3, r7, #7
 8002cfc:	701a      	strb	r2, [r3, #0]
 8002cfe:	1dfb      	adds	r3, r7, #7
 8002d00:	781b      	ldrb	r3, [r3, #0]
 8002d02:	2b7f      	cmp	r3, #127	@ 0x7f
 8002d04:	d828      	bhi.n	8002d58 <__NVIC_SetPriority+0x68>
 8002d06:	4a2f      	ldr	r2, [pc, #188]	@ (8002dc4 <__NVIC_SetPriority+0xd4>)
 8002d08:	1dfb      	adds	r3, r7, #7
 8002d0a:	781b      	ldrb	r3, [r3, #0]
 8002d0c:	b25b      	sxtb	r3, r3
 8002d0e:	089b      	lsrs	r3, r3, #2
 8002d10:	33c0      	adds	r3, #192	@ 0xc0
 8002d12:	009b      	lsls	r3, r3, #2
 8002d14:	589b      	ldr	r3, [r3, r2]
 8002d16:	1dfa      	adds	r2, r7, #7
 8002d18:	7812      	ldrb	r2, [r2, #0]
 8002d1a:	0011      	movs	r1, r2
 8002d1c:	2203      	movs	r2, #3
 8002d1e:	400a      	ands	r2, r1
 8002d20:	00d2      	lsls	r2, r2, #3
 8002d22:	21ff      	movs	r1, #255	@ 0xff
 8002d24:	4091      	lsls	r1, r2
 8002d26:	000a      	movs	r2, r1
 8002d28:	43d2      	mvns	r2, r2
 8002d2a:	401a      	ands	r2, r3
 8002d2c:	0011      	movs	r1, r2
 8002d2e:	683b      	ldr	r3, [r7, #0]
 8002d30:	019b      	lsls	r3, r3, #6
 8002d32:	22ff      	movs	r2, #255	@ 0xff
 8002d34:	401a      	ands	r2, r3
 8002d36:	1dfb      	adds	r3, r7, #7
 8002d38:	781b      	ldrb	r3, [r3, #0]
 8002d3a:	0018      	movs	r0, r3
 8002d3c:	2303      	movs	r3, #3
 8002d3e:	4003      	ands	r3, r0
 8002d40:	00db      	lsls	r3, r3, #3
 8002d42:	409a      	lsls	r2, r3
 8002d44:	481f      	ldr	r0, [pc, #124]	@ (8002dc4 <__NVIC_SetPriority+0xd4>)
 8002d46:	1dfb      	adds	r3, r7, #7
 8002d48:	781b      	ldrb	r3, [r3, #0]
 8002d4a:	b25b      	sxtb	r3, r3
 8002d4c:	089b      	lsrs	r3, r3, #2
 8002d4e:	430a      	orrs	r2, r1
 8002d50:	33c0      	adds	r3, #192	@ 0xc0
 8002d52:	009b      	lsls	r3, r3, #2
 8002d54:	501a      	str	r2, [r3, r0]
 8002d56:	e031      	b.n	8002dbc <__NVIC_SetPriority+0xcc>
 8002d58:	4a1b      	ldr	r2, [pc, #108]	@ (8002dc8 <__NVIC_SetPriority+0xd8>)
 8002d5a:	1dfb      	adds	r3, r7, #7
 8002d5c:	781b      	ldrb	r3, [r3, #0]
 8002d5e:	0019      	movs	r1, r3
 8002d60:	230f      	movs	r3, #15
 8002d62:	400b      	ands	r3, r1
 8002d64:	3b08      	subs	r3, #8
 8002d66:	089b      	lsrs	r3, r3, #2
 8002d68:	3306      	adds	r3, #6
 8002d6a:	009b      	lsls	r3, r3, #2
 8002d6c:	18d3      	adds	r3, r2, r3
 8002d6e:	3304      	adds	r3, #4
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	1dfa      	adds	r2, r7, #7
 8002d74:	7812      	ldrb	r2, [r2, #0]
 8002d76:	0011      	movs	r1, r2
 8002d78:	2203      	movs	r2, #3
 8002d7a:	400a      	ands	r2, r1
 8002d7c:	00d2      	lsls	r2, r2, #3
 8002d7e:	21ff      	movs	r1, #255	@ 0xff
 8002d80:	4091      	lsls	r1, r2
 8002d82:	000a      	movs	r2, r1
 8002d84:	43d2      	mvns	r2, r2
 8002d86:	401a      	ands	r2, r3
 8002d88:	0011      	movs	r1, r2
 8002d8a:	683b      	ldr	r3, [r7, #0]
 8002d8c:	019b      	lsls	r3, r3, #6
 8002d8e:	22ff      	movs	r2, #255	@ 0xff
 8002d90:	401a      	ands	r2, r3
 8002d92:	1dfb      	adds	r3, r7, #7
 8002d94:	781b      	ldrb	r3, [r3, #0]
 8002d96:	0018      	movs	r0, r3
 8002d98:	2303      	movs	r3, #3
 8002d9a:	4003      	ands	r3, r0
 8002d9c:	00db      	lsls	r3, r3, #3
 8002d9e:	409a      	lsls	r2, r3
 8002da0:	4809      	ldr	r0, [pc, #36]	@ (8002dc8 <__NVIC_SetPriority+0xd8>)
 8002da2:	1dfb      	adds	r3, r7, #7
 8002da4:	781b      	ldrb	r3, [r3, #0]
 8002da6:	001c      	movs	r4, r3
 8002da8:	230f      	movs	r3, #15
 8002daa:	4023      	ands	r3, r4
 8002dac:	3b08      	subs	r3, #8
 8002dae:	089b      	lsrs	r3, r3, #2
 8002db0:	430a      	orrs	r2, r1
 8002db2:	3306      	adds	r3, #6
 8002db4:	009b      	lsls	r3, r3, #2
 8002db6:	18c3      	adds	r3, r0, r3
 8002db8:	3304      	adds	r3, #4
 8002dba:	601a      	str	r2, [r3, #0]
 8002dbc:	46c0      	nop			@ (mov r8, r8)
 8002dbe:	46bd      	mov	sp, r7
 8002dc0:	b003      	add	sp, #12
 8002dc2:	bd90      	pop	{r4, r7, pc}
 8002dc4:	e000e100 	.word	0xe000e100
 8002dc8:	e000ed00 	.word	0xe000ed00

08002dcc <SysTick_Config>:
 8002dcc:	b580      	push	{r7, lr}
 8002dce:	b082      	sub	sp, #8
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	6078      	str	r0, [r7, #4]
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	1e5a      	subs	r2, r3, #1
 8002dd8:	2380      	movs	r3, #128	@ 0x80
 8002dda:	045b      	lsls	r3, r3, #17
 8002ddc:	429a      	cmp	r2, r3
 8002dde:	d301      	bcc.n	8002de4 <SysTick_Config+0x18>
 8002de0:	2301      	movs	r3, #1
 8002de2:	e010      	b.n	8002e06 <SysTick_Config+0x3a>
 8002de4:	4b0a      	ldr	r3, [pc, #40]	@ (8002e10 <SysTick_Config+0x44>)
 8002de6:	687a      	ldr	r2, [r7, #4]
 8002de8:	3a01      	subs	r2, #1
 8002dea:	605a      	str	r2, [r3, #4]
 8002dec:	2301      	movs	r3, #1
 8002dee:	425b      	negs	r3, r3
 8002df0:	2103      	movs	r1, #3
 8002df2:	0018      	movs	r0, r3
 8002df4:	f7ff ff7c 	bl	8002cf0 <__NVIC_SetPriority>
 8002df8:	4b05      	ldr	r3, [pc, #20]	@ (8002e10 <SysTick_Config+0x44>)
 8002dfa:	2200      	movs	r2, #0
 8002dfc:	609a      	str	r2, [r3, #8]
 8002dfe:	4b04      	ldr	r3, [pc, #16]	@ (8002e10 <SysTick_Config+0x44>)
 8002e00:	2207      	movs	r2, #7
 8002e02:	601a      	str	r2, [r3, #0]
 8002e04:	2300      	movs	r3, #0
 8002e06:	0018      	movs	r0, r3
 8002e08:	46bd      	mov	sp, r7
 8002e0a:	b002      	add	sp, #8
 8002e0c:	bd80      	pop	{r7, pc}
 8002e0e:	46c0      	nop			@ (mov r8, r8)
 8002e10:	e000e010 	.word	0xe000e010

08002e14 <HAL_NVIC_SetPriority>:
 8002e14:	b580      	push	{r7, lr}
 8002e16:	b084      	sub	sp, #16
 8002e18:	af00      	add	r7, sp, #0
 8002e1a:	60b9      	str	r1, [r7, #8]
 8002e1c:	607a      	str	r2, [r7, #4]
 8002e1e:	210f      	movs	r1, #15
 8002e20:	187b      	adds	r3, r7, r1
 8002e22:	1c02      	adds	r2, r0, #0
 8002e24:	701a      	strb	r2, [r3, #0]
 8002e26:	68ba      	ldr	r2, [r7, #8]
 8002e28:	187b      	adds	r3, r7, r1
 8002e2a:	781b      	ldrb	r3, [r3, #0]
 8002e2c:	b25b      	sxtb	r3, r3
 8002e2e:	0011      	movs	r1, r2
 8002e30:	0018      	movs	r0, r3
 8002e32:	f7ff ff5d 	bl	8002cf0 <__NVIC_SetPriority>
 8002e36:	46c0      	nop			@ (mov r8, r8)
 8002e38:	46bd      	mov	sp, r7
 8002e3a:	b004      	add	sp, #16
 8002e3c:	bd80      	pop	{r7, pc}

08002e3e <HAL_NVIC_EnableIRQ>:
 8002e3e:	b580      	push	{r7, lr}
 8002e40:	b082      	sub	sp, #8
 8002e42:	af00      	add	r7, sp, #0
 8002e44:	0002      	movs	r2, r0
 8002e46:	1dfb      	adds	r3, r7, #7
 8002e48:	701a      	strb	r2, [r3, #0]
 8002e4a:	1dfb      	adds	r3, r7, #7
 8002e4c:	781b      	ldrb	r3, [r3, #0]
 8002e4e:	b25b      	sxtb	r3, r3
 8002e50:	0018      	movs	r0, r3
 8002e52:	f7ff ff33 	bl	8002cbc <__NVIC_EnableIRQ>
 8002e56:	46c0      	nop			@ (mov r8, r8)
 8002e58:	46bd      	mov	sp, r7
 8002e5a:	b002      	add	sp, #8
 8002e5c:	bd80      	pop	{r7, pc}

08002e5e <HAL_SYSTICK_Config>:
 8002e5e:	b580      	push	{r7, lr}
 8002e60:	b082      	sub	sp, #8
 8002e62:	af00      	add	r7, sp, #0
 8002e64:	6078      	str	r0, [r7, #4]
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	0018      	movs	r0, r3
 8002e6a:	f7ff ffaf 	bl	8002dcc <SysTick_Config>
 8002e6e:	0003      	movs	r3, r0
 8002e70:	0018      	movs	r0, r3
 8002e72:	46bd      	mov	sp, r7
 8002e74:	b002      	add	sp, #8
 8002e76:	bd80      	pop	{r7, pc}

08002e78 <HAL_DMA_Abort>:
 8002e78:	b580      	push	{r7, lr}
 8002e7a:	b082      	sub	sp, #8
 8002e7c:	af00      	add	r7, sp, #0
 8002e7e:	6078      	str	r0, [r7, #4]
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	d101      	bne.n	8002e8a <HAL_DMA_Abort+0x12>
 8002e86:	2301      	movs	r3, #1
 8002e88:	e04f      	b.n	8002f2a <HAL_DMA_Abort+0xb2>
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	2225      	movs	r2, #37	@ 0x25
 8002e8e:	5c9b      	ldrb	r3, [r3, r2]
 8002e90:	b2db      	uxtb	r3, r3
 8002e92:	2b02      	cmp	r3, #2
 8002e94:	d008      	beq.n	8002ea8 <HAL_DMA_Abort+0x30>
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	2204      	movs	r2, #4
 8002e9a:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	2224      	movs	r2, #36	@ 0x24
 8002ea0:	2100      	movs	r1, #0
 8002ea2:	5499      	strb	r1, [r3, r2]
 8002ea4:	2301      	movs	r3, #1
 8002ea6:	e040      	b.n	8002f2a <HAL_DMA_Abort+0xb2>
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	681a      	ldr	r2, [r3, #0]
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	210e      	movs	r1, #14
 8002eb4:	438a      	bics	r2, r1
 8002eb6:	601a      	str	r2, [r3, #0]
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002ebc:	681a      	ldr	r2, [r3, #0]
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002ec2:	491c      	ldr	r1, [pc, #112]	@ (8002f34 <HAL_DMA_Abort+0xbc>)
 8002ec4:	400a      	ands	r2, r1
 8002ec6:	601a      	str	r2, [r3, #0]
 8002ec8:	687b      	ldr	r3, [r7, #4]
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	681a      	ldr	r2, [r3, #0]
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	2101      	movs	r1, #1
 8002ed4:	438a      	bics	r2, r1
 8002ed6:	601a      	str	r2, [r3, #0]
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002edc:	221c      	movs	r2, #28
 8002ede:	401a      	ands	r2, r3
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ee4:	2101      	movs	r1, #1
 8002ee6:	4091      	lsls	r1, r2
 8002ee8:	000a      	movs	r2, r1
 8002eea:	605a      	str	r2, [r3, #4]
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002ef0:	687a      	ldr	r2, [r7, #4]
 8002ef2:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8002ef4:	605a      	str	r2, [r3, #4]
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002efa:	2b00      	cmp	r3, #0
 8002efc:	d00c      	beq.n	8002f18 <HAL_DMA_Abort+0xa0>
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002f02:	681a      	ldr	r2, [r3, #0]
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002f08:	490a      	ldr	r1, [pc, #40]	@ (8002f34 <HAL_DMA_Abort+0xbc>)
 8002f0a:	400a      	ands	r2, r1
 8002f0c:	601a      	str	r2, [r3, #0]
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002f12:	687a      	ldr	r2, [r7, #4]
 8002f14:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8002f16:	605a      	str	r2, [r3, #4]
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	2225      	movs	r2, #37	@ 0x25
 8002f1c:	2101      	movs	r1, #1
 8002f1e:	5499      	strb	r1, [r3, r2]
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	2224      	movs	r2, #36	@ 0x24
 8002f24:	2100      	movs	r1, #0
 8002f26:	5499      	strb	r1, [r3, r2]
 8002f28:	2300      	movs	r3, #0
 8002f2a:	0018      	movs	r0, r3
 8002f2c:	46bd      	mov	sp, r7
 8002f2e:	b002      	add	sp, #8
 8002f30:	bd80      	pop	{r7, pc}
 8002f32:	46c0      	nop			@ (mov r8, r8)
 8002f34:	fffffeff 	.word	0xfffffeff

08002f38 <HAL_DMA_Abort_IT>:
 8002f38:	b580      	push	{r7, lr}
 8002f3a:	b084      	sub	sp, #16
 8002f3c:	af00      	add	r7, sp, #0
 8002f3e:	6078      	str	r0, [r7, #4]
 8002f40:	210f      	movs	r1, #15
 8002f42:	187b      	adds	r3, r7, r1
 8002f44:	2200      	movs	r2, #0
 8002f46:	701a      	strb	r2, [r3, #0]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	2225      	movs	r2, #37	@ 0x25
 8002f4c:	5c9b      	ldrb	r3, [r3, r2]
 8002f4e:	b2db      	uxtb	r3, r3
 8002f50:	2b02      	cmp	r3, #2
 8002f52:	d006      	beq.n	8002f62 <HAL_DMA_Abort_IT+0x2a>
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	2204      	movs	r2, #4
 8002f58:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002f5a:	187b      	adds	r3, r7, r1
 8002f5c:	2201      	movs	r2, #1
 8002f5e:	701a      	strb	r2, [r3, #0]
 8002f60:	e048      	b.n	8002ff4 <HAL_DMA_Abort_IT+0xbc>
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	681a      	ldr	r2, [r3, #0]
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	210e      	movs	r1, #14
 8002f6e:	438a      	bics	r2, r1
 8002f70:	601a      	str	r2, [r3, #0]
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	681a      	ldr	r2, [r3, #0]
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	2101      	movs	r1, #1
 8002f7e:	438a      	bics	r2, r1
 8002f80:	601a      	str	r2, [r3, #0]
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002f86:	681a      	ldr	r2, [r3, #0]
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002f8c:	491d      	ldr	r1, [pc, #116]	@ (8003004 <HAL_DMA_Abort_IT+0xcc>)
 8002f8e:	400a      	ands	r2, r1
 8002f90:	601a      	str	r2, [r3, #0]
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f96:	221c      	movs	r2, #28
 8002f98:	401a      	ands	r2, r3
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f9e:	2101      	movs	r1, #1
 8002fa0:	4091      	lsls	r1, r2
 8002fa2:	000a      	movs	r2, r1
 8002fa4:	605a      	str	r2, [r3, #4]
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002faa:	687a      	ldr	r2, [r7, #4]
 8002fac:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8002fae:	605a      	str	r2, [r3, #4]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	d00c      	beq.n	8002fd2 <HAL_DMA_Abort_IT+0x9a>
 8002fb8:	687b      	ldr	r3, [r7, #4]
 8002fba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002fbc:	681a      	ldr	r2, [r3, #0]
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002fc2:	4910      	ldr	r1, [pc, #64]	@ (8003004 <HAL_DMA_Abort_IT+0xcc>)
 8002fc4:	400a      	ands	r2, r1
 8002fc6:	601a      	str	r2, [r3, #0]
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002fcc:	687a      	ldr	r2, [r7, #4]
 8002fce:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8002fd0:	605a      	str	r2, [r3, #4]
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	2225      	movs	r2, #37	@ 0x25
 8002fd6:	2101      	movs	r1, #1
 8002fd8:	5499      	strb	r1, [r3, r2]
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	2224      	movs	r2, #36	@ 0x24
 8002fde:	2100      	movs	r1, #0
 8002fe0:	5499      	strb	r1, [r3, r2]
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002fe6:	2b00      	cmp	r3, #0
 8002fe8:	d004      	beq.n	8002ff4 <HAL_DMA_Abort_IT+0xbc>
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002fee:	687a      	ldr	r2, [r7, #4]
 8002ff0:	0010      	movs	r0, r2
 8002ff2:	4798      	blx	r3
 8002ff4:	230f      	movs	r3, #15
 8002ff6:	18fb      	adds	r3, r7, r3
 8002ff8:	781b      	ldrb	r3, [r3, #0]
 8002ffa:	0018      	movs	r0, r3
 8002ffc:	46bd      	mov	sp, r7
 8002ffe:	b004      	add	sp, #16
 8003000:	bd80      	pop	{r7, pc}
 8003002:	46c0      	nop			@ (mov r8, r8)
 8003004:	fffffeff 	.word	0xfffffeff

08003008 <HAL_FDCAN_Init>:
 8003008:	b580      	push	{r7, lr}
 800300a:	b084      	sub	sp, #16
 800300c:	af00      	add	r7, sp, #0
 800300e:	6078      	str	r0, [r7, #4]
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	2b00      	cmp	r3, #0
 8003014:	d101      	bne.n	800301a <HAL_FDCAN_Init+0x12>
 8003016:	2301      	movs	r3, #1
 8003018:	e14e      	b.n	80032b8 <HAL_FDCAN_Init+0x2b0>
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	225c      	movs	r2, #92	@ 0x5c
 800301e:	5c9b      	ldrb	r3, [r3, r2]
 8003020:	b2db      	uxtb	r3, r3
 8003022:	2b00      	cmp	r3, #0
 8003024:	d107      	bne.n	8003036 <HAL_FDCAN_Init+0x2e>
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	225d      	movs	r2, #93	@ 0x5d
 800302a:	2100      	movs	r1, #0
 800302c:	5499      	strb	r1, [r3, r2]
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	0018      	movs	r0, r3
 8003032:	f7ff fbab 	bl	800278c <HAL_FDCAN_MspInit>
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	699a      	ldr	r2, [r3, #24]
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	681b      	ldr	r3, [r3, #0]
 8003040:	2110      	movs	r1, #16
 8003042:	438a      	bics	r2, r1
 8003044:	619a      	str	r2, [r3, #24]
 8003046:	f7ff fe19 	bl	8002c7c <HAL_GetTick>
 800304a:	0003      	movs	r3, r0
 800304c:	60fb      	str	r3, [r7, #12]
 800304e:	e012      	b.n	8003076 <HAL_FDCAN_Init+0x6e>
 8003050:	f7ff fe14 	bl	8002c7c <HAL_GetTick>
 8003054:	0002      	movs	r2, r0
 8003056:	68fb      	ldr	r3, [r7, #12]
 8003058:	1ad3      	subs	r3, r2, r3
 800305a:	2b0a      	cmp	r3, #10
 800305c:	d90b      	bls.n	8003076 <HAL_FDCAN_Init+0x6e>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003062:	2201      	movs	r2, #1
 8003064:	431a      	orrs	r2, r3
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	661a      	str	r2, [r3, #96]	@ 0x60
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	225c      	movs	r2, #92	@ 0x5c
 800306e:	2103      	movs	r1, #3
 8003070:	5499      	strb	r1, [r3, r2]
 8003072:	2301      	movs	r3, #1
 8003074:	e120      	b.n	80032b8 <HAL_FDCAN_Init+0x2b0>
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	699b      	ldr	r3, [r3, #24]
 800307c:	2208      	movs	r2, #8
 800307e:	4013      	ands	r3, r2
 8003080:	2b08      	cmp	r3, #8
 8003082:	d0e5      	beq.n	8003050 <HAL_FDCAN_Init+0x48>
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	699a      	ldr	r2, [r3, #24]
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	681b      	ldr	r3, [r3, #0]
 800308e:	2101      	movs	r1, #1
 8003090:	430a      	orrs	r2, r1
 8003092:	619a      	str	r2, [r3, #24]
 8003094:	f7ff fdf2 	bl	8002c7c <HAL_GetTick>
 8003098:	0003      	movs	r3, r0
 800309a:	60fb      	str	r3, [r7, #12]
 800309c:	e012      	b.n	80030c4 <HAL_FDCAN_Init+0xbc>
 800309e:	f7ff fded 	bl	8002c7c <HAL_GetTick>
 80030a2:	0002      	movs	r2, r0
 80030a4:	68fb      	ldr	r3, [r7, #12]
 80030a6:	1ad3      	subs	r3, r2, r3
 80030a8:	2b0a      	cmp	r3, #10
 80030aa:	d90b      	bls.n	80030c4 <HAL_FDCAN_Init+0xbc>
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80030b0:	2201      	movs	r2, #1
 80030b2:	431a      	orrs	r2, r3
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	661a      	str	r2, [r3, #96]	@ 0x60
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	225c      	movs	r2, #92	@ 0x5c
 80030bc:	2103      	movs	r1, #3
 80030be:	5499      	strb	r1, [r3, r2]
 80030c0:	2301      	movs	r3, #1
 80030c2:	e0f9      	b.n	80032b8 <HAL_FDCAN_Init+0x2b0>
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	699b      	ldr	r3, [r3, #24]
 80030ca:	2201      	movs	r2, #1
 80030cc:	4013      	ands	r3, r2
 80030ce:	d0e6      	beq.n	800309e <HAL_FDCAN_Init+0x96>
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	699a      	ldr	r2, [r3, #24]
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	2102      	movs	r1, #2
 80030dc:	430a      	orrs	r2, r1
 80030de:	619a      	str	r2, [r3, #24]
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	4a76      	ldr	r2, [pc, #472]	@ (80032c0 <HAL_FDCAN_Init+0x2b8>)
 80030e6:	4293      	cmp	r3, r2
 80030e8:	d103      	bne.n	80030f2 <HAL_FDCAN_Init+0xea>
 80030ea:	4a76      	ldr	r2, [pc, #472]	@ (80032c4 <HAL_FDCAN_Init+0x2bc>)
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	685b      	ldr	r3, [r3, #4]
 80030f0:	6013      	str	r3, [r2, #0]
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	7c1b      	ldrb	r3, [r3, #16]
 80030f6:	2b01      	cmp	r3, #1
 80030f8:	d108      	bne.n	800310c <HAL_FDCAN_Init+0x104>
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	681b      	ldr	r3, [r3, #0]
 80030fe:	699a      	ldr	r2, [r3, #24]
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	2140      	movs	r1, #64	@ 0x40
 8003106:	438a      	bics	r2, r1
 8003108:	619a      	str	r2, [r3, #24]
 800310a:	e007      	b.n	800311c <HAL_FDCAN_Init+0x114>
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	699a      	ldr	r2, [r3, #24]
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	2140      	movs	r1, #64	@ 0x40
 8003118:	430a      	orrs	r2, r1
 800311a:	619a      	str	r2, [r3, #24]
 800311c:	687b      	ldr	r3, [r7, #4]
 800311e:	7c5b      	ldrb	r3, [r3, #17]
 8003120:	2b01      	cmp	r3, #1
 8003122:	d109      	bne.n	8003138 <HAL_FDCAN_Init+0x130>
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	699a      	ldr	r2, [r3, #24]
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	681b      	ldr	r3, [r3, #0]
 800312e:	2180      	movs	r1, #128	@ 0x80
 8003130:	01c9      	lsls	r1, r1, #7
 8003132:	430a      	orrs	r2, r1
 8003134:	619a      	str	r2, [r3, #24]
 8003136:	e007      	b.n	8003148 <HAL_FDCAN_Init+0x140>
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	699a      	ldr	r2, [r3, #24]
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	4961      	ldr	r1, [pc, #388]	@ (80032c8 <HAL_FDCAN_Init+0x2c0>)
 8003144:	400a      	ands	r2, r1
 8003146:	619a      	str	r2, [r3, #24]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	7c9b      	ldrb	r3, [r3, #18]
 800314c:	2b01      	cmp	r3, #1
 800314e:	d108      	bne.n	8003162 <HAL_FDCAN_Init+0x15a>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	699a      	ldr	r2, [r3, #24]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	495c      	ldr	r1, [pc, #368]	@ (80032cc <HAL_FDCAN_Init+0x2c4>)
 800315c:	400a      	ands	r2, r1
 800315e:	619a      	str	r2, [r3, #24]
 8003160:	e008      	b.n	8003174 <HAL_FDCAN_Init+0x16c>
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	699a      	ldr	r2, [r3, #24]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	2180      	movs	r1, #128	@ 0x80
 800316e:	0149      	lsls	r1, r1, #5
 8003170:	430a      	orrs	r2, r1
 8003172:	619a      	str	r2, [r3, #24]
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	699b      	ldr	r3, [r3, #24]
 800317a:	4a55      	ldr	r2, [pc, #340]	@ (80032d0 <HAL_FDCAN_Init+0x2c8>)
 800317c:	4013      	ands	r3, r2
 800317e:	0019      	movs	r1, r3
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	689a      	ldr	r2, [r3, #8]
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	430a      	orrs	r2, r1
 800318a:	619a      	str	r2, [r3, #24]
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	699a      	ldr	r2, [r3, #24]
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	21a4      	movs	r1, #164	@ 0xa4
 8003198:	438a      	bics	r2, r1
 800319a:	619a      	str	r2, [r3, #24]
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	691a      	ldr	r2, [r3, #16]
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	2110      	movs	r1, #16
 80031a8:	438a      	bics	r2, r1
 80031aa:	611a      	str	r2, [r3, #16]
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	68db      	ldr	r3, [r3, #12]
 80031b0:	2b01      	cmp	r3, #1
 80031b2:	d108      	bne.n	80031c6 <HAL_FDCAN_Init+0x1be>
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	699a      	ldr	r2, [r3, #24]
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	2104      	movs	r1, #4
 80031c0:	430a      	orrs	r2, r1
 80031c2:	619a      	str	r2, [r3, #24]
 80031c4:	e02c      	b.n	8003220 <HAL_FDCAN_Init+0x218>
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	68db      	ldr	r3, [r3, #12]
 80031ca:	2b00      	cmp	r3, #0
 80031cc:	d028      	beq.n	8003220 <HAL_FDCAN_Init+0x218>
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	68db      	ldr	r3, [r3, #12]
 80031d2:	2b02      	cmp	r3, #2
 80031d4:	d01c      	beq.n	8003210 <HAL_FDCAN_Init+0x208>
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	699a      	ldr	r2, [r3, #24]
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	681b      	ldr	r3, [r3, #0]
 80031e0:	2180      	movs	r1, #128	@ 0x80
 80031e2:	430a      	orrs	r2, r1
 80031e4:	619a      	str	r2, [r3, #24]
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	691a      	ldr	r2, [r3, #16]
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	2110      	movs	r1, #16
 80031f2:	430a      	orrs	r2, r1
 80031f4:	611a      	str	r2, [r3, #16]
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	68db      	ldr	r3, [r3, #12]
 80031fa:	2b03      	cmp	r3, #3
 80031fc:	d110      	bne.n	8003220 <HAL_FDCAN_Init+0x218>
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	699a      	ldr	r2, [r3, #24]
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	2120      	movs	r1, #32
 800320a:	430a      	orrs	r2, r1
 800320c:	619a      	str	r2, [r3, #24]
 800320e:	e007      	b.n	8003220 <HAL_FDCAN_Init+0x218>
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	699a      	ldr	r2, [r3, #24]
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	2120      	movs	r1, #32
 800321c:	430a      	orrs	r2, r1
 800321e:	619a      	str	r2, [r3, #24]
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	699b      	ldr	r3, [r3, #24]
 8003224:	3b01      	subs	r3, #1
 8003226:	065a      	lsls	r2, r3, #25
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	69db      	ldr	r3, [r3, #28]
 800322c:	3b01      	subs	r3, #1
 800322e:	021b      	lsls	r3, r3, #8
 8003230:	431a      	orrs	r2, r3
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	6a1b      	ldr	r3, [r3, #32]
 8003236:	3b01      	subs	r3, #1
 8003238:	431a      	orrs	r2, r3
 800323a:	0011      	movs	r1, r2
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	695b      	ldr	r3, [r3, #20]
 8003240:	3b01      	subs	r3, #1
 8003242:	041a      	lsls	r2, r3, #16
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	430a      	orrs	r2, r1
 800324a:	61da      	str	r2, [r3, #28]
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	689a      	ldr	r2, [r3, #8]
 8003250:	23c0      	movs	r3, #192	@ 0xc0
 8003252:	009b      	lsls	r3, r3, #2
 8003254:	429a      	cmp	r2, r3
 8003256:	d115      	bne.n	8003284 <HAL_FDCAN_Init+0x27c>
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800325c:	1e5a      	subs	r2, r3, #1
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003262:	3b01      	subs	r3, #1
 8003264:	021b      	lsls	r3, r3, #8
 8003266:	431a      	orrs	r2, r3
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800326c:	3b01      	subs	r3, #1
 800326e:	011b      	lsls	r3, r3, #4
 8003270:	431a      	orrs	r2, r3
 8003272:	0011      	movs	r1, r2
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003278:	3b01      	subs	r3, #1
 800327a:	041a      	lsls	r2, r3, #16
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	430a      	orrs	r2, r1
 8003282:	60da      	str	r2, [r3, #12]
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	22c0      	movs	r2, #192	@ 0xc0
 800328a:	5899      	ldr	r1, [r3, r2]
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	430a      	orrs	r2, r1
 8003296:	21c0      	movs	r1, #192	@ 0xc0
 8003298:	505a      	str	r2, [r3, r1]
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	0018      	movs	r0, r3
 800329e:	f000 fbf3 	bl	8003a88 <FDCAN_CalcultateRamBlockAddresses>
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	2200      	movs	r2, #0
 80032a6:	659a      	str	r2, [r3, #88]	@ 0x58
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	2200      	movs	r2, #0
 80032ac:	661a      	str	r2, [r3, #96]	@ 0x60
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	225c      	movs	r2, #92	@ 0x5c
 80032b2:	2101      	movs	r1, #1
 80032b4:	5499      	strb	r1, [r3, r2]
 80032b6:	2300      	movs	r3, #0
 80032b8:	0018      	movs	r0, r3
 80032ba:	46bd      	mov	sp, r7
 80032bc:	b004      	add	sp, #16
 80032be:	bd80      	pop	{r7, pc}
 80032c0:	40006400 	.word	0x40006400
 80032c4:	40006500 	.word	0x40006500
 80032c8:	ffffbfff 	.word	0xffffbfff
 80032cc:	ffffefff 	.word	0xffffefff
 80032d0:	fffffcff 	.word	0xfffffcff

080032d4 <HAL_FDCAN_Start>:
 80032d4:	b580      	push	{r7, lr}
 80032d6:	b082      	sub	sp, #8
 80032d8:	af00      	add	r7, sp, #0
 80032da:	6078      	str	r0, [r7, #4]
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	225c      	movs	r2, #92	@ 0x5c
 80032e0:	5c9b      	ldrb	r3, [r3, r2]
 80032e2:	b2db      	uxtb	r3, r3
 80032e4:	2b01      	cmp	r3, #1
 80032e6:	d110      	bne.n	800330a <HAL_FDCAN_Start+0x36>
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	225c      	movs	r2, #92	@ 0x5c
 80032ec:	2102      	movs	r1, #2
 80032ee:	5499      	strb	r1, [r3, r2]
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	699a      	ldr	r2, [r3, #24]
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	2101      	movs	r1, #1
 80032fc:	438a      	bics	r2, r1
 80032fe:	619a      	str	r2, [r3, #24]
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	2200      	movs	r2, #0
 8003304:	661a      	str	r2, [r3, #96]	@ 0x60
 8003306:	2300      	movs	r3, #0
 8003308:	e006      	b.n	8003318 <HAL_FDCAN_Start+0x44>
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800330e:	2204      	movs	r2, #4
 8003310:	431a      	orrs	r2, r3
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	661a      	str	r2, [r3, #96]	@ 0x60
 8003316:	2301      	movs	r3, #1
 8003318:	0018      	movs	r0, r3
 800331a:	46bd      	mov	sp, r7
 800331c:	b002      	add	sp, #8
 800331e:	bd80      	pop	{r7, pc}

08003320 <HAL_FDCAN_AddMessageToTxFifoQ>:
 8003320:	b580      	push	{r7, lr}
 8003322:	b086      	sub	sp, #24
 8003324:	af00      	add	r7, sp, #0
 8003326:	60f8      	str	r0, [r7, #12]
 8003328:	60b9      	str	r1, [r7, #8]
 800332a:	607a      	str	r2, [r7, #4]
 800332c:	68fb      	ldr	r3, [r7, #12]
 800332e:	225c      	movs	r2, #92	@ 0x5c
 8003330:	5c9b      	ldrb	r3, [r3, r2]
 8003332:	b2db      	uxtb	r3, r3
 8003334:	2b02      	cmp	r3, #2
 8003336:	d12d      	bne.n	8003394 <HAL_FDCAN_AddMessageToTxFifoQ+0x74>
 8003338:	68fb      	ldr	r3, [r7, #12]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	22c4      	movs	r2, #196	@ 0xc4
 800333e:	589a      	ldr	r2, [r3, r2]
 8003340:	2380      	movs	r3, #128	@ 0x80
 8003342:	039b      	lsls	r3, r3, #14
 8003344:	4013      	ands	r3, r2
 8003346:	d008      	beq.n	800335a <HAL_FDCAN_AddMessageToTxFifoQ+0x3a>
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800334c:	2280      	movs	r2, #128	@ 0x80
 800334e:	0092      	lsls	r2, r2, #2
 8003350:	431a      	orrs	r2, r3
 8003352:	68fb      	ldr	r3, [r7, #12]
 8003354:	661a      	str	r2, [r3, #96]	@ 0x60
 8003356:	2301      	movs	r3, #1
 8003358:	e023      	b.n	80033a2 <HAL_FDCAN_AddMessageToTxFifoQ+0x82>
 800335a:	68fb      	ldr	r3, [r7, #12]
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	22c4      	movs	r2, #196	@ 0xc4
 8003360:	589b      	ldr	r3, [r3, r2]
 8003362:	0c1b      	lsrs	r3, r3, #16
 8003364:	2203      	movs	r2, #3
 8003366:	4013      	ands	r3, r2
 8003368:	617b      	str	r3, [r7, #20]
 800336a:	697b      	ldr	r3, [r7, #20]
 800336c:	687a      	ldr	r2, [r7, #4]
 800336e:	68b9      	ldr	r1, [r7, #8]
 8003370:	68f8      	ldr	r0, [r7, #12]
 8003372:	f000 fbf5 	bl	8003b60 <FDCAN_CopyMessageToRAM>
 8003376:	68fb      	ldr	r3, [r7, #12]
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	2101      	movs	r1, #1
 800337c:	697a      	ldr	r2, [r7, #20]
 800337e:	4091      	lsls	r1, r2
 8003380:	000a      	movs	r2, r1
 8003382:	21cc      	movs	r1, #204	@ 0xcc
 8003384:	505a      	str	r2, [r3, r1]
 8003386:	2201      	movs	r2, #1
 8003388:	697b      	ldr	r3, [r7, #20]
 800338a:	409a      	lsls	r2, r3
 800338c:	68fb      	ldr	r3, [r7, #12]
 800338e:	659a      	str	r2, [r3, #88]	@ 0x58
 8003390:	2300      	movs	r3, #0
 8003392:	e006      	b.n	80033a2 <HAL_FDCAN_AddMessageToTxFifoQ+0x82>
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003398:	2208      	movs	r2, #8
 800339a:	431a      	orrs	r2, r3
 800339c:	68fb      	ldr	r3, [r7, #12]
 800339e:	661a      	str	r2, [r3, #96]	@ 0x60
 80033a0:	2301      	movs	r3, #1
 80033a2:	0018      	movs	r0, r3
 80033a4:	46bd      	mov	sp, r7
 80033a6:	b006      	add	sp, #24
 80033a8:	bd80      	pop	{r7, pc}
	...

080033ac <HAL_FDCAN_GetRxMessage>:
 80033ac:	b580      	push	{r7, lr}
 80033ae:	b08a      	sub	sp, #40	@ 0x28
 80033b0:	af00      	add	r7, sp, #0
 80033b2:	60f8      	str	r0, [r7, #12]
 80033b4:	60b9      	str	r1, [r7, #8]
 80033b6:	607a      	str	r2, [r7, #4]
 80033b8:	603b      	str	r3, [r7, #0]
 80033ba:	2300      	movs	r3, #0
 80033bc:	61fb      	str	r3, [r7, #28]
 80033be:	201b      	movs	r0, #27
 80033c0:	183b      	adds	r3, r7, r0
 80033c2:	68fa      	ldr	r2, [r7, #12]
 80033c4:	215c      	movs	r1, #92	@ 0x5c
 80033c6:	5c52      	ldrb	r2, [r2, r1]
 80033c8:	701a      	strb	r2, [r3, #0]
 80033ca:	183b      	adds	r3, r7, r0
 80033cc:	781b      	ldrb	r3, [r3, #0]
 80033ce:	2b02      	cmp	r3, #2
 80033d0:	d000      	beq.n	80033d4 <HAL_FDCAN_GetRxMessage+0x28>
 80033d2:	e0ec      	b.n	80035ae <HAL_FDCAN_GetRxMessage+0x202>
 80033d4:	68bb      	ldr	r3, [r7, #8]
 80033d6:	2b40      	cmp	r3, #64	@ 0x40
 80033d8:	d137      	bne.n	800344a <HAL_FDCAN_GetRxMessage+0x9e>
 80033da:	68fb      	ldr	r3, [r7, #12]
 80033dc:	681b      	ldr	r3, [r3, #0]
 80033de:	2290      	movs	r2, #144	@ 0x90
 80033e0:	589b      	ldr	r3, [r3, r2]
 80033e2:	220f      	movs	r2, #15
 80033e4:	4013      	ands	r3, r2
 80033e6:	d108      	bne.n	80033fa <HAL_FDCAN_GetRxMessage+0x4e>
 80033e8:	68fb      	ldr	r3, [r7, #12]
 80033ea:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80033ec:	2280      	movs	r2, #128	@ 0x80
 80033ee:	0052      	lsls	r2, r2, #1
 80033f0:	431a      	orrs	r2, r3
 80033f2:	68fb      	ldr	r3, [r7, #12]
 80033f4:	661a      	str	r2, [r3, #96]	@ 0x60
 80033f6:	2301      	movs	r3, #1
 80033f8:	e0e0      	b.n	80035bc <HAL_FDCAN_GetRxMessage+0x210>
 80033fa:	68fb      	ldr	r3, [r7, #12]
 80033fc:	681b      	ldr	r3, [r3, #0]
 80033fe:	2290      	movs	r2, #144	@ 0x90
 8003400:	589b      	ldr	r3, [r3, r2]
 8003402:	0e1b      	lsrs	r3, r3, #24
 8003404:	2201      	movs	r2, #1
 8003406:	4013      	ands	r3, r2
 8003408:	2b01      	cmp	r3, #1
 800340a:	d10a      	bne.n	8003422 <HAL_FDCAN_GetRxMessage+0x76>
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	2280      	movs	r2, #128	@ 0x80
 8003412:	589b      	ldr	r3, [r3, r2]
 8003414:	0a5b      	lsrs	r3, r3, #9
 8003416:	2201      	movs	r2, #1
 8003418:	4013      	ands	r3, r2
 800341a:	2b01      	cmp	r3, #1
 800341c:	d101      	bne.n	8003422 <HAL_FDCAN_GetRxMessage+0x76>
 800341e:	2301      	movs	r3, #1
 8003420:	61fb      	str	r3, [r7, #28]
 8003422:	68fb      	ldr	r3, [r7, #12]
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	2290      	movs	r2, #144	@ 0x90
 8003428:	589b      	ldr	r3, [r3, r2]
 800342a:	0a1b      	lsrs	r3, r3, #8
 800342c:	2203      	movs	r2, #3
 800342e:	4013      	ands	r3, r2
 8003430:	69fa      	ldr	r2, [r7, #28]
 8003432:	18d3      	adds	r3, r2, r3
 8003434:	61fb      	str	r3, [r7, #28]
 8003436:	68fb      	ldr	r3, [r7, #12]
 8003438:	6c99      	ldr	r1, [r3, #72]	@ 0x48
 800343a:	69fa      	ldr	r2, [r7, #28]
 800343c:	0013      	movs	r3, r2
 800343e:	00db      	lsls	r3, r3, #3
 8003440:	189b      	adds	r3, r3, r2
 8003442:	00db      	lsls	r3, r3, #3
 8003444:	18cb      	adds	r3, r1, r3
 8003446:	627b      	str	r3, [r7, #36]	@ 0x24
 8003448:	e036      	b.n	80034b8 <HAL_FDCAN_GetRxMessage+0x10c>
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	2298      	movs	r2, #152	@ 0x98
 8003450:	589b      	ldr	r3, [r3, r2]
 8003452:	220f      	movs	r2, #15
 8003454:	4013      	ands	r3, r2
 8003456:	d108      	bne.n	800346a <HAL_FDCAN_GetRxMessage+0xbe>
 8003458:	68fb      	ldr	r3, [r7, #12]
 800345a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800345c:	2280      	movs	r2, #128	@ 0x80
 800345e:	0052      	lsls	r2, r2, #1
 8003460:	431a      	orrs	r2, r3
 8003462:	68fb      	ldr	r3, [r7, #12]
 8003464:	661a      	str	r2, [r3, #96]	@ 0x60
 8003466:	2301      	movs	r3, #1
 8003468:	e0a8      	b.n	80035bc <HAL_FDCAN_GetRxMessage+0x210>
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	2298      	movs	r2, #152	@ 0x98
 8003470:	589b      	ldr	r3, [r3, r2]
 8003472:	0e1b      	lsrs	r3, r3, #24
 8003474:	2201      	movs	r2, #1
 8003476:	4013      	ands	r3, r2
 8003478:	2b01      	cmp	r3, #1
 800347a:	d10a      	bne.n	8003492 <HAL_FDCAN_GetRxMessage+0xe6>
 800347c:	68fb      	ldr	r3, [r7, #12]
 800347e:	681b      	ldr	r3, [r3, #0]
 8003480:	2280      	movs	r2, #128	@ 0x80
 8003482:	589b      	ldr	r3, [r3, r2]
 8003484:	0a1b      	lsrs	r3, r3, #8
 8003486:	2201      	movs	r2, #1
 8003488:	4013      	ands	r3, r2
 800348a:	2b01      	cmp	r3, #1
 800348c:	d101      	bne.n	8003492 <HAL_FDCAN_GetRxMessage+0xe6>
 800348e:	2301      	movs	r3, #1
 8003490:	61fb      	str	r3, [r7, #28]
 8003492:	68fb      	ldr	r3, [r7, #12]
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	2298      	movs	r2, #152	@ 0x98
 8003498:	589b      	ldr	r3, [r3, r2]
 800349a:	0a1b      	lsrs	r3, r3, #8
 800349c:	2203      	movs	r2, #3
 800349e:	4013      	ands	r3, r2
 80034a0:	69fa      	ldr	r2, [r7, #28]
 80034a2:	18d3      	adds	r3, r2, r3
 80034a4:	61fb      	str	r3, [r7, #28]
 80034a6:	68fb      	ldr	r3, [r7, #12]
 80034a8:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 80034aa:	69fa      	ldr	r2, [r7, #28]
 80034ac:	0013      	movs	r3, r2
 80034ae:	00db      	lsls	r3, r3, #3
 80034b0:	189b      	adds	r3, r3, r2
 80034b2:	00db      	lsls	r3, r3, #3
 80034b4:	18cb      	adds	r3, r1, r3
 80034b6:	627b      	str	r3, [r7, #36]	@ 0x24
 80034b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034ba:	681a      	ldr	r2, [r3, #0]
 80034bc:	2380      	movs	r3, #128	@ 0x80
 80034be:	05db      	lsls	r3, r3, #23
 80034c0:	401a      	ands	r2, r3
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	605a      	str	r2, [r3, #4]
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	685b      	ldr	r3, [r3, #4]
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	d107      	bne.n	80034de <HAL_FDCAN_GetRxMessage+0x132>
 80034ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034d0:	681b      	ldr	r3, [r3, #0]
 80034d2:	0c9b      	lsrs	r3, r3, #18
 80034d4:	055b      	lsls	r3, r3, #21
 80034d6:	0d5a      	lsrs	r2, r3, #21
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	601a      	str	r2, [r3, #0]
 80034dc:	e005      	b.n	80034ea <HAL_FDCAN_GetRxMessage+0x13e>
 80034de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	00db      	lsls	r3, r3, #3
 80034e4:	08da      	lsrs	r2, r3, #3
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	601a      	str	r2, [r3, #0]
 80034ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034ec:	681a      	ldr	r2, [r3, #0]
 80034ee:	2380      	movs	r3, #128	@ 0x80
 80034f0:	059b      	lsls	r3, r3, #22
 80034f2:	401a      	ands	r2, r3
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	609a      	str	r2, [r3, #8]
 80034f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034fa:	681b      	ldr	r3, [r3, #0]
 80034fc:	0fdb      	lsrs	r3, r3, #31
 80034fe:	07da      	lsls	r2, r3, #31
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	611a      	str	r2, [r3, #16]
 8003504:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003506:	3304      	adds	r3, #4
 8003508:	627b      	str	r3, [r7, #36]	@ 0x24
 800350a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800350c:	681b      	ldr	r3, [r3, #0]
 800350e:	041b      	lsls	r3, r3, #16
 8003510:	0c1a      	lsrs	r2, r3, #16
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	61da      	str	r2, [r3, #28]
 8003516:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	0c1b      	lsrs	r3, r3, #16
 800351c:	220f      	movs	r2, #15
 800351e:	401a      	ands	r2, r3
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	60da      	str	r2, [r3, #12]
 8003524:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003526:	681a      	ldr	r2, [r3, #0]
 8003528:	2380      	movs	r3, #128	@ 0x80
 800352a:	035b      	lsls	r3, r3, #13
 800352c:	401a      	ands	r2, r3
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	615a      	str	r2, [r3, #20]
 8003532:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003534:	681a      	ldr	r2, [r3, #0]
 8003536:	2380      	movs	r3, #128	@ 0x80
 8003538:	039b      	lsls	r3, r3, #14
 800353a:	401a      	ands	r2, r3
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	619a      	str	r2, [r3, #24]
 8003540:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	0e1b      	lsrs	r3, r3, #24
 8003546:	227f      	movs	r2, #127	@ 0x7f
 8003548:	401a      	ands	r2, r3
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	621a      	str	r2, [r3, #32]
 800354e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	0fda      	lsrs	r2, r3, #31
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	625a      	str	r2, [r3, #36]	@ 0x24
 8003558:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800355a:	3304      	adds	r3, #4
 800355c:	627b      	str	r3, [r7, #36]	@ 0x24
 800355e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003560:	617b      	str	r3, [r7, #20]
 8003562:	2300      	movs	r3, #0
 8003564:	623b      	str	r3, [r7, #32]
 8003566:	e00a      	b.n	800357e <HAL_FDCAN_GetRxMessage+0x1d2>
 8003568:	697a      	ldr	r2, [r7, #20]
 800356a:	6a3b      	ldr	r3, [r7, #32]
 800356c:	18d2      	adds	r2, r2, r3
 800356e:	6839      	ldr	r1, [r7, #0]
 8003570:	6a3b      	ldr	r3, [r7, #32]
 8003572:	18cb      	adds	r3, r1, r3
 8003574:	7812      	ldrb	r2, [r2, #0]
 8003576:	701a      	strb	r2, [r3, #0]
 8003578:	6a3b      	ldr	r3, [r7, #32]
 800357a:	3301      	adds	r3, #1
 800357c:	623b      	str	r3, [r7, #32]
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	68db      	ldr	r3, [r3, #12]
 8003582:	4a10      	ldr	r2, [pc, #64]	@ (80035c4 <HAL_FDCAN_GetRxMessage+0x218>)
 8003584:	5cd3      	ldrb	r3, [r2, r3]
 8003586:	001a      	movs	r2, r3
 8003588:	6a3b      	ldr	r3, [r7, #32]
 800358a:	4293      	cmp	r3, r2
 800358c:	d3ec      	bcc.n	8003568 <HAL_FDCAN_GetRxMessage+0x1bc>
 800358e:	68bb      	ldr	r3, [r7, #8]
 8003590:	2b40      	cmp	r3, #64	@ 0x40
 8003592:	d105      	bne.n	80035a0 <HAL_FDCAN_GetRxMessage+0x1f4>
 8003594:	68fb      	ldr	r3, [r7, #12]
 8003596:	681b      	ldr	r3, [r3, #0]
 8003598:	2194      	movs	r1, #148	@ 0x94
 800359a:	69fa      	ldr	r2, [r7, #28]
 800359c:	505a      	str	r2, [r3, r1]
 800359e:	e004      	b.n	80035aa <HAL_FDCAN_GetRxMessage+0x1fe>
 80035a0:	68fb      	ldr	r3, [r7, #12]
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	219c      	movs	r1, #156	@ 0x9c
 80035a6:	69fa      	ldr	r2, [r7, #28]
 80035a8:	505a      	str	r2, [r3, r1]
 80035aa:	2300      	movs	r3, #0
 80035ac:	e006      	b.n	80035bc <HAL_FDCAN_GetRxMessage+0x210>
 80035ae:	68fb      	ldr	r3, [r7, #12]
 80035b0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80035b2:	2208      	movs	r2, #8
 80035b4:	431a      	orrs	r2, r3
 80035b6:	68fb      	ldr	r3, [r7, #12]
 80035b8:	661a      	str	r2, [r3, #96]	@ 0x60
 80035ba:	2301      	movs	r3, #1
 80035bc:	0018      	movs	r0, r3
 80035be:	46bd      	mov	sp, r7
 80035c0:	b00a      	add	sp, #40	@ 0x28
 80035c2:	bd80      	pop	{r7, pc}
 80035c4:	080081c8 	.word	0x080081c8

080035c8 <HAL_FDCAN_ActivateNotification>:
 80035c8:	b580      	push	{r7, lr}
 80035ca:	b086      	sub	sp, #24
 80035cc:	af00      	add	r7, sp, #0
 80035ce:	60f8      	str	r0, [r7, #12]
 80035d0:	60b9      	str	r1, [r7, #8]
 80035d2:	607a      	str	r2, [r7, #4]
 80035d4:	2017      	movs	r0, #23
 80035d6:	183b      	adds	r3, r7, r0
 80035d8:	68fa      	ldr	r2, [r7, #12]
 80035da:	215c      	movs	r1, #92	@ 0x5c
 80035dc:	5c52      	ldrb	r2, [r2, r1]
 80035de:	701a      	strb	r2, [r3, #0]
 80035e0:	0002      	movs	r2, r0
 80035e2:	18bb      	adds	r3, r7, r2
 80035e4:	781b      	ldrb	r3, [r3, #0]
 80035e6:	2b01      	cmp	r3, #1
 80035e8:	d004      	beq.n	80035f4 <HAL_FDCAN_ActivateNotification+0x2c>
 80035ea:	18bb      	adds	r3, r7, r2
 80035ec:	781b      	ldrb	r3, [r3, #0]
 80035ee:	2b02      	cmp	r3, #2
 80035f0:	d000      	beq.n	80035f4 <HAL_FDCAN_ActivateNotification+0x2c>
 80035f2:	e0b4      	b.n	800375e <HAL_FDCAN_ActivateNotification+0x196>
 80035f4:	68fb      	ldr	r3, [r7, #12]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80035fa:	613b      	str	r3, [r7, #16]
 80035fc:	68bb      	ldr	r3, [r7, #8]
 80035fe:	2207      	movs	r2, #7
 8003600:	4013      	ands	r3, r2
 8003602:	d003      	beq.n	800360c <HAL_FDCAN_ActivateNotification+0x44>
 8003604:	693b      	ldr	r3, [r7, #16]
 8003606:	2201      	movs	r2, #1
 8003608:	4013      	ands	r3, r2
 800360a:	d034      	beq.n	8003676 <HAL_FDCAN_ActivateNotification+0xae>
 800360c:	68bb      	ldr	r3, [r7, #8]
 800360e:	2238      	movs	r2, #56	@ 0x38
 8003610:	4013      	ands	r3, r2
 8003612:	d003      	beq.n	800361c <HAL_FDCAN_ActivateNotification+0x54>
 8003614:	693b      	ldr	r3, [r7, #16]
 8003616:	2202      	movs	r2, #2
 8003618:	4013      	ands	r3, r2
 800361a:	d02c      	beq.n	8003676 <HAL_FDCAN_ActivateNotification+0xae>
 800361c:	68ba      	ldr	r2, [r7, #8]
 800361e:	23e0      	movs	r3, #224	@ 0xe0
 8003620:	005b      	lsls	r3, r3, #1
 8003622:	4013      	ands	r3, r2
 8003624:	d003      	beq.n	800362e <HAL_FDCAN_ActivateNotification+0x66>
 8003626:	693b      	ldr	r3, [r7, #16]
 8003628:	2204      	movs	r2, #4
 800362a:	4013      	ands	r3, r2
 800362c:	d023      	beq.n	8003676 <HAL_FDCAN_ActivateNotification+0xae>
 800362e:	68ba      	ldr	r2, [r7, #8]
 8003630:	23f0      	movs	r3, #240	@ 0xf0
 8003632:	015b      	lsls	r3, r3, #5
 8003634:	4013      	ands	r3, r2
 8003636:	d003      	beq.n	8003640 <HAL_FDCAN_ActivateNotification+0x78>
 8003638:	693b      	ldr	r3, [r7, #16]
 800363a:	2208      	movs	r2, #8
 800363c:	4013      	ands	r3, r2
 800363e:	d01a      	beq.n	8003676 <HAL_FDCAN_ActivateNotification+0xae>
 8003640:	68ba      	ldr	r2, [r7, #8]
 8003642:	23e0      	movs	r3, #224	@ 0xe0
 8003644:	021b      	lsls	r3, r3, #8
 8003646:	4013      	ands	r3, r2
 8003648:	d003      	beq.n	8003652 <HAL_FDCAN_ActivateNotification+0x8a>
 800364a:	693b      	ldr	r3, [r7, #16]
 800364c:	2210      	movs	r2, #16
 800364e:	4013      	ands	r3, r2
 8003650:	d011      	beq.n	8003676 <HAL_FDCAN_ActivateNotification+0xae>
 8003652:	68ba      	ldr	r2, [r7, #8]
 8003654:	23c0      	movs	r3, #192	@ 0xc0
 8003656:	029b      	lsls	r3, r3, #10
 8003658:	4013      	ands	r3, r2
 800365a:	d003      	beq.n	8003664 <HAL_FDCAN_ActivateNotification+0x9c>
 800365c:	693b      	ldr	r3, [r7, #16]
 800365e:	2220      	movs	r2, #32
 8003660:	4013      	ands	r3, r2
 8003662:	d008      	beq.n	8003676 <HAL_FDCAN_ActivateNotification+0xae>
 8003664:	68ba      	ldr	r2, [r7, #8]
 8003666:	23fc      	movs	r3, #252	@ 0xfc
 8003668:	041b      	lsls	r3, r3, #16
 800366a:	4013      	ands	r3, r2
 800366c:	d00b      	beq.n	8003686 <HAL_FDCAN_ActivateNotification+0xbe>
 800366e:	693b      	ldr	r3, [r7, #16]
 8003670:	2240      	movs	r2, #64	@ 0x40
 8003672:	4013      	ands	r3, r2
 8003674:	d107      	bne.n	8003686 <HAL_FDCAN_ActivateNotification+0xbe>
 8003676:	68fb      	ldr	r3, [r7, #12]
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800367c:	68fb      	ldr	r3, [r7, #12]
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	2101      	movs	r1, #1
 8003682:	430a      	orrs	r2, r1
 8003684:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003686:	68bb      	ldr	r3, [r7, #8]
 8003688:	2207      	movs	r2, #7
 800368a:	4013      	ands	r3, r2
 800368c:	d003      	beq.n	8003696 <HAL_FDCAN_ActivateNotification+0xce>
 800368e:	693b      	ldr	r3, [r7, #16]
 8003690:	2201      	movs	r2, #1
 8003692:	4013      	ands	r3, r2
 8003694:	d134      	bne.n	8003700 <HAL_FDCAN_ActivateNotification+0x138>
 8003696:	68bb      	ldr	r3, [r7, #8]
 8003698:	2238      	movs	r2, #56	@ 0x38
 800369a:	4013      	ands	r3, r2
 800369c:	d003      	beq.n	80036a6 <HAL_FDCAN_ActivateNotification+0xde>
 800369e:	693b      	ldr	r3, [r7, #16]
 80036a0:	2202      	movs	r2, #2
 80036a2:	4013      	ands	r3, r2
 80036a4:	d12c      	bne.n	8003700 <HAL_FDCAN_ActivateNotification+0x138>
 80036a6:	68ba      	ldr	r2, [r7, #8]
 80036a8:	23e0      	movs	r3, #224	@ 0xe0
 80036aa:	005b      	lsls	r3, r3, #1
 80036ac:	4013      	ands	r3, r2
 80036ae:	d003      	beq.n	80036b8 <HAL_FDCAN_ActivateNotification+0xf0>
 80036b0:	693b      	ldr	r3, [r7, #16]
 80036b2:	2204      	movs	r2, #4
 80036b4:	4013      	ands	r3, r2
 80036b6:	d123      	bne.n	8003700 <HAL_FDCAN_ActivateNotification+0x138>
 80036b8:	68ba      	ldr	r2, [r7, #8]
 80036ba:	23f0      	movs	r3, #240	@ 0xf0
 80036bc:	015b      	lsls	r3, r3, #5
 80036be:	4013      	ands	r3, r2
 80036c0:	d003      	beq.n	80036ca <HAL_FDCAN_ActivateNotification+0x102>
 80036c2:	693b      	ldr	r3, [r7, #16]
 80036c4:	2208      	movs	r2, #8
 80036c6:	4013      	ands	r3, r2
 80036c8:	d11a      	bne.n	8003700 <HAL_FDCAN_ActivateNotification+0x138>
 80036ca:	68ba      	ldr	r2, [r7, #8]
 80036cc:	23e0      	movs	r3, #224	@ 0xe0
 80036ce:	021b      	lsls	r3, r3, #8
 80036d0:	4013      	ands	r3, r2
 80036d2:	d003      	beq.n	80036dc <HAL_FDCAN_ActivateNotification+0x114>
 80036d4:	693b      	ldr	r3, [r7, #16]
 80036d6:	2210      	movs	r2, #16
 80036d8:	4013      	ands	r3, r2
 80036da:	d111      	bne.n	8003700 <HAL_FDCAN_ActivateNotification+0x138>
 80036dc:	68ba      	ldr	r2, [r7, #8]
 80036de:	23c0      	movs	r3, #192	@ 0xc0
 80036e0:	029b      	lsls	r3, r3, #10
 80036e2:	4013      	ands	r3, r2
 80036e4:	d003      	beq.n	80036ee <HAL_FDCAN_ActivateNotification+0x126>
 80036e6:	693b      	ldr	r3, [r7, #16]
 80036e8:	2220      	movs	r2, #32
 80036ea:	4013      	ands	r3, r2
 80036ec:	d108      	bne.n	8003700 <HAL_FDCAN_ActivateNotification+0x138>
 80036ee:	68ba      	ldr	r2, [r7, #8]
 80036f0:	23fc      	movs	r3, #252	@ 0xfc
 80036f2:	041b      	lsls	r3, r3, #16
 80036f4:	4013      	ands	r3, r2
 80036f6:	d00b      	beq.n	8003710 <HAL_FDCAN_ActivateNotification+0x148>
 80036f8:	693b      	ldr	r3, [r7, #16]
 80036fa:	2240      	movs	r2, #64	@ 0x40
 80036fc:	4013      	ands	r3, r2
 80036fe:	d007      	beq.n	8003710 <HAL_FDCAN_ActivateNotification+0x148>
 8003700:	68fb      	ldr	r3, [r7, #12]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	681b      	ldr	r3, [r3, #0]
 800370a:	2102      	movs	r1, #2
 800370c:	430a      	orrs	r2, r1
 800370e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003710:	68bb      	ldr	r3, [r7, #8]
 8003712:	2280      	movs	r2, #128	@ 0x80
 8003714:	4013      	ands	r3, r2
 8003716:	d009      	beq.n	800372c <HAL_FDCAN_ActivateNotification+0x164>
 8003718:	68fb      	ldr	r3, [r7, #12]
 800371a:	681b      	ldr	r3, [r3, #0]
 800371c:	22dc      	movs	r2, #220	@ 0xdc
 800371e:	5899      	ldr	r1, [r3, r2]
 8003720:	68fb      	ldr	r3, [r7, #12]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	687a      	ldr	r2, [r7, #4]
 8003726:	430a      	orrs	r2, r1
 8003728:	21dc      	movs	r1, #220	@ 0xdc
 800372a:	505a      	str	r2, [r3, r1]
 800372c:	68ba      	ldr	r2, [r7, #8]
 800372e:	2380      	movs	r3, #128	@ 0x80
 8003730:	005b      	lsls	r3, r3, #1
 8003732:	4013      	ands	r3, r2
 8003734:	d009      	beq.n	800374a <HAL_FDCAN_ActivateNotification+0x182>
 8003736:	68fb      	ldr	r3, [r7, #12]
 8003738:	681b      	ldr	r3, [r3, #0]
 800373a:	22e0      	movs	r2, #224	@ 0xe0
 800373c:	5899      	ldr	r1, [r3, r2]
 800373e:	68fb      	ldr	r3, [r7, #12]
 8003740:	681b      	ldr	r3, [r3, #0]
 8003742:	687a      	ldr	r2, [r7, #4]
 8003744:	430a      	orrs	r2, r1
 8003746:	21e0      	movs	r1, #224	@ 0xe0
 8003748:	505a      	str	r2, [r3, r1]
 800374a:	68fb      	ldr	r3, [r7, #12]
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8003750:	68fb      	ldr	r3, [r7, #12]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	68ba      	ldr	r2, [r7, #8]
 8003756:	430a      	orrs	r2, r1
 8003758:	655a      	str	r2, [r3, #84]	@ 0x54
 800375a:	2300      	movs	r3, #0
 800375c:	e006      	b.n	800376c <HAL_FDCAN_ActivateNotification+0x1a4>
 800375e:	68fb      	ldr	r3, [r7, #12]
 8003760:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003762:	2202      	movs	r2, #2
 8003764:	431a      	orrs	r2, r3
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	661a      	str	r2, [r3, #96]	@ 0x60
 800376a:	2301      	movs	r3, #1
 800376c:	0018      	movs	r0, r3
 800376e:	46bd      	mov	sp, r7
 8003770:	b006      	add	sp, #24
 8003772:	bd80      	pop	{r7, pc}

08003774 <HAL_FDCAN_IRQHandler>:
 8003774:	b580      	push	{r7, lr}
 8003776:	b08c      	sub	sp, #48	@ 0x30
 8003778:	af00      	add	r7, sp, #0
 800377a:	6078      	str	r0, [r7, #4]
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8003782:	23e0      	movs	r3, #224	@ 0xe0
 8003784:	015b      	lsls	r3, r3, #5
 8003786:	4013      	ands	r3, r2
 8003788:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8003790:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003792:	4013      	ands	r3, r2
 8003794:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800379c:	2207      	movs	r2, #7
 800379e:	4013      	ands	r3, r2
 80037a0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80037a8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80037aa:	4013      	ands	r3, r2
 80037ac:	62bb      	str	r3, [r7, #40]	@ 0x28
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80037b4:	2238      	movs	r2, #56	@ 0x38
 80037b6:	4013      	ands	r3, r2
 80037b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80037ba:	687b      	ldr	r3, [r7, #4]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80037c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80037c2:	4013      	ands	r3, r2
 80037c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	681b      	ldr	r3, [r3, #0]
 80037ca:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80037cc:	23f1      	movs	r3, #241	@ 0xf1
 80037ce:	041b      	lsls	r3, r3, #16
 80037d0:	4013      	ands	r3, r2
 80037d2:	623b      	str	r3, [r7, #32]
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80037da:	6a3b      	ldr	r3, [r7, #32]
 80037dc:	4013      	ands	r3, r2
 80037de:	623b      	str	r3, [r7, #32]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80037e6:	23e0      	movs	r3, #224	@ 0xe0
 80037e8:	031b      	lsls	r3, r3, #12
 80037ea:	4013      	ands	r3, r2
 80037ec:	61fb      	str	r3, [r7, #28]
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	681b      	ldr	r3, [r3, #0]
 80037f2:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80037f4:	69fb      	ldr	r3, [r7, #28]
 80037f6:	4013      	ands	r3, r2
 80037f8:	61fb      	str	r3, [r7, #28]
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003800:	61bb      	str	r3, [r7, #24]
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003808:	617b      	str	r3, [r7, #20]
 800380a:	697b      	ldr	r3, [r7, #20]
 800380c:	2240      	movs	r2, #64	@ 0x40
 800380e:	4013      	ands	r3, r2
 8003810:	d00b      	beq.n	800382a <HAL_FDCAN_IRQHandler+0xb6>
 8003812:	69bb      	ldr	r3, [r7, #24]
 8003814:	2240      	movs	r2, #64	@ 0x40
 8003816:	4013      	ands	r3, r2
 8003818:	d007      	beq.n	800382a <HAL_FDCAN_IRQHandler+0xb6>
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	2240      	movs	r2, #64	@ 0x40
 8003820:	651a      	str	r2, [r3, #80]	@ 0x50
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	0018      	movs	r0, r3
 8003826:	f000 f916 	bl	8003a56 <HAL_FDCAN_HighPriorityMessageCallback>
 800382a:	697a      	ldr	r2, [r7, #20]
 800382c:	2380      	movs	r3, #128	@ 0x80
 800382e:	005b      	lsls	r3, r3, #1
 8003830:	4013      	ands	r3, r2
 8003832:	d01b      	beq.n	800386c <HAL_FDCAN_IRQHandler+0xf8>
 8003834:	69ba      	ldr	r2, [r7, #24]
 8003836:	2380      	movs	r3, #128	@ 0x80
 8003838:	005b      	lsls	r3, r3, #1
 800383a:	4013      	ands	r3, r2
 800383c:	d016      	beq.n	800386c <HAL_FDCAN_IRQHandler+0xf8>
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	22d8      	movs	r2, #216	@ 0xd8
 8003844:	589b      	ldr	r3, [r3, r2]
 8003846:	613b      	str	r3, [r7, #16]
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	22e0      	movs	r2, #224	@ 0xe0
 800384e:	589a      	ldr	r2, [r3, r2]
 8003850:	693b      	ldr	r3, [r7, #16]
 8003852:	4013      	ands	r3, r2
 8003854:	613b      	str	r3, [r7, #16]
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	681b      	ldr	r3, [r3, #0]
 800385a:	2280      	movs	r2, #128	@ 0x80
 800385c:	0052      	lsls	r2, r2, #1
 800385e:	651a      	str	r2, [r3, #80]	@ 0x50
 8003860:	693a      	ldr	r2, [r7, #16]
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	0011      	movs	r1, r2
 8003866:	0018      	movs	r0, r3
 8003868:	f000 f8dc 	bl	8003a24 <HAL_FDCAN_TxBufferAbortCallback>
 800386c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800386e:	2b00      	cmp	r3, #0
 8003870:	d009      	beq.n	8003886 <HAL_FDCAN_IRQHandler+0x112>
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003878:	651a      	str	r2, [r3, #80]	@ 0x50
 800387a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	0011      	movs	r1, r2
 8003880:	0018      	movs	r0, r3
 8003882:	f000 f8ac 	bl	80039de <HAL_FDCAN_TxEventFifoCallback>
 8003886:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003888:	2b00      	cmp	r3, #0
 800388a:	d009      	beq.n	80038a0 <HAL_FDCAN_IRQHandler+0x12c>
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	681b      	ldr	r3, [r3, #0]
 8003890:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8003892:	651a      	str	r2, [r3, #80]	@ 0x50
 8003894:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	0011      	movs	r1, r2
 800389a:	0018      	movs	r0, r3
 800389c:	f7fd ff0e 	bl	80016bc <HAL_FDCAN_RxFifo0Callback>
 80038a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80038a2:	2b00      	cmp	r3, #0
 80038a4:	d009      	beq.n	80038ba <HAL_FDCAN_IRQHandler+0x146>
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80038ac:	651a      	str	r2, [r3, #80]	@ 0x50
 80038ae:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	0011      	movs	r1, r2
 80038b4:	0018      	movs	r0, r3
 80038b6:	f000 f89b 	bl	80039f0 <HAL_FDCAN_RxFifo1Callback>
 80038ba:	697a      	ldr	r2, [r7, #20]
 80038bc:	2380      	movs	r3, #128	@ 0x80
 80038be:	009b      	lsls	r3, r3, #2
 80038c0:	4013      	ands	r3, r2
 80038c2:	d00d      	beq.n	80038e0 <HAL_FDCAN_IRQHandler+0x16c>
 80038c4:	69ba      	ldr	r2, [r7, #24]
 80038c6:	2380      	movs	r3, #128	@ 0x80
 80038c8:	009b      	lsls	r3, r3, #2
 80038ca:	4013      	ands	r3, r2
 80038cc:	d008      	beq.n	80038e0 <HAL_FDCAN_IRQHandler+0x16c>
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	681b      	ldr	r3, [r3, #0]
 80038d2:	2280      	movs	r2, #128	@ 0x80
 80038d4:	0092      	lsls	r2, r2, #2
 80038d6:	651a      	str	r2, [r3, #80]	@ 0x50
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	0018      	movs	r0, r3
 80038dc:	f000 f891 	bl	8003a02 <HAL_FDCAN_TxFifoEmptyCallback>
 80038e0:	697b      	ldr	r3, [r7, #20]
 80038e2:	2280      	movs	r2, #128	@ 0x80
 80038e4:	4013      	ands	r3, r2
 80038e6:	d019      	beq.n	800391c <HAL_FDCAN_IRQHandler+0x1a8>
 80038e8:	69bb      	ldr	r3, [r7, #24]
 80038ea:	2280      	movs	r2, #128	@ 0x80
 80038ec:	4013      	ands	r3, r2
 80038ee:	d015      	beq.n	800391c <HAL_FDCAN_IRQHandler+0x1a8>
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	22d4      	movs	r2, #212	@ 0xd4
 80038f6:	589b      	ldr	r3, [r3, r2]
 80038f8:	60fb      	str	r3, [r7, #12]
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	22dc      	movs	r2, #220	@ 0xdc
 8003900:	589a      	ldr	r2, [r3, r2]
 8003902:	68fb      	ldr	r3, [r7, #12]
 8003904:	4013      	ands	r3, r2
 8003906:	60fb      	str	r3, [r7, #12]
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	2280      	movs	r2, #128	@ 0x80
 800390e:	651a      	str	r2, [r3, #80]	@ 0x50
 8003910:	68fa      	ldr	r2, [r7, #12]
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	0011      	movs	r1, r2
 8003916:	0018      	movs	r0, r3
 8003918:	f000 f87b 	bl	8003a12 <HAL_FDCAN_TxBufferCompleteCallback>
 800391c:	697a      	ldr	r2, [r7, #20]
 800391e:	2380      	movs	r3, #128	@ 0x80
 8003920:	019b      	lsls	r3, r3, #6
 8003922:	4013      	ands	r3, r2
 8003924:	d00d      	beq.n	8003942 <HAL_FDCAN_IRQHandler+0x1ce>
 8003926:	69ba      	ldr	r2, [r7, #24]
 8003928:	2380      	movs	r3, #128	@ 0x80
 800392a:	019b      	lsls	r3, r3, #6
 800392c:	4013      	ands	r3, r2
 800392e:	d008      	beq.n	8003942 <HAL_FDCAN_IRQHandler+0x1ce>
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	2280      	movs	r2, #128	@ 0x80
 8003936:	0192      	lsls	r2, r2, #6
 8003938:	651a      	str	r2, [r3, #80]	@ 0x50
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	0018      	movs	r0, r3
 800393e:	f000 f87a 	bl	8003a36 <HAL_FDCAN_TimestampWraparoundCallback>
 8003942:	697a      	ldr	r2, [r7, #20]
 8003944:	2380      	movs	r3, #128	@ 0x80
 8003946:	021b      	lsls	r3, r3, #8
 8003948:	4013      	ands	r3, r2
 800394a:	d00d      	beq.n	8003968 <HAL_FDCAN_IRQHandler+0x1f4>
 800394c:	69ba      	ldr	r2, [r7, #24]
 800394e:	2380      	movs	r3, #128	@ 0x80
 8003950:	021b      	lsls	r3, r3, #8
 8003952:	4013      	ands	r3, r2
 8003954:	d008      	beq.n	8003968 <HAL_FDCAN_IRQHandler+0x1f4>
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	2280      	movs	r2, #128	@ 0x80
 800395c:	0212      	lsls	r2, r2, #8
 800395e:	651a      	str	r2, [r3, #80]	@ 0x50
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	0018      	movs	r0, r3
 8003964:	f000 f86f 	bl	8003a46 <HAL_FDCAN_TimeoutOccurredCallback>
 8003968:	697a      	ldr	r2, [r7, #20]
 800396a:	2380      	movs	r3, #128	@ 0x80
 800396c:	01db      	lsls	r3, r3, #7
 800396e:	4013      	ands	r3, r2
 8003970:	d00f      	beq.n	8003992 <HAL_FDCAN_IRQHandler+0x21e>
 8003972:	69ba      	ldr	r2, [r7, #24]
 8003974:	2380      	movs	r3, #128	@ 0x80
 8003976:	01db      	lsls	r3, r3, #7
 8003978:	4013      	ands	r3, r2
 800397a:	d00a      	beq.n	8003992 <HAL_FDCAN_IRQHandler+0x21e>
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	681b      	ldr	r3, [r3, #0]
 8003980:	2280      	movs	r2, #128	@ 0x80
 8003982:	01d2      	lsls	r2, r2, #7
 8003984:	651a      	str	r2, [r3, #80]	@ 0x50
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800398a:	2280      	movs	r2, #128	@ 0x80
 800398c:	431a      	orrs	r2, r3
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	661a      	str	r2, [r3, #96]	@ 0x60
 8003992:	69fb      	ldr	r3, [r7, #28]
 8003994:	2b00      	cmp	r3, #0
 8003996:	d009      	beq.n	80039ac <HAL_FDCAN_IRQHandler+0x238>
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	69fa      	ldr	r2, [r7, #28]
 800399e:	651a      	str	r2, [r3, #80]	@ 0x50
 80039a0:	69fa      	ldr	r2, [r7, #28]
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	0011      	movs	r1, r2
 80039a6:	0018      	movs	r0, r3
 80039a8:	f000 f865 	bl	8003a76 <HAL_FDCAN_ErrorStatusCallback>
 80039ac:	6a3b      	ldr	r3, [r7, #32]
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	d009      	beq.n	80039c6 <HAL_FDCAN_IRQHandler+0x252>
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	6a3a      	ldr	r2, [r7, #32]
 80039b8:	651a      	str	r2, [r3, #80]	@ 0x50
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80039be:	6a3b      	ldr	r3, [r7, #32]
 80039c0:	431a      	orrs	r2, r3
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	661a      	str	r2, [r3, #96]	@ 0x60
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80039ca:	2b00      	cmp	r3, #0
 80039cc:	d003      	beq.n	80039d6 <HAL_FDCAN_IRQHandler+0x262>
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	0018      	movs	r0, r3
 80039d2:	f000 f848 	bl	8003a66 <HAL_FDCAN_ErrorCallback>
 80039d6:	46c0      	nop			@ (mov r8, r8)
 80039d8:	46bd      	mov	sp, r7
 80039da:	b00c      	add	sp, #48	@ 0x30
 80039dc:	bd80      	pop	{r7, pc}

080039de <HAL_FDCAN_TxEventFifoCallback>:
 80039de:	b580      	push	{r7, lr}
 80039e0:	b082      	sub	sp, #8
 80039e2:	af00      	add	r7, sp, #0
 80039e4:	6078      	str	r0, [r7, #4]
 80039e6:	6039      	str	r1, [r7, #0]
 80039e8:	46c0      	nop			@ (mov r8, r8)
 80039ea:	46bd      	mov	sp, r7
 80039ec:	b002      	add	sp, #8
 80039ee:	bd80      	pop	{r7, pc}

080039f0 <HAL_FDCAN_RxFifo1Callback>:
 80039f0:	b580      	push	{r7, lr}
 80039f2:	b082      	sub	sp, #8
 80039f4:	af00      	add	r7, sp, #0
 80039f6:	6078      	str	r0, [r7, #4]
 80039f8:	6039      	str	r1, [r7, #0]
 80039fa:	46c0      	nop			@ (mov r8, r8)
 80039fc:	46bd      	mov	sp, r7
 80039fe:	b002      	add	sp, #8
 8003a00:	bd80      	pop	{r7, pc}

08003a02 <HAL_FDCAN_TxFifoEmptyCallback>:
 8003a02:	b580      	push	{r7, lr}
 8003a04:	b082      	sub	sp, #8
 8003a06:	af00      	add	r7, sp, #0
 8003a08:	6078      	str	r0, [r7, #4]
 8003a0a:	46c0      	nop			@ (mov r8, r8)
 8003a0c:	46bd      	mov	sp, r7
 8003a0e:	b002      	add	sp, #8
 8003a10:	bd80      	pop	{r7, pc}

08003a12 <HAL_FDCAN_TxBufferCompleteCallback>:
 8003a12:	b580      	push	{r7, lr}
 8003a14:	b082      	sub	sp, #8
 8003a16:	af00      	add	r7, sp, #0
 8003a18:	6078      	str	r0, [r7, #4]
 8003a1a:	6039      	str	r1, [r7, #0]
 8003a1c:	46c0      	nop			@ (mov r8, r8)
 8003a1e:	46bd      	mov	sp, r7
 8003a20:	b002      	add	sp, #8
 8003a22:	bd80      	pop	{r7, pc}

08003a24 <HAL_FDCAN_TxBufferAbortCallback>:
 8003a24:	b580      	push	{r7, lr}
 8003a26:	b082      	sub	sp, #8
 8003a28:	af00      	add	r7, sp, #0
 8003a2a:	6078      	str	r0, [r7, #4]
 8003a2c:	6039      	str	r1, [r7, #0]
 8003a2e:	46c0      	nop			@ (mov r8, r8)
 8003a30:	46bd      	mov	sp, r7
 8003a32:	b002      	add	sp, #8
 8003a34:	bd80      	pop	{r7, pc}

08003a36 <HAL_FDCAN_TimestampWraparoundCallback>:
 8003a36:	b580      	push	{r7, lr}
 8003a38:	b082      	sub	sp, #8
 8003a3a:	af00      	add	r7, sp, #0
 8003a3c:	6078      	str	r0, [r7, #4]
 8003a3e:	46c0      	nop			@ (mov r8, r8)
 8003a40:	46bd      	mov	sp, r7
 8003a42:	b002      	add	sp, #8
 8003a44:	bd80      	pop	{r7, pc}

08003a46 <HAL_FDCAN_TimeoutOccurredCallback>:
 8003a46:	b580      	push	{r7, lr}
 8003a48:	b082      	sub	sp, #8
 8003a4a:	af00      	add	r7, sp, #0
 8003a4c:	6078      	str	r0, [r7, #4]
 8003a4e:	46c0      	nop			@ (mov r8, r8)
 8003a50:	46bd      	mov	sp, r7
 8003a52:	b002      	add	sp, #8
 8003a54:	bd80      	pop	{r7, pc}

08003a56 <HAL_FDCAN_HighPriorityMessageCallback>:
 8003a56:	b580      	push	{r7, lr}
 8003a58:	b082      	sub	sp, #8
 8003a5a:	af00      	add	r7, sp, #0
 8003a5c:	6078      	str	r0, [r7, #4]
 8003a5e:	46c0      	nop			@ (mov r8, r8)
 8003a60:	46bd      	mov	sp, r7
 8003a62:	b002      	add	sp, #8
 8003a64:	bd80      	pop	{r7, pc}

08003a66 <HAL_FDCAN_ErrorCallback>:
 8003a66:	b580      	push	{r7, lr}
 8003a68:	b082      	sub	sp, #8
 8003a6a:	af00      	add	r7, sp, #0
 8003a6c:	6078      	str	r0, [r7, #4]
 8003a6e:	46c0      	nop			@ (mov r8, r8)
 8003a70:	46bd      	mov	sp, r7
 8003a72:	b002      	add	sp, #8
 8003a74:	bd80      	pop	{r7, pc}

08003a76 <HAL_FDCAN_ErrorStatusCallback>:
 8003a76:	b580      	push	{r7, lr}
 8003a78:	b082      	sub	sp, #8
 8003a7a:	af00      	add	r7, sp, #0
 8003a7c:	6078      	str	r0, [r7, #4]
 8003a7e:	6039      	str	r1, [r7, #0]
 8003a80:	46c0      	nop			@ (mov r8, r8)
 8003a82:	46bd      	mov	sp, r7
 8003a84:	b002      	add	sp, #8
 8003a86:	bd80      	pop	{r7, pc}

08003a88 <FDCAN_CalcultateRamBlockAddresses>:
 8003a88:	b580      	push	{r7, lr}
 8003a8a:	b084      	sub	sp, #16
 8003a8c:	af00      	add	r7, sp, #0
 8003a8e:	6078      	str	r0, [r7, #4]
 8003a90:	4b2f      	ldr	r3, [pc, #188]	@ (8003b50 <FDCAN_CalcultateRamBlockAddresses+0xc8>)
 8003a92:	60bb      	str	r3, [r7, #8]
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	681b      	ldr	r3, [r3, #0]
 8003a98:	4a2e      	ldr	r2, [pc, #184]	@ (8003b54 <FDCAN_CalcultateRamBlockAddresses+0xcc>)
 8003a9a:	4293      	cmp	r3, r2
 8003a9c:	d105      	bne.n	8003aaa <FDCAN_CalcultateRamBlockAddresses+0x22>
 8003a9e:	68bb      	ldr	r3, [r7, #8]
 8003aa0:	22d4      	movs	r2, #212	@ 0xd4
 8003aa2:	0092      	lsls	r2, r2, #2
 8003aa4:	4694      	mov	ip, r2
 8003aa6:	4463      	add	r3, ip
 8003aa8:	60bb      	str	r3, [r7, #8]
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	68ba      	ldr	r2, [r7, #8]
 8003aae:	641a      	str	r2, [r3, #64]	@ 0x40
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	2280      	movs	r2, #128	@ 0x80
 8003ab6:	589b      	ldr	r3, [r3, r2]
 8003ab8:	4a27      	ldr	r2, [pc, #156]	@ (8003b58 <FDCAN_CalcultateRamBlockAddresses+0xd0>)
 8003aba:	4013      	ands	r3, r2
 8003abc:	0019      	movs	r1, r3
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003ac2:	041a      	lsls	r2, r3, #16
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	681b      	ldr	r3, [r3, #0]
 8003ac8:	430a      	orrs	r2, r1
 8003aca:	2180      	movs	r1, #128	@ 0x80
 8003acc:	505a      	str	r2, [r3, r1]
 8003ace:	68bb      	ldr	r3, [r7, #8]
 8003ad0:	3370      	adds	r3, #112	@ 0x70
 8003ad2:	001a      	movs	r2, r3
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	645a      	str	r2, [r3, #68]	@ 0x44
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	2280      	movs	r2, #128	@ 0x80
 8003ade:	589b      	ldr	r3, [r3, r2]
 8003ae0:	4a1e      	ldr	r2, [pc, #120]	@ (8003b5c <FDCAN_CalcultateRamBlockAddresses+0xd4>)
 8003ae2:	4013      	ands	r3, r2
 8003ae4:	0019      	movs	r1, r3
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003aea:	061a      	lsls	r2, r3, #24
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	681b      	ldr	r3, [r3, #0]
 8003af0:	430a      	orrs	r2, r1
 8003af2:	2180      	movs	r1, #128	@ 0x80
 8003af4:	505a      	str	r2, [r3, r1]
 8003af6:	68bb      	ldr	r3, [r7, #8]
 8003af8:	33b0      	adds	r3, #176	@ 0xb0
 8003afa:	001a      	movs	r2, r3
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	649a      	str	r2, [r3, #72]	@ 0x48
 8003b00:	68bb      	ldr	r3, [r7, #8]
 8003b02:	3389      	adds	r3, #137	@ 0x89
 8003b04:	33ff      	adds	r3, #255	@ 0xff
 8003b06:	001a      	movs	r2, r3
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	64da      	str	r2, [r3, #76]	@ 0x4c
 8003b0c:	68bb      	ldr	r3, [r7, #8]
 8003b0e:	2298      	movs	r2, #152	@ 0x98
 8003b10:	0092      	lsls	r2, r2, #2
 8003b12:	189a      	adds	r2, r3, r2
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	651a      	str	r2, [r3, #80]	@ 0x50
 8003b18:	68bb      	ldr	r3, [r7, #8]
 8003b1a:	229e      	movs	r2, #158	@ 0x9e
 8003b1c:	0092      	lsls	r2, r2, #2
 8003b1e:	189a      	adds	r2, r3, r2
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	655a      	str	r2, [r3, #84]	@ 0x54
 8003b24:	68bb      	ldr	r3, [r7, #8]
 8003b26:	60fb      	str	r3, [r7, #12]
 8003b28:	e005      	b.n	8003b36 <FDCAN_CalcultateRamBlockAddresses+0xae>
 8003b2a:	68fb      	ldr	r3, [r7, #12]
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	601a      	str	r2, [r3, #0]
 8003b30:	68fb      	ldr	r3, [r7, #12]
 8003b32:	3304      	adds	r3, #4
 8003b34:	60fb      	str	r3, [r7, #12]
 8003b36:	68bb      	ldr	r3, [r7, #8]
 8003b38:	22d4      	movs	r2, #212	@ 0xd4
 8003b3a:	0092      	lsls	r2, r2, #2
 8003b3c:	4694      	mov	ip, r2
 8003b3e:	4463      	add	r3, ip
 8003b40:	68fa      	ldr	r2, [r7, #12]
 8003b42:	429a      	cmp	r2, r3
 8003b44:	d3f1      	bcc.n	8003b2a <FDCAN_CalcultateRamBlockAddresses+0xa2>
 8003b46:	46c0      	nop			@ (mov r8, r8)
 8003b48:	46c0      	nop			@ (mov r8, r8)
 8003b4a:	46bd      	mov	sp, r7
 8003b4c:	b004      	add	sp, #16
 8003b4e:	bd80      	pop	{r7, pc}
 8003b50:	4000b400 	.word	0x4000b400
 8003b54:	40006800 	.word	0x40006800
 8003b58:	ffe0ffff 	.word	0xffe0ffff
 8003b5c:	f0ffffff 	.word	0xf0ffffff

08003b60 <FDCAN_CopyMessageToRAM>:
 8003b60:	b580      	push	{r7, lr}
 8003b62:	b088      	sub	sp, #32
 8003b64:	af00      	add	r7, sp, #0
 8003b66:	60f8      	str	r0, [r7, #12]
 8003b68:	60b9      	str	r1, [r7, #8]
 8003b6a:	607a      	str	r2, [r7, #4]
 8003b6c:	603b      	str	r3, [r7, #0]
 8003b6e:	68bb      	ldr	r3, [r7, #8]
 8003b70:	685b      	ldr	r3, [r3, #4]
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	d10a      	bne.n	8003b8c <FDCAN_CopyMessageToRAM+0x2c>
 8003b76:	68bb      	ldr	r3, [r7, #8]
 8003b78:	691a      	ldr	r2, [r3, #16]
 8003b7a:	68bb      	ldr	r3, [r7, #8]
 8003b7c:	689b      	ldr	r3, [r3, #8]
 8003b7e:	431a      	orrs	r2, r3
 8003b80:	68bb      	ldr	r3, [r7, #8]
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	049b      	lsls	r3, r3, #18
 8003b86:	4313      	orrs	r3, r2
 8003b88:	61fb      	str	r3, [r7, #28]
 8003b8a:	e00b      	b.n	8003ba4 <FDCAN_CopyMessageToRAM+0x44>
 8003b8c:	68bb      	ldr	r3, [r7, #8]
 8003b8e:	691a      	ldr	r2, [r3, #16]
 8003b90:	68bb      	ldr	r3, [r7, #8]
 8003b92:	689b      	ldr	r3, [r3, #8]
 8003b94:	431a      	orrs	r2, r3
 8003b96:	68bb      	ldr	r3, [r7, #8]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	4313      	orrs	r3, r2
 8003b9c:	2280      	movs	r2, #128	@ 0x80
 8003b9e:	05d2      	lsls	r2, r2, #23
 8003ba0:	4313      	orrs	r3, r2
 8003ba2:	61fb      	str	r3, [r7, #28]
 8003ba4:	68bb      	ldr	r3, [r7, #8]
 8003ba6:	6a1b      	ldr	r3, [r3, #32]
 8003ba8:	061a      	lsls	r2, r3, #24
 8003baa:	68bb      	ldr	r3, [r7, #8]
 8003bac:	69db      	ldr	r3, [r3, #28]
 8003bae:	431a      	orrs	r2, r3
 8003bb0:	68bb      	ldr	r3, [r7, #8]
 8003bb2:	699b      	ldr	r3, [r3, #24]
 8003bb4:	431a      	orrs	r2, r3
 8003bb6:	68bb      	ldr	r3, [r7, #8]
 8003bb8:	695b      	ldr	r3, [r3, #20]
 8003bba:	431a      	orrs	r2, r3
 8003bbc:	68bb      	ldr	r3, [r7, #8]
 8003bbe:	68db      	ldr	r3, [r3, #12]
 8003bc0:	041b      	lsls	r3, r3, #16
 8003bc2:	4313      	orrs	r3, r2
 8003bc4:	613b      	str	r3, [r7, #16]
 8003bc6:	68fb      	ldr	r3, [r7, #12]
 8003bc8:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8003bca:	683a      	ldr	r2, [r7, #0]
 8003bcc:	0013      	movs	r3, r2
 8003bce:	00db      	lsls	r3, r3, #3
 8003bd0:	189b      	adds	r3, r3, r2
 8003bd2:	00db      	lsls	r3, r3, #3
 8003bd4:	18cb      	adds	r3, r1, r3
 8003bd6:	61bb      	str	r3, [r7, #24]
 8003bd8:	69bb      	ldr	r3, [r7, #24]
 8003bda:	69fa      	ldr	r2, [r7, #28]
 8003bdc:	601a      	str	r2, [r3, #0]
 8003bde:	69bb      	ldr	r3, [r7, #24]
 8003be0:	3304      	adds	r3, #4
 8003be2:	61bb      	str	r3, [r7, #24]
 8003be4:	69bb      	ldr	r3, [r7, #24]
 8003be6:	693a      	ldr	r2, [r7, #16]
 8003be8:	601a      	str	r2, [r3, #0]
 8003bea:	69bb      	ldr	r3, [r7, #24]
 8003bec:	3304      	adds	r3, #4
 8003bee:	61bb      	str	r3, [r7, #24]
 8003bf0:	2300      	movs	r3, #0
 8003bf2:	617b      	str	r3, [r7, #20]
 8003bf4:	e020      	b.n	8003c38 <FDCAN_CopyMessageToRAM+0xd8>
 8003bf6:	697b      	ldr	r3, [r7, #20]
 8003bf8:	3303      	adds	r3, #3
 8003bfa:	687a      	ldr	r2, [r7, #4]
 8003bfc:	18d3      	adds	r3, r2, r3
 8003bfe:	781b      	ldrb	r3, [r3, #0]
 8003c00:	061a      	lsls	r2, r3, #24
 8003c02:	697b      	ldr	r3, [r7, #20]
 8003c04:	3302      	adds	r3, #2
 8003c06:	6879      	ldr	r1, [r7, #4]
 8003c08:	18cb      	adds	r3, r1, r3
 8003c0a:	781b      	ldrb	r3, [r3, #0]
 8003c0c:	041b      	lsls	r3, r3, #16
 8003c0e:	431a      	orrs	r2, r3
 8003c10:	697b      	ldr	r3, [r7, #20]
 8003c12:	3301      	adds	r3, #1
 8003c14:	6879      	ldr	r1, [r7, #4]
 8003c16:	18cb      	adds	r3, r1, r3
 8003c18:	781b      	ldrb	r3, [r3, #0]
 8003c1a:	021b      	lsls	r3, r3, #8
 8003c1c:	4313      	orrs	r3, r2
 8003c1e:	6879      	ldr	r1, [r7, #4]
 8003c20:	697a      	ldr	r2, [r7, #20]
 8003c22:	188a      	adds	r2, r1, r2
 8003c24:	7812      	ldrb	r2, [r2, #0]
 8003c26:	431a      	orrs	r2, r3
 8003c28:	69bb      	ldr	r3, [r7, #24]
 8003c2a:	601a      	str	r2, [r3, #0]
 8003c2c:	69bb      	ldr	r3, [r7, #24]
 8003c2e:	3304      	adds	r3, #4
 8003c30:	61bb      	str	r3, [r7, #24]
 8003c32:	697b      	ldr	r3, [r7, #20]
 8003c34:	3304      	adds	r3, #4
 8003c36:	617b      	str	r3, [r7, #20]
 8003c38:	68bb      	ldr	r3, [r7, #8]
 8003c3a:	68db      	ldr	r3, [r3, #12]
 8003c3c:	4a05      	ldr	r2, [pc, #20]	@ (8003c54 <FDCAN_CopyMessageToRAM+0xf4>)
 8003c3e:	5cd3      	ldrb	r3, [r2, r3]
 8003c40:	001a      	movs	r2, r3
 8003c42:	697b      	ldr	r3, [r7, #20]
 8003c44:	4293      	cmp	r3, r2
 8003c46:	d3d6      	bcc.n	8003bf6 <FDCAN_CopyMessageToRAM+0x96>
 8003c48:	46c0      	nop			@ (mov r8, r8)
 8003c4a:	46c0      	nop			@ (mov r8, r8)
 8003c4c:	46bd      	mov	sp, r7
 8003c4e:	b008      	add	sp, #32
 8003c50:	bd80      	pop	{r7, pc}
 8003c52:	46c0      	nop			@ (mov r8, r8)
 8003c54:	080081c8 	.word	0x080081c8

08003c58 <HAL_GPIO_Init>:
 8003c58:	b580      	push	{r7, lr}
 8003c5a:	b086      	sub	sp, #24
 8003c5c:	af00      	add	r7, sp, #0
 8003c5e:	6078      	str	r0, [r7, #4]
 8003c60:	6039      	str	r1, [r7, #0]
 8003c62:	2300      	movs	r3, #0
 8003c64:	617b      	str	r3, [r7, #20]
 8003c66:	e14d      	b.n	8003f04 <HAL_GPIO_Init+0x2ac>
 8003c68:	683b      	ldr	r3, [r7, #0]
 8003c6a:	681b      	ldr	r3, [r3, #0]
 8003c6c:	2101      	movs	r1, #1
 8003c6e:	697a      	ldr	r2, [r7, #20]
 8003c70:	4091      	lsls	r1, r2
 8003c72:	000a      	movs	r2, r1
 8003c74:	4013      	ands	r3, r2
 8003c76:	60fb      	str	r3, [r7, #12]
 8003c78:	68fb      	ldr	r3, [r7, #12]
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d100      	bne.n	8003c80 <HAL_GPIO_Init+0x28>
 8003c7e:	e13e      	b.n	8003efe <HAL_GPIO_Init+0x2a6>
 8003c80:	683b      	ldr	r3, [r7, #0]
 8003c82:	685b      	ldr	r3, [r3, #4]
 8003c84:	2203      	movs	r2, #3
 8003c86:	4013      	ands	r3, r2
 8003c88:	2b01      	cmp	r3, #1
 8003c8a:	d005      	beq.n	8003c98 <HAL_GPIO_Init+0x40>
 8003c8c:	683b      	ldr	r3, [r7, #0]
 8003c8e:	685b      	ldr	r3, [r3, #4]
 8003c90:	2203      	movs	r2, #3
 8003c92:	4013      	ands	r3, r2
 8003c94:	2b02      	cmp	r3, #2
 8003c96:	d130      	bne.n	8003cfa <HAL_GPIO_Init+0xa2>
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	689b      	ldr	r3, [r3, #8]
 8003c9c:	613b      	str	r3, [r7, #16]
 8003c9e:	697b      	ldr	r3, [r7, #20]
 8003ca0:	005b      	lsls	r3, r3, #1
 8003ca2:	2203      	movs	r2, #3
 8003ca4:	409a      	lsls	r2, r3
 8003ca6:	0013      	movs	r3, r2
 8003ca8:	43da      	mvns	r2, r3
 8003caa:	693b      	ldr	r3, [r7, #16]
 8003cac:	4013      	ands	r3, r2
 8003cae:	613b      	str	r3, [r7, #16]
 8003cb0:	683b      	ldr	r3, [r7, #0]
 8003cb2:	68da      	ldr	r2, [r3, #12]
 8003cb4:	697b      	ldr	r3, [r7, #20]
 8003cb6:	005b      	lsls	r3, r3, #1
 8003cb8:	409a      	lsls	r2, r3
 8003cba:	0013      	movs	r3, r2
 8003cbc:	693a      	ldr	r2, [r7, #16]
 8003cbe:	4313      	orrs	r3, r2
 8003cc0:	613b      	str	r3, [r7, #16]
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	693a      	ldr	r2, [r7, #16]
 8003cc6:	609a      	str	r2, [r3, #8]
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	685b      	ldr	r3, [r3, #4]
 8003ccc:	613b      	str	r3, [r7, #16]
 8003cce:	2201      	movs	r2, #1
 8003cd0:	697b      	ldr	r3, [r7, #20]
 8003cd2:	409a      	lsls	r2, r3
 8003cd4:	0013      	movs	r3, r2
 8003cd6:	43da      	mvns	r2, r3
 8003cd8:	693b      	ldr	r3, [r7, #16]
 8003cda:	4013      	ands	r3, r2
 8003cdc:	613b      	str	r3, [r7, #16]
 8003cde:	683b      	ldr	r3, [r7, #0]
 8003ce0:	685b      	ldr	r3, [r3, #4]
 8003ce2:	091b      	lsrs	r3, r3, #4
 8003ce4:	2201      	movs	r2, #1
 8003ce6:	401a      	ands	r2, r3
 8003ce8:	697b      	ldr	r3, [r7, #20]
 8003cea:	409a      	lsls	r2, r3
 8003cec:	0013      	movs	r3, r2
 8003cee:	693a      	ldr	r2, [r7, #16]
 8003cf0:	4313      	orrs	r3, r2
 8003cf2:	613b      	str	r3, [r7, #16]
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	693a      	ldr	r2, [r7, #16]
 8003cf8:	605a      	str	r2, [r3, #4]
 8003cfa:	683b      	ldr	r3, [r7, #0]
 8003cfc:	685b      	ldr	r3, [r3, #4]
 8003cfe:	2203      	movs	r2, #3
 8003d00:	4013      	ands	r3, r2
 8003d02:	2b03      	cmp	r3, #3
 8003d04:	d017      	beq.n	8003d36 <HAL_GPIO_Init+0xde>
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	68db      	ldr	r3, [r3, #12]
 8003d0a:	613b      	str	r3, [r7, #16]
 8003d0c:	697b      	ldr	r3, [r7, #20]
 8003d0e:	005b      	lsls	r3, r3, #1
 8003d10:	2203      	movs	r2, #3
 8003d12:	409a      	lsls	r2, r3
 8003d14:	0013      	movs	r3, r2
 8003d16:	43da      	mvns	r2, r3
 8003d18:	693b      	ldr	r3, [r7, #16]
 8003d1a:	4013      	ands	r3, r2
 8003d1c:	613b      	str	r3, [r7, #16]
 8003d1e:	683b      	ldr	r3, [r7, #0]
 8003d20:	689a      	ldr	r2, [r3, #8]
 8003d22:	697b      	ldr	r3, [r7, #20]
 8003d24:	005b      	lsls	r3, r3, #1
 8003d26:	409a      	lsls	r2, r3
 8003d28:	0013      	movs	r3, r2
 8003d2a:	693a      	ldr	r2, [r7, #16]
 8003d2c:	4313      	orrs	r3, r2
 8003d2e:	613b      	str	r3, [r7, #16]
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	693a      	ldr	r2, [r7, #16]
 8003d34:	60da      	str	r2, [r3, #12]
 8003d36:	683b      	ldr	r3, [r7, #0]
 8003d38:	685b      	ldr	r3, [r3, #4]
 8003d3a:	2203      	movs	r2, #3
 8003d3c:	4013      	ands	r3, r2
 8003d3e:	2b02      	cmp	r3, #2
 8003d40:	d123      	bne.n	8003d8a <HAL_GPIO_Init+0x132>
 8003d42:	697b      	ldr	r3, [r7, #20]
 8003d44:	08da      	lsrs	r2, r3, #3
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	3208      	adds	r2, #8
 8003d4a:	0092      	lsls	r2, r2, #2
 8003d4c:	58d3      	ldr	r3, [r2, r3]
 8003d4e:	613b      	str	r3, [r7, #16]
 8003d50:	697b      	ldr	r3, [r7, #20]
 8003d52:	2207      	movs	r2, #7
 8003d54:	4013      	ands	r3, r2
 8003d56:	009b      	lsls	r3, r3, #2
 8003d58:	220f      	movs	r2, #15
 8003d5a:	409a      	lsls	r2, r3
 8003d5c:	0013      	movs	r3, r2
 8003d5e:	43da      	mvns	r2, r3
 8003d60:	693b      	ldr	r3, [r7, #16]
 8003d62:	4013      	ands	r3, r2
 8003d64:	613b      	str	r3, [r7, #16]
 8003d66:	683b      	ldr	r3, [r7, #0]
 8003d68:	691a      	ldr	r2, [r3, #16]
 8003d6a:	697b      	ldr	r3, [r7, #20]
 8003d6c:	2107      	movs	r1, #7
 8003d6e:	400b      	ands	r3, r1
 8003d70:	009b      	lsls	r3, r3, #2
 8003d72:	409a      	lsls	r2, r3
 8003d74:	0013      	movs	r3, r2
 8003d76:	693a      	ldr	r2, [r7, #16]
 8003d78:	4313      	orrs	r3, r2
 8003d7a:	613b      	str	r3, [r7, #16]
 8003d7c:	697b      	ldr	r3, [r7, #20]
 8003d7e:	08da      	lsrs	r2, r3, #3
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	3208      	adds	r2, #8
 8003d84:	0092      	lsls	r2, r2, #2
 8003d86:	6939      	ldr	r1, [r7, #16]
 8003d88:	50d1      	str	r1, [r2, r3]
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	681b      	ldr	r3, [r3, #0]
 8003d8e:	613b      	str	r3, [r7, #16]
 8003d90:	697b      	ldr	r3, [r7, #20]
 8003d92:	005b      	lsls	r3, r3, #1
 8003d94:	2203      	movs	r2, #3
 8003d96:	409a      	lsls	r2, r3
 8003d98:	0013      	movs	r3, r2
 8003d9a:	43da      	mvns	r2, r3
 8003d9c:	693b      	ldr	r3, [r7, #16]
 8003d9e:	4013      	ands	r3, r2
 8003da0:	613b      	str	r3, [r7, #16]
 8003da2:	683b      	ldr	r3, [r7, #0]
 8003da4:	685b      	ldr	r3, [r3, #4]
 8003da6:	2203      	movs	r2, #3
 8003da8:	401a      	ands	r2, r3
 8003daa:	697b      	ldr	r3, [r7, #20]
 8003dac:	005b      	lsls	r3, r3, #1
 8003dae:	409a      	lsls	r2, r3
 8003db0:	0013      	movs	r3, r2
 8003db2:	693a      	ldr	r2, [r7, #16]
 8003db4:	4313      	orrs	r3, r2
 8003db6:	613b      	str	r3, [r7, #16]
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	693a      	ldr	r2, [r7, #16]
 8003dbc:	601a      	str	r2, [r3, #0]
 8003dbe:	683b      	ldr	r3, [r7, #0]
 8003dc0:	685a      	ldr	r2, [r3, #4]
 8003dc2:	23c0      	movs	r3, #192	@ 0xc0
 8003dc4:	029b      	lsls	r3, r3, #10
 8003dc6:	4013      	ands	r3, r2
 8003dc8:	d100      	bne.n	8003dcc <HAL_GPIO_Init+0x174>
 8003dca:	e098      	b.n	8003efe <HAL_GPIO_Init+0x2a6>
 8003dcc:	4a53      	ldr	r2, [pc, #332]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003dce:	697b      	ldr	r3, [r7, #20]
 8003dd0:	089b      	lsrs	r3, r3, #2
 8003dd2:	3318      	adds	r3, #24
 8003dd4:	009b      	lsls	r3, r3, #2
 8003dd6:	589b      	ldr	r3, [r3, r2]
 8003dd8:	613b      	str	r3, [r7, #16]
 8003dda:	697b      	ldr	r3, [r7, #20]
 8003ddc:	2203      	movs	r2, #3
 8003dde:	4013      	ands	r3, r2
 8003de0:	00db      	lsls	r3, r3, #3
 8003de2:	220f      	movs	r2, #15
 8003de4:	409a      	lsls	r2, r3
 8003de6:	0013      	movs	r3, r2
 8003de8:	43da      	mvns	r2, r3
 8003dea:	693b      	ldr	r3, [r7, #16]
 8003dec:	4013      	ands	r3, r2
 8003dee:	613b      	str	r3, [r7, #16]
 8003df0:	687a      	ldr	r2, [r7, #4]
 8003df2:	23a0      	movs	r3, #160	@ 0xa0
 8003df4:	05db      	lsls	r3, r3, #23
 8003df6:	429a      	cmp	r2, r3
 8003df8:	d019      	beq.n	8003e2e <HAL_GPIO_Init+0x1d6>
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	4a48      	ldr	r2, [pc, #288]	@ (8003f20 <HAL_GPIO_Init+0x2c8>)
 8003dfe:	4293      	cmp	r3, r2
 8003e00:	d013      	beq.n	8003e2a <HAL_GPIO_Init+0x1d2>
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	4a47      	ldr	r2, [pc, #284]	@ (8003f24 <HAL_GPIO_Init+0x2cc>)
 8003e06:	4293      	cmp	r3, r2
 8003e08:	d00d      	beq.n	8003e26 <HAL_GPIO_Init+0x1ce>
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	4a46      	ldr	r2, [pc, #280]	@ (8003f28 <HAL_GPIO_Init+0x2d0>)
 8003e0e:	4293      	cmp	r3, r2
 8003e10:	d007      	beq.n	8003e22 <HAL_GPIO_Init+0x1ca>
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	4a45      	ldr	r2, [pc, #276]	@ (8003f2c <HAL_GPIO_Init+0x2d4>)
 8003e16:	4293      	cmp	r3, r2
 8003e18:	d101      	bne.n	8003e1e <HAL_GPIO_Init+0x1c6>
 8003e1a:	2304      	movs	r3, #4
 8003e1c:	e008      	b.n	8003e30 <HAL_GPIO_Init+0x1d8>
 8003e1e:	2305      	movs	r3, #5
 8003e20:	e006      	b.n	8003e30 <HAL_GPIO_Init+0x1d8>
 8003e22:	2303      	movs	r3, #3
 8003e24:	e004      	b.n	8003e30 <HAL_GPIO_Init+0x1d8>
 8003e26:	2302      	movs	r3, #2
 8003e28:	e002      	b.n	8003e30 <HAL_GPIO_Init+0x1d8>
 8003e2a:	2301      	movs	r3, #1
 8003e2c:	e000      	b.n	8003e30 <HAL_GPIO_Init+0x1d8>
 8003e2e:	2300      	movs	r3, #0
 8003e30:	697a      	ldr	r2, [r7, #20]
 8003e32:	2103      	movs	r1, #3
 8003e34:	400a      	ands	r2, r1
 8003e36:	00d2      	lsls	r2, r2, #3
 8003e38:	4093      	lsls	r3, r2
 8003e3a:	693a      	ldr	r2, [r7, #16]
 8003e3c:	4313      	orrs	r3, r2
 8003e3e:	613b      	str	r3, [r7, #16]
 8003e40:	4936      	ldr	r1, [pc, #216]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003e42:	697b      	ldr	r3, [r7, #20]
 8003e44:	089b      	lsrs	r3, r3, #2
 8003e46:	3318      	adds	r3, #24
 8003e48:	009b      	lsls	r3, r3, #2
 8003e4a:	693a      	ldr	r2, [r7, #16]
 8003e4c:	505a      	str	r2, [r3, r1]
 8003e4e:	4b33      	ldr	r3, [pc, #204]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	613b      	str	r3, [r7, #16]
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	43da      	mvns	r2, r3
 8003e58:	693b      	ldr	r3, [r7, #16]
 8003e5a:	4013      	ands	r3, r2
 8003e5c:	613b      	str	r3, [r7, #16]
 8003e5e:	683b      	ldr	r3, [r7, #0]
 8003e60:	685a      	ldr	r2, [r3, #4]
 8003e62:	2380      	movs	r3, #128	@ 0x80
 8003e64:	035b      	lsls	r3, r3, #13
 8003e66:	4013      	ands	r3, r2
 8003e68:	d003      	beq.n	8003e72 <HAL_GPIO_Init+0x21a>
 8003e6a:	693a      	ldr	r2, [r7, #16]
 8003e6c:	68fb      	ldr	r3, [r7, #12]
 8003e6e:	4313      	orrs	r3, r2
 8003e70:	613b      	str	r3, [r7, #16]
 8003e72:	4b2a      	ldr	r3, [pc, #168]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003e74:	693a      	ldr	r2, [r7, #16]
 8003e76:	601a      	str	r2, [r3, #0]
 8003e78:	4b28      	ldr	r3, [pc, #160]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003e7a:	685b      	ldr	r3, [r3, #4]
 8003e7c:	613b      	str	r3, [r7, #16]
 8003e7e:	68fb      	ldr	r3, [r7, #12]
 8003e80:	43da      	mvns	r2, r3
 8003e82:	693b      	ldr	r3, [r7, #16]
 8003e84:	4013      	ands	r3, r2
 8003e86:	613b      	str	r3, [r7, #16]
 8003e88:	683b      	ldr	r3, [r7, #0]
 8003e8a:	685a      	ldr	r2, [r3, #4]
 8003e8c:	2380      	movs	r3, #128	@ 0x80
 8003e8e:	039b      	lsls	r3, r3, #14
 8003e90:	4013      	ands	r3, r2
 8003e92:	d003      	beq.n	8003e9c <HAL_GPIO_Init+0x244>
 8003e94:	693a      	ldr	r2, [r7, #16]
 8003e96:	68fb      	ldr	r3, [r7, #12]
 8003e98:	4313      	orrs	r3, r2
 8003e9a:	613b      	str	r3, [r7, #16]
 8003e9c:	4b1f      	ldr	r3, [pc, #124]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003e9e:	693a      	ldr	r2, [r7, #16]
 8003ea0:	605a      	str	r2, [r3, #4]
 8003ea2:	4a1e      	ldr	r2, [pc, #120]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003ea4:	2384      	movs	r3, #132	@ 0x84
 8003ea6:	58d3      	ldr	r3, [r2, r3]
 8003ea8:	613b      	str	r3, [r7, #16]
 8003eaa:	68fb      	ldr	r3, [r7, #12]
 8003eac:	43da      	mvns	r2, r3
 8003eae:	693b      	ldr	r3, [r7, #16]
 8003eb0:	4013      	ands	r3, r2
 8003eb2:	613b      	str	r3, [r7, #16]
 8003eb4:	683b      	ldr	r3, [r7, #0]
 8003eb6:	685a      	ldr	r2, [r3, #4]
 8003eb8:	2380      	movs	r3, #128	@ 0x80
 8003eba:	029b      	lsls	r3, r3, #10
 8003ebc:	4013      	ands	r3, r2
 8003ebe:	d003      	beq.n	8003ec8 <HAL_GPIO_Init+0x270>
 8003ec0:	693a      	ldr	r2, [r7, #16]
 8003ec2:	68fb      	ldr	r3, [r7, #12]
 8003ec4:	4313      	orrs	r3, r2
 8003ec6:	613b      	str	r3, [r7, #16]
 8003ec8:	4914      	ldr	r1, [pc, #80]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003eca:	2284      	movs	r2, #132	@ 0x84
 8003ecc:	693b      	ldr	r3, [r7, #16]
 8003ece:	508b      	str	r3, [r1, r2]
 8003ed0:	4a12      	ldr	r2, [pc, #72]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003ed2:	2380      	movs	r3, #128	@ 0x80
 8003ed4:	58d3      	ldr	r3, [r2, r3]
 8003ed6:	613b      	str	r3, [r7, #16]
 8003ed8:	68fb      	ldr	r3, [r7, #12]
 8003eda:	43da      	mvns	r2, r3
 8003edc:	693b      	ldr	r3, [r7, #16]
 8003ede:	4013      	ands	r3, r2
 8003ee0:	613b      	str	r3, [r7, #16]
 8003ee2:	683b      	ldr	r3, [r7, #0]
 8003ee4:	685a      	ldr	r2, [r3, #4]
 8003ee6:	2380      	movs	r3, #128	@ 0x80
 8003ee8:	025b      	lsls	r3, r3, #9
 8003eea:	4013      	ands	r3, r2
 8003eec:	d003      	beq.n	8003ef6 <HAL_GPIO_Init+0x29e>
 8003eee:	693a      	ldr	r2, [r7, #16]
 8003ef0:	68fb      	ldr	r3, [r7, #12]
 8003ef2:	4313      	orrs	r3, r2
 8003ef4:	613b      	str	r3, [r7, #16]
 8003ef6:	4909      	ldr	r1, [pc, #36]	@ (8003f1c <HAL_GPIO_Init+0x2c4>)
 8003ef8:	2280      	movs	r2, #128	@ 0x80
 8003efa:	693b      	ldr	r3, [r7, #16]
 8003efc:	508b      	str	r3, [r1, r2]
 8003efe:	697b      	ldr	r3, [r7, #20]
 8003f00:	3301      	adds	r3, #1
 8003f02:	617b      	str	r3, [r7, #20]
 8003f04:	683b      	ldr	r3, [r7, #0]
 8003f06:	681a      	ldr	r2, [r3, #0]
 8003f08:	697b      	ldr	r3, [r7, #20]
 8003f0a:	40da      	lsrs	r2, r3
 8003f0c:	1e13      	subs	r3, r2, #0
 8003f0e:	d000      	beq.n	8003f12 <HAL_GPIO_Init+0x2ba>
 8003f10:	e6aa      	b.n	8003c68 <HAL_GPIO_Init+0x10>
 8003f12:	46c0      	nop			@ (mov r8, r8)
 8003f14:	46c0      	nop			@ (mov r8, r8)
 8003f16:	46bd      	mov	sp, r7
 8003f18:	b006      	add	sp, #24
 8003f1a:	bd80      	pop	{r7, pc}
 8003f1c:	40021800 	.word	0x40021800
 8003f20:	50000400 	.word	0x50000400
 8003f24:	50000800 	.word	0x50000800
 8003f28:	50000c00 	.word	0x50000c00
 8003f2c:	50001000 	.word	0x50001000

08003f30 <HAL_GPIO_ReadPin>:
 8003f30:	b580      	push	{r7, lr}
 8003f32:	b084      	sub	sp, #16
 8003f34:	af00      	add	r7, sp, #0
 8003f36:	6078      	str	r0, [r7, #4]
 8003f38:	000a      	movs	r2, r1
 8003f3a:	1cbb      	adds	r3, r7, #2
 8003f3c:	801a      	strh	r2, [r3, #0]
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	691b      	ldr	r3, [r3, #16]
 8003f42:	1cba      	adds	r2, r7, #2
 8003f44:	8812      	ldrh	r2, [r2, #0]
 8003f46:	4013      	ands	r3, r2
 8003f48:	d004      	beq.n	8003f54 <HAL_GPIO_ReadPin+0x24>
 8003f4a:	230f      	movs	r3, #15
 8003f4c:	18fb      	adds	r3, r7, r3
 8003f4e:	2201      	movs	r2, #1
 8003f50:	701a      	strb	r2, [r3, #0]
 8003f52:	e003      	b.n	8003f5c <HAL_GPIO_ReadPin+0x2c>
 8003f54:	230f      	movs	r3, #15
 8003f56:	18fb      	adds	r3, r7, r3
 8003f58:	2200      	movs	r2, #0
 8003f5a:	701a      	strb	r2, [r3, #0]
 8003f5c:	230f      	movs	r3, #15
 8003f5e:	18fb      	adds	r3, r7, r3
 8003f60:	781b      	ldrb	r3, [r3, #0]
 8003f62:	0018      	movs	r0, r3
 8003f64:	46bd      	mov	sp, r7
 8003f66:	b004      	add	sp, #16
 8003f68:	bd80      	pop	{r7, pc}

08003f6a <HAL_GPIO_WritePin>:
 8003f6a:	b580      	push	{r7, lr}
 8003f6c:	b082      	sub	sp, #8
 8003f6e:	af00      	add	r7, sp, #0
 8003f70:	6078      	str	r0, [r7, #4]
 8003f72:	0008      	movs	r0, r1
 8003f74:	0011      	movs	r1, r2
 8003f76:	1cbb      	adds	r3, r7, #2
 8003f78:	1c02      	adds	r2, r0, #0
 8003f7a:	801a      	strh	r2, [r3, #0]
 8003f7c:	1c7b      	adds	r3, r7, #1
 8003f7e:	1c0a      	adds	r2, r1, #0
 8003f80:	701a      	strb	r2, [r3, #0]
 8003f82:	1c7b      	adds	r3, r7, #1
 8003f84:	781b      	ldrb	r3, [r3, #0]
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	d004      	beq.n	8003f94 <HAL_GPIO_WritePin+0x2a>
 8003f8a:	1cbb      	adds	r3, r7, #2
 8003f8c:	881a      	ldrh	r2, [r3, #0]
 8003f8e:	687b      	ldr	r3, [r7, #4]
 8003f90:	619a      	str	r2, [r3, #24]
 8003f92:	e003      	b.n	8003f9c <HAL_GPIO_WritePin+0x32>
 8003f94:	1cbb      	adds	r3, r7, #2
 8003f96:	881a      	ldrh	r2, [r3, #0]
 8003f98:	687b      	ldr	r3, [r7, #4]
 8003f9a:	629a      	str	r2, [r3, #40]	@ 0x28
 8003f9c:	46c0      	nop			@ (mov r8, r8)
 8003f9e:	46bd      	mov	sp, r7
 8003fa0:	b002      	add	sp, #8
 8003fa2:	bd80      	pop	{r7, pc}

08003fa4 <HAL_GPIO_TogglePin>:
 8003fa4:	b580      	push	{r7, lr}
 8003fa6:	b084      	sub	sp, #16
 8003fa8:	af00      	add	r7, sp, #0
 8003faa:	6078      	str	r0, [r7, #4]
 8003fac:	000a      	movs	r2, r1
 8003fae:	1cbb      	adds	r3, r7, #2
 8003fb0:	801a      	strh	r2, [r3, #0]
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	695b      	ldr	r3, [r3, #20]
 8003fb6:	60fb      	str	r3, [r7, #12]
 8003fb8:	1cbb      	adds	r3, r7, #2
 8003fba:	881b      	ldrh	r3, [r3, #0]
 8003fbc:	68fa      	ldr	r2, [r7, #12]
 8003fbe:	4013      	ands	r3, r2
 8003fc0:	041a      	lsls	r2, r3, #16
 8003fc2:	68fb      	ldr	r3, [r7, #12]
 8003fc4:	43db      	mvns	r3, r3
 8003fc6:	1cb9      	adds	r1, r7, #2
 8003fc8:	8809      	ldrh	r1, [r1, #0]
 8003fca:	400b      	ands	r3, r1
 8003fcc:	431a      	orrs	r2, r3
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	619a      	str	r2, [r3, #24]
 8003fd2:	46c0      	nop			@ (mov r8, r8)
 8003fd4:	46bd      	mov	sp, r7
 8003fd6:	b004      	add	sp, #16
 8003fd8:	bd80      	pop	{r7, pc}
	...

08003fdc <HAL_PWREx_ControlVoltageScaling>:
 8003fdc:	b580      	push	{r7, lr}
 8003fde:	b084      	sub	sp, #16
 8003fe0:	af00      	add	r7, sp, #0
 8003fe2:	6078      	str	r0, [r7, #4]
 8003fe4:	4b19      	ldr	r3, [pc, #100]	@ (800404c <HAL_PWREx_ControlVoltageScaling+0x70>)
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	4a19      	ldr	r2, [pc, #100]	@ (8004050 <HAL_PWREx_ControlVoltageScaling+0x74>)
 8003fea:	4013      	ands	r3, r2
 8003fec:	0019      	movs	r1, r3
 8003fee:	4b17      	ldr	r3, [pc, #92]	@ (800404c <HAL_PWREx_ControlVoltageScaling+0x70>)
 8003ff0:	687a      	ldr	r2, [r7, #4]
 8003ff2:	430a      	orrs	r2, r1
 8003ff4:	601a      	str	r2, [r3, #0]
 8003ff6:	687a      	ldr	r2, [r7, #4]
 8003ff8:	2380      	movs	r3, #128	@ 0x80
 8003ffa:	009b      	lsls	r3, r3, #2
 8003ffc:	429a      	cmp	r2, r3
 8003ffe:	d11f      	bne.n	8004040 <HAL_PWREx_ControlVoltageScaling+0x64>
 8004000:	4b14      	ldr	r3, [pc, #80]	@ (8004054 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8004002:	681a      	ldr	r2, [r3, #0]
 8004004:	0013      	movs	r3, r2
 8004006:	005b      	lsls	r3, r3, #1
 8004008:	189b      	adds	r3, r3, r2
 800400a:	005b      	lsls	r3, r3, #1
 800400c:	4912      	ldr	r1, [pc, #72]	@ (8004058 <HAL_PWREx_ControlVoltageScaling+0x7c>)
 800400e:	0018      	movs	r0, r3
 8004010:	f7fc f880 	bl	8000114 <__udivsi3>
 8004014:	0003      	movs	r3, r0
 8004016:	3301      	adds	r3, #1
 8004018:	60fb      	str	r3, [r7, #12]
 800401a:	e008      	b.n	800402e <HAL_PWREx_ControlVoltageScaling+0x52>
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	2b00      	cmp	r3, #0
 8004020:	d003      	beq.n	800402a <HAL_PWREx_ControlVoltageScaling+0x4e>
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	3b01      	subs	r3, #1
 8004026:	60fb      	str	r3, [r7, #12]
 8004028:	e001      	b.n	800402e <HAL_PWREx_ControlVoltageScaling+0x52>
 800402a:	2303      	movs	r3, #3
 800402c:	e009      	b.n	8004042 <HAL_PWREx_ControlVoltageScaling+0x66>
 800402e:	4b07      	ldr	r3, [pc, #28]	@ (800404c <HAL_PWREx_ControlVoltageScaling+0x70>)
 8004030:	695a      	ldr	r2, [r3, #20]
 8004032:	2380      	movs	r3, #128	@ 0x80
 8004034:	00db      	lsls	r3, r3, #3
 8004036:	401a      	ands	r2, r3
 8004038:	2380      	movs	r3, #128	@ 0x80
 800403a:	00db      	lsls	r3, r3, #3
 800403c:	429a      	cmp	r2, r3
 800403e:	d0ed      	beq.n	800401c <HAL_PWREx_ControlVoltageScaling+0x40>
 8004040:	2300      	movs	r3, #0
 8004042:	0018      	movs	r0, r3
 8004044:	46bd      	mov	sp, r7
 8004046:	b004      	add	sp, #16
 8004048:	bd80      	pop	{r7, pc}
 800404a:	46c0      	nop			@ (mov r8, r8)
 800404c:	40007000 	.word	0x40007000
 8004050:	fffff9ff 	.word	0xfffff9ff
 8004054:	20000008 	.word	0x20000008
 8004058:	000f4240 	.word	0x000f4240

0800405c <LL_RCC_GetAPB1Prescaler>:
 800405c:	b580      	push	{r7, lr}
 800405e:	af00      	add	r7, sp, #0
 8004060:	4b03      	ldr	r3, [pc, #12]	@ (8004070 <LL_RCC_GetAPB1Prescaler+0x14>)
 8004062:	689a      	ldr	r2, [r3, #8]
 8004064:	23e0      	movs	r3, #224	@ 0xe0
 8004066:	01db      	lsls	r3, r3, #7
 8004068:	4013      	ands	r3, r2
 800406a:	0018      	movs	r0, r3
 800406c:	46bd      	mov	sp, r7
 800406e:	bd80      	pop	{r7, pc}
 8004070:	40021000 	.word	0x40021000

08004074 <HAL_RCC_OscConfig>:
 8004074:	b580      	push	{r7, lr}
 8004076:	b088      	sub	sp, #32
 8004078:	af00      	add	r7, sp, #0
 800407a:	6078      	str	r0, [r7, #4]
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	2b00      	cmp	r3, #0
 8004080:	d102      	bne.n	8004088 <HAL_RCC_OscConfig+0x14>
 8004082:	2301      	movs	r3, #1
 8004084:	f000 fb50 	bl	8004728 <HAL_RCC_OscConfig+0x6b4>
 8004088:	687b      	ldr	r3, [r7, #4]
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	2201      	movs	r2, #1
 800408e:	4013      	ands	r3, r2
 8004090:	d100      	bne.n	8004094 <HAL_RCC_OscConfig+0x20>
 8004092:	e07c      	b.n	800418e <HAL_RCC_OscConfig+0x11a>
 8004094:	4bc3      	ldr	r3, [pc, #780]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004096:	689b      	ldr	r3, [r3, #8]
 8004098:	2238      	movs	r2, #56	@ 0x38
 800409a:	4013      	ands	r3, r2
 800409c:	61bb      	str	r3, [r7, #24]
 800409e:	4bc1      	ldr	r3, [pc, #772]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80040a0:	68db      	ldr	r3, [r3, #12]
 80040a2:	2203      	movs	r2, #3
 80040a4:	4013      	ands	r3, r2
 80040a6:	617b      	str	r3, [r7, #20]
 80040a8:	69bb      	ldr	r3, [r7, #24]
 80040aa:	2b10      	cmp	r3, #16
 80040ac:	d102      	bne.n	80040b4 <HAL_RCC_OscConfig+0x40>
 80040ae:	697b      	ldr	r3, [r7, #20]
 80040b0:	2b03      	cmp	r3, #3
 80040b2:	d002      	beq.n	80040ba <HAL_RCC_OscConfig+0x46>
 80040b4:	69bb      	ldr	r3, [r7, #24]
 80040b6:	2b08      	cmp	r3, #8
 80040b8:	d10b      	bne.n	80040d2 <HAL_RCC_OscConfig+0x5e>
 80040ba:	4bba      	ldr	r3, [pc, #744]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80040bc:	681a      	ldr	r2, [r3, #0]
 80040be:	2380      	movs	r3, #128	@ 0x80
 80040c0:	029b      	lsls	r3, r3, #10
 80040c2:	4013      	ands	r3, r2
 80040c4:	d062      	beq.n	800418c <HAL_RCC_OscConfig+0x118>
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	685b      	ldr	r3, [r3, #4]
 80040ca:	2b00      	cmp	r3, #0
 80040cc:	d15e      	bne.n	800418c <HAL_RCC_OscConfig+0x118>
 80040ce:	2301      	movs	r3, #1
 80040d0:	e32a      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	685a      	ldr	r2, [r3, #4]
 80040d6:	2380      	movs	r3, #128	@ 0x80
 80040d8:	025b      	lsls	r3, r3, #9
 80040da:	429a      	cmp	r2, r3
 80040dc:	d107      	bne.n	80040ee <HAL_RCC_OscConfig+0x7a>
 80040de:	4bb1      	ldr	r3, [pc, #708]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80040e0:	681a      	ldr	r2, [r3, #0]
 80040e2:	4bb0      	ldr	r3, [pc, #704]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80040e4:	2180      	movs	r1, #128	@ 0x80
 80040e6:	0249      	lsls	r1, r1, #9
 80040e8:	430a      	orrs	r2, r1
 80040ea:	601a      	str	r2, [r3, #0]
 80040ec:	e020      	b.n	8004130 <HAL_RCC_OscConfig+0xbc>
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	685a      	ldr	r2, [r3, #4]
 80040f2:	23a0      	movs	r3, #160	@ 0xa0
 80040f4:	02db      	lsls	r3, r3, #11
 80040f6:	429a      	cmp	r2, r3
 80040f8:	d10e      	bne.n	8004118 <HAL_RCC_OscConfig+0xa4>
 80040fa:	4baa      	ldr	r3, [pc, #680]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80040fc:	681a      	ldr	r2, [r3, #0]
 80040fe:	4ba9      	ldr	r3, [pc, #676]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004100:	2180      	movs	r1, #128	@ 0x80
 8004102:	02c9      	lsls	r1, r1, #11
 8004104:	430a      	orrs	r2, r1
 8004106:	601a      	str	r2, [r3, #0]
 8004108:	4ba6      	ldr	r3, [pc, #664]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800410a:	681a      	ldr	r2, [r3, #0]
 800410c:	4ba5      	ldr	r3, [pc, #660]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800410e:	2180      	movs	r1, #128	@ 0x80
 8004110:	0249      	lsls	r1, r1, #9
 8004112:	430a      	orrs	r2, r1
 8004114:	601a      	str	r2, [r3, #0]
 8004116:	e00b      	b.n	8004130 <HAL_RCC_OscConfig+0xbc>
 8004118:	4ba2      	ldr	r3, [pc, #648]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800411a:	681a      	ldr	r2, [r3, #0]
 800411c:	4ba1      	ldr	r3, [pc, #644]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800411e:	49a2      	ldr	r1, [pc, #648]	@ (80043a8 <HAL_RCC_OscConfig+0x334>)
 8004120:	400a      	ands	r2, r1
 8004122:	601a      	str	r2, [r3, #0]
 8004124:	4b9f      	ldr	r3, [pc, #636]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004126:	681a      	ldr	r2, [r3, #0]
 8004128:	4b9e      	ldr	r3, [pc, #632]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800412a:	49a0      	ldr	r1, [pc, #640]	@ (80043ac <HAL_RCC_OscConfig+0x338>)
 800412c:	400a      	ands	r2, r1
 800412e:	601a      	str	r2, [r3, #0]
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	685b      	ldr	r3, [r3, #4]
 8004134:	2b00      	cmp	r3, #0
 8004136:	d014      	beq.n	8004162 <HAL_RCC_OscConfig+0xee>
 8004138:	f7fe fda0 	bl	8002c7c <HAL_GetTick>
 800413c:	0003      	movs	r3, r0
 800413e:	613b      	str	r3, [r7, #16]
 8004140:	e008      	b.n	8004154 <HAL_RCC_OscConfig+0xe0>
 8004142:	f7fe fd9b 	bl	8002c7c <HAL_GetTick>
 8004146:	0002      	movs	r2, r0
 8004148:	693b      	ldr	r3, [r7, #16]
 800414a:	1ad3      	subs	r3, r2, r3
 800414c:	2b64      	cmp	r3, #100	@ 0x64
 800414e:	d901      	bls.n	8004154 <HAL_RCC_OscConfig+0xe0>
 8004150:	2303      	movs	r3, #3
 8004152:	e2e9      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 8004154:	4b93      	ldr	r3, [pc, #588]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004156:	681a      	ldr	r2, [r3, #0]
 8004158:	2380      	movs	r3, #128	@ 0x80
 800415a:	029b      	lsls	r3, r3, #10
 800415c:	4013      	ands	r3, r2
 800415e:	d0f0      	beq.n	8004142 <HAL_RCC_OscConfig+0xce>
 8004160:	e015      	b.n	800418e <HAL_RCC_OscConfig+0x11a>
 8004162:	f7fe fd8b 	bl	8002c7c <HAL_GetTick>
 8004166:	0003      	movs	r3, r0
 8004168:	613b      	str	r3, [r7, #16]
 800416a:	e008      	b.n	800417e <HAL_RCC_OscConfig+0x10a>
 800416c:	f7fe fd86 	bl	8002c7c <HAL_GetTick>
 8004170:	0002      	movs	r2, r0
 8004172:	693b      	ldr	r3, [r7, #16]
 8004174:	1ad3      	subs	r3, r2, r3
 8004176:	2b64      	cmp	r3, #100	@ 0x64
 8004178:	d901      	bls.n	800417e <HAL_RCC_OscConfig+0x10a>
 800417a:	2303      	movs	r3, #3
 800417c:	e2d4      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 800417e:	4b89      	ldr	r3, [pc, #548]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004180:	681a      	ldr	r2, [r3, #0]
 8004182:	2380      	movs	r3, #128	@ 0x80
 8004184:	029b      	lsls	r3, r3, #10
 8004186:	4013      	ands	r3, r2
 8004188:	d1f0      	bne.n	800416c <HAL_RCC_OscConfig+0xf8>
 800418a:	e000      	b.n	800418e <HAL_RCC_OscConfig+0x11a>
 800418c:	46c0      	nop			@ (mov r8, r8)
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	2202      	movs	r2, #2
 8004194:	4013      	ands	r3, r2
 8004196:	d100      	bne.n	800419a <HAL_RCC_OscConfig+0x126>
 8004198:	e099      	b.n	80042ce <HAL_RCC_OscConfig+0x25a>
 800419a:	4b82      	ldr	r3, [pc, #520]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800419c:	689b      	ldr	r3, [r3, #8]
 800419e:	2238      	movs	r2, #56	@ 0x38
 80041a0:	4013      	ands	r3, r2
 80041a2:	61bb      	str	r3, [r7, #24]
 80041a4:	4b7f      	ldr	r3, [pc, #508]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80041a6:	68db      	ldr	r3, [r3, #12]
 80041a8:	2203      	movs	r2, #3
 80041aa:	4013      	ands	r3, r2
 80041ac:	617b      	str	r3, [r7, #20]
 80041ae:	69bb      	ldr	r3, [r7, #24]
 80041b0:	2b10      	cmp	r3, #16
 80041b2:	d102      	bne.n	80041ba <HAL_RCC_OscConfig+0x146>
 80041b4:	697b      	ldr	r3, [r7, #20]
 80041b6:	2b02      	cmp	r3, #2
 80041b8:	d002      	beq.n	80041c0 <HAL_RCC_OscConfig+0x14c>
 80041ba:	69bb      	ldr	r3, [r7, #24]
 80041bc:	2b00      	cmp	r3, #0
 80041be:	d135      	bne.n	800422c <HAL_RCC_OscConfig+0x1b8>
 80041c0:	4b78      	ldr	r3, [pc, #480]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80041c2:	681a      	ldr	r2, [r3, #0]
 80041c4:	2380      	movs	r3, #128	@ 0x80
 80041c6:	00db      	lsls	r3, r3, #3
 80041c8:	4013      	ands	r3, r2
 80041ca:	d005      	beq.n	80041d8 <HAL_RCC_OscConfig+0x164>
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	68db      	ldr	r3, [r3, #12]
 80041d0:	2b00      	cmp	r3, #0
 80041d2:	d101      	bne.n	80041d8 <HAL_RCC_OscConfig+0x164>
 80041d4:	2301      	movs	r3, #1
 80041d6:	e2a7      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 80041d8:	4b72      	ldr	r3, [pc, #456]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80041da:	685b      	ldr	r3, [r3, #4]
 80041dc:	4a74      	ldr	r2, [pc, #464]	@ (80043b0 <HAL_RCC_OscConfig+0x33c>)
 80041de:	4013      	ands	r3, r2
 80041e0:	0019      	movs	r1, r3
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	695b      	ldr	r3, [r3, #20]
 80041e6:	021a      	lsls	r2, r3, #8
 80041e8:	4b6e      	ldr	r3, [pc, #440]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80041ea:	430a      	orrs	r2, r1
 80041ec:	605a      	str	r2, [r3, #4]
 80041ee:	69bb      	ldr	r3, [r7, #24]
 80041f0:	2b00      	cmp	r3, #0
 80041f2:	d112      	bne.n	800421a <HAL_RCC_OscConfig+0x1a6>
 80041f4:	4b6b      	ldr	r3, [pc, #428]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	4a6e      	ldr	r2, [pc, #440]	@ (80043b4 <HAL_RCC_OscConfig+0x340>)
 80041fa:	4013      	ands	r3, r2
 80041fc:	0019      	movs	r1, r3
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	691a      	ldr	r2, [r3, #16]
 8004202:	4b68      	ldr	r3, [pc, #416]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004204:	430a      	orrs	r2, r1
 8004206:	601a      	str	r2, [r3, #0]
 8004208:	4b66      	ldr	r3, [pc, #408]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	0adb      	lsrs	r3, r3, #11
 800420e:	2207      	movs	r2, #7
 8004210:	4013      	ands	r3, r2
 8004212:	4a69      	ldr	r2, [pc, #420]	@ (80043b8 <HAL_RCC_OscConfig+0x344>)
 8004214:	40da      	lsrs	r2, r3
 8004216:	4b69      	ldr	r3, [pc, #420]	@ (80043bc <HAL_RCC_OscConfig+0x348>)
 8004218:	601a      	str	r2, [r3, #0]
 800421a:	4b69      	ldr	r3, [pc, #420]	@ (80043c0 <HAL_RCC_OscConfig+0x34c>)
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	0018      	movs	r0, r3
 8004220:	f7fe fcd0 	bl	8002bc4 <HAL_InitTick>
 8004224:	1e03      	subs	r3, r0, #0
 8004226:	d051      	beq.n	80042cc <HAL_RCC_OscConfig+0x258>
 8004228:	2301      	movs	r3, #1
 800422a:	e27d      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	68db      	ldr	r3, [r3, #12]
 8004230:	2b00      	cmp	r3, #0
 8004232:	d030      	beq.n	8004296 <HAL_RCC_OscConfig+0x222>
 8004234:	4b5b      	ldr	r3, [pc, #364]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004236:	681b      	ldr	r3, [r3, #0]
 8004238:	4a5e      	ldr	r2, [pc, #376]	@ (80043b4 <HAL_RCC_OscConfig+0x340>)
 800423a:	4013      	ands	r3, r2
 800423c:	0019      	movs	r1, r3
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	691a      	ldr	r2, [r3, #16]
 8004242:	4b58      	ldr	r3, [pc, #352]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004244:	430a      	orrs	r2, r1
 8004246:	601a      	str	r2, [r3, #0]
 8004248:	4b56      	ldr	r3, [pc, #344]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800424a:	681a      	ldr	r2, [r3, #0]
 800424c:	4b55      	ldr	r3, [pc, #340]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800424e:	2180      	movs	r1, #128	@ 0x80
 8004250:	0049      	lsls	r1, r1, #1
 8004252:	430a      	orrs	r2, r1
 8004254:	601a      	str	r2, [r3, #0]
 8004256:	f7fe fd11 	bl	8002c7c <HAL_GetTick>
 800425a:	0003      	movs	r3, r0
 800425c:	613b      	str	r3, [r7, #16]
 800425e:	e008      	b.n	8004272 <HAL_RCC_OscConfig+0x1fe>
 8004260:	f7fe fd0c 	bl	8002c7c <HAL_GetTick>
 8004264:	0002      	movs	r2, r0
 8004266:	693b      	ldr	r3, [r7, #16]
 8004268:	1ad3      	subs	r3, r2, r3
 800426a:	2b02      	cmp	r3, #2
 800426c:	d901      	bls.n	8004272 <HAL_RCC_OscConfig+0x1fe>
 800426e:	2303      	movs	r3, #3
 8004270:	e25a      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 8004272:	4b4c      	ldr	r3, [pc, #304]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004274:	681a      	ldr	r2, [r3, #0]
 8004276:	2380      	movs	r3, #128	@ 0x80
 8004278:	00db      	lsls	r3, r3, #3
 800427a:	4013      	ands	r3, r2
 800427c:	d0f0      	beq.n	8004260 <HAL_RCC_OscConfig+0x1ec>
 800427e:	4b49      	ldr	r3, [pc, #292]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004280:	685b      	ldr	r3, [r3, #4]
 8004282:	4a4b      	ldr	r2, [pc, #300]	@ (80043b0 <HAL_RCC_OscConfig+0x33c>)
 8004284:	4013      	ands	r3, r2
 8004286:	0019      	movs	r1, r3
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	695b      	ldr	r3, [r3, #20]
 800428c:	021a      	lsls	r2, r3, #8
 800428e:	4b45      	ldr	r3, [pc, #276]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004290:	430a      	orrs	r2, r1
 8004292:	605a      	str	r2, [r3, #4]
 8004294:	e01b      	b.n	80042ce <HAL_RCC_OscConfig+0x25a>
 8004296:	4b43      	ldr	r3, [pc, #268]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004298:	681a      	ldr	r2, [r3, #0]
 800429a:	4b42      	ldr	r3, [pc, #264]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800429c:	4949      	ldr	r1, [pc, #292]	@ (80043c4 <HAL_RCC_OscConfig+0x350>)
 800429e:	400a      	ands	r2, r1
 80042a0:	601a      	str	r2, [r3, #0]
 80042a2:	f7fe fceb 	bl	8002c7c <HAL_GetTick>
 80042a6:	0003      	movs	r3, r0
 80042a8:	613b      	str	r3, [r7, #16]
 80042aa:	e008      	b.n	80042be <HAL_RCC_OscConfig+0x24a>
 80042ac:	f7fe fce6 	bl	8002c7c <HAL_GetTick>
 80042b0:	0002      	movs	r2, r0
 80042b2:	693b      	ldr	r3, [r7, #16]
 80042b4:	1ad3      	subs	r3, r2, r3
 80042b6:	2b02      	cmp	r3, #2
 80042b8:	d901      	bls.n	80042be <HAL_RCC_OscConfig+0x24a>
 80042ba:	2303      	movs	r3, #3
 80042bc:	e234      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 80042be:	4b39      	ldr	r3, [pc, #228]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80042c0:	681a      	ldr	r2, [r3, #0]
 80042c2:	2380      	movs	r3, #128	@ 0x80
 80042c4:	00db      	lsls	r3, r3, #3
 80042c6:	4013      	ands	r3, r2
 80042c8:	d1f0      	bne.n	80042ac <HAL_RCC_OscConfig+0x238>
 80042ca:	e000      	b.n	80042ce <HAL_RCC_OscConfig+0x25a>
 80042cc:	46c0      	nop			@ (mov r8, r8)
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	681b      	ldr	r3, [r3, #0]
 80042d2:	2208      	movs	r2, #8
 80042d4:	4013      	ands	r3, r2
 80042d6:	d047      	beq.n	8004368 <HAL_RCC_OscConfig+0x2f4>
 80042d8:	4b32      	ldr	r3, [pc, #200]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80042da:	689b      	ldr	r3, [r3, #8]
 80042dc:	2238      	movs	r2, #56	@ 0x38
 80042de:	4013      	ands	r3, r2
 80042e0:	2b18      	cmp	r3, #24
 80042e2:	d10a      	bne.n	80042fa <HAL_RCC_OscConfig+0x286>
 80042e4:	4b2f      	ldr	r3, [pc, #188]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 80042e6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80042e8:	2202      	movs	r2, #2
 80042ea:	4013      	ands	r3, r2
 80042ec:	d03c      	beq.n	8004368 <HAL_RCC_OscConfig+0x2f4>
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	699b      	ldr	r3, [r3, #24]
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d138      	bne.n	8004368 <HAL_RCC_OscConfig+0x2f4>
 80042f6:	2301      	movs	r3, #1
 80042f8:	e216      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	699b      	ldr	r3, [r3, #24]
 80042fe:	2b00      	cmp	r3, #0
 8004300:	d019      	beq.n	8004336 <HAL_RCC_OscConfig+0x2c2>
 8004302:	4b28      	ldr	r3, [pc, #160]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004304:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8004306:	4b27      	ldr	r3, [pc, #156]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004308:	2101      	movs	r1, #1
 800430a:	430a      	orrs	r2, r1
 800430c:	661a      	str	r2, [r3, #96]	@ 0x60
 800430e:	f7fe fcb5 	bl	8002c7c <HAL_GetTick>
 8004312:	0003      	movs	r3, r0
 8004314:	613b      	str	r3, [r7, #16]
 8004316:	e008      	b.n	800432a <HAL_RCC_OscConfig+0x2b6>
 8004318:	f7fe fcb0 	bl	8002c7c <HAL_GetTick>
 800431c:	0002      	movs	r2, r0
 800431e:	693b      	ldr	r3, [r7, #16]
 8004320:	1ad3      	subs	r3, r2, r3
 8004322:	2b02      	cmp	r3, #2
 8004324:	d901      	bls.n	800432a <HAL_RCC_OscConfig+0x2b6>
 8004326:	2303      	movs	r3, #3
 8004328:	e1fe      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 800432a:	4b1e      	ldr	r3, [pc, #120]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800432c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800432e:	2202      	movs	r2, #2
 8004330:	4013      	ands	r3, r2
 8004332:	d0f1      	beq.n	8004318 <HAL_RCC_OscConfig+0x2a4>
 8004334:	e018      	b.n	8004368 <HAL_RCC_OscConfig+0x2f4>
 8004336:	4b1b      	ldr	r3, [pc, #108]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004338:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800433a:	4b1a      	ldr	r3, [pc, #104]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800433c:	2101      	movs	r1, #1
 800433e:	438a      	bics	r2, r1
 8004340:	661a      	str	r2, [r3, #96]	@ 0x60
 8004342:	f7fe fc9b 	bl	8002c7c <HAL_GetTick>
 8004346:	0003      	movs	r3, r0
 8004348:	613b      	str	r3, [r7, #16]
 800434a:	e008      	b.n	800435e <HAL_RCC_OscConfig+0x2ea>
 800434c:	f7fe fc96 	bl	8002c7c <HAL_GetTick>
 8004350:	0002      	movs	r2, r0
 8004352:	693b      	ldr	r3, [r7, #16]
 8004354:	1ad3      	subs	r3, r2, r3
 8004356:	2b02      	cmp	r3, #2
 8004358:	d901      	bls.n	800435e <HAL_RCC_OscConfig+0x2ea>
 800435a:	2303      	movs	r3, #3
 800435c:	e1e4      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 800435e:	4b11      	ldr	r3, [pc, #68]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 8004360:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004362:	2202      	movs	r2, #2
 8004364:	4013      	ands	r3, r2
 8004366:	d1f1      	bne.n	800434c <HAL_RCC_OscConfig+0x2d8>
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	2204      	movs	r2, #4
 800436e:	4013      	ands	r3, r2
 8004370:	d100      	bne.n	8004374 <HAL_RCC_OscConfig+0x300>
 8004372:	e0c7      	b.n	8004504 <HAL_RCC_OscConfig+0x490>
 8004374:	231f      	movs	r3, #31
 8004376:	18fb      	adds	r3, r7, r3
 8004378:	2200      	movs	r2, #0
 800437a:	701a      	strb	r2, [r3, #0]
 800437c:	4b09      	ldr	r3, [pc, #36]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800437e:	689b      	ldr	r3, [r3, #8]
 8004380:	2238      	movs	r2, #56	@ 0x38
 8004382:	4013      	ands	r3, r2
 8004384:	2b20      	cmp	r3, #32
 8004386:	d11f      	bne.n	80043c8 <HAL_RCC_OscConfig+0x354>
 8004388:	4b06      	ldr	r3, [pc, #24]	@ (80043a4 <HAL_RCC_OscConfig+0x330>)
 800438a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800438c:	2202      	movs	r2, #2
 800438e:	4013      	ands	r3, r2
 8004390:	d100      	bne.n	8004394 <HAL_RCC_OscConfig+0x320>
 8004392:	e0b7      	b.n	8004504 <HAL_RCC_OscConfig+0x490>
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	689b      	ldr	r3, [r3, #8]
 8004398:	2b00      	cmp	r3, #0
 800439a:	d000      	beq.n	800439e <HAL_RCC_OscConfig+0x32a>
 800439c:	e0b2      	b.n	8004504 <HAL_RCC_OscConfig+0x490>
 800439e:	2301      	movs	r3, #1
 80043a0:	e1c2      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 80043a2:	46c0      	nop			@ (mov r8, r8)
 80043a4:	40021000 	.word	0x40021000
 80043a8:	fffeffff 	.word	0xfffeffff
 80043ac:	fffbffff 	.word	0xfffbffff
 80043b0:	ffff80ff 	.word	0xffff80ff
 80043b4:	ffffc7ff 	.word	0xffffc7ff
 80043b8:	00f42400 	.word	0x00f42400
 80043bc:	20000008 	.word	0x20000008
 80043c0:	2000000c 	.word	0x2000000c
 80043c4:	fffffeff 	.word	0xfffffeff
 80043c8:	4bb5      	ldr	r3, [pc, #724]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80043ca:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80043cc:	2380      	movs	r3, #128	@ 0x80
 80043ce:	055b      	lsls	r3, r3, #21
 80043d0:	4013      	ands	r3, r2
 80043d2:	d101      	bne.n	80043d8 <HAL_RCC_OscConfig+0x364>
 80043d4:	2301      	movs	r3, #1
 80043d6:	e000      	b.n	80043da <HAL_RCC_OscConfig+0x366>
 80043d8:	2300      	movs	r3, #0
 80043da:	2b00      	cmp	r3, #0
 80043dc:	d011      	beq.n	8004402 <HAL_RCC_OscConfig+0x38e>
 80043de:	4bb0      	ldr	r3, [pc, #704]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80043e0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80043e2:	4baf      	ldr	r3, [pc, #700]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80043e4:	2180      	movs	r1, #128	@ 0x80
 80043e6:	0549      	lsls	r1, r1, #21
 80043e8:	430a      	orrs	r2, r1
 80043ea:	63da      	str	r2, [r3, #60]	@ 0x3c
 80043ec:	4bac      	ldr	r3, [pc, #688]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80043ee:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80043f0:	2380      	movs	r3, #128	@ 0x80
 80043f2:	055b      	lsls	r3, r3, #21
 80043f4:	4013      	ands	r3, r2
 80043f6:	60fb      	str	r3, [r7, #12]
 80043f8:	68fb      	ldr	r3, [r7, #12]
 80043fa:	231f      	movs	r3, #31
 80043fc:	18fb      	adds	r3, r7, r3
 80043fe:	2201      	movs	r2, #1
 8004400:	701a      	strb	r2, [r3, #0]
 8004402:	4ba8      	ldr	r3, [pc, #672]	@ (80046a4 <HAL_RCC_OscConfig+0x630>)
 8004404:	681a      	ldr	r2, [r3, #0]
 8004406:	2380      	movs	r3, #128	@ 0x80
 8004408:	005b      	lsls	r3, r3, #1
 800440a:	4013      	ands	r3, r2
 800440c:	d11a      	bne.n	8004444 <HAL_RCC_OscConfig+0x3d0>
 800440e:	4ba5      	ldr	r3, [pc, #660]	@ (80046a4 <HAL_RCC_OscConfig+0x630>)
 8004410:	681a      	ldr	r2, [r3, #0]
 8004412:	4ba4      	ldr	r3, [pc, #656]	@ (80046a4 <HAL_RCC_OscConfig+0x630>)
 8004414:	2180      	movs	r1, #128	@ 0x80
 8004416:	0049      	lsls	r1, r1, #1
 8004418:	430a      	orrs	r2, r1
 800441a:	601a      	str	r2, [r3, #0]
 800441c:	f7fe fc2e 	bl	8002c7c <HAL_GetTick>
 8004420:	0003      	movs	r3, r0
 8004422:	613b      	str	r3, [r7, #16]
 8004424:	e008      	b.n	8004438 <HAL_RCC_OscConfig+0x3c4>
 8004426:	f7fe fc29 	bl	8002c7c <HAL_GetTick>
 800442a:	0002      	movs	r2, r0
 800442c:	693b      	ldr	r3, [r7, #16]
 800442e:	1ad3      	subs	r3, r2, r3
 8004430:	2b02      	cmp	r3, #2
 8004432:	d901      	bls.n	8004438 <HAL_RCC_OscConfig+0x3c4>
 8004434:	2303      	movs	r3, #3
 8004436:	e177      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 8004438:	4b9a      	ldr	r3, [pc, #616]	@ (80046a4 <HAL_RCC_OscConfig+0x630>)
 800443a:	681a      	ldr	r2, [r3, #0]
 800443c:	2380      	movs	r3, #128	@ 0x80
 800443e:	005b      	lsls	r3, r3, #1
 8004440:	4013      	ands	r3, r2
 8004442:	d0f0      	beq.n	8004426 <HAL_RCC_OscConfig+0x3b2>
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	689b      	ldr	r3, [r3, #8]
 8004448:	2b01      	cmp	r3, #1
 800444a:	d106      	bne.n	800445a <HAL_RCC_OscConfig+0x3e6>
 800444c:	4b94      	ldr	r3, [pc, #592]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800444e:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004450:	4b93      	ldr	r3, [pc, #588]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004452:	2101      	movs	r1, #1
 8004454:	430a      	orrs	r2, r1
 8004456:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004458:	e01c      	b.n	8004494 <HAL_RCC_OscConfig+0x420>
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	689b      	ldr	r3, [r3, #8]
 800445e:	2b05      	cmp	r3, #5
 8004460:	d10c      	bne.n	800447c <HAL_RCC_OscConfig+0x408>
 8004462:	4b8f      	ldr	r3, [pc, #572]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004464:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004466:	4b8e      	ldr	r3, [pc, #568]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004468:	2104      	movs	r1, #4
 800446a:	430a      	orrs	r2, r1
 800446c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800446e:	4b8c      	ldr	r3, [pc, #560]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004470:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004472:	4b8b      	ldr	r3, [pc, #556]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004474:	2101      	movs	r1, #1
 8004476:	430a      	orrs	r2, r1
 8004478:	65da      	str	r2, [r3, #92]	@ 0x5c
 800447a:	e00b      	b.n	8004494 <HAL_RCC_OscConfig+0x420>
 800447c:	4b88      	ldr	r3, [pc, #544]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800447e:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004480:	4b87      	ldr	r3, [pc, #540]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004482:	2101      	movs	r1, #1
 8004484:	438a      	bics	r2, r1
 8004486:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004488:	4b85      	ldr	r3, [pc, #532]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800448a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800448c:	4b84      	ldr	r3, [pc, #528]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800448e:	2104      	movs	r1, #4
 8004490:	438a      	bics	r2, r1
 8004492:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	689b      	ldr	r3, [r3, #8]
 8004498:	2b00      	cmp	r3, #0
 800449a:	d014      	beq.n	80044c6 <HAL_RCC_OscConfig+0x452>
 800449c:	f7fe fbee 	bl	8002c7c <HAL_GetTick>
 80044a0:	0003      	movs	r3, r0
 80044a2:	613b      	str	r3, [r7, #16]
 80044a4:	e009      	b.n	80044ba <HAL_RCC_OscConfig+0x446>
 80044a6:	f7fe fbe9 	bl	8002c7c <HAL_GetTick>
 80044aa:	0002      	movs	r2, r0
 80044ac:	693b      	ldr	r3, [r7, #16]
 80044ae:	1ad3      	subs	r3, r2, r3
 80044b0:	4a7d      	ldr	r2, [pc, #500]	@ (80046a8 <HAL_RCC_OscConfig+0x634>)
 80044b2:	4293      	cmp	r3, r2
 80044b4:	d901      	bls.n	80044ba <HAL_RCC_OscConfig+0x446>
 80044b6:	2303      	movs	r3, #3
 80044b8:	e136      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 80044ba:	4b79      	ldr	r3, [pc, #484]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80044bc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80044be:	2202      	movs	r2, #2
 80044c0:	4013      	ands	r3, r2
 80044c2:	d0f0      	beq.n	80044a6 <HAL_RCC_OscConfig+0x432>
 80044c4:	e013      	b.n	80044ee <HAL_RCC_OscConfig+0x47a>
 80044c6:	f7fe fbd9 	bl	8002c7c <HAL_GetTick>
 80044ca:	0003      	movs	r3, r0
 80044cc:	613b      	str	r3, [r7, #16]
 80044ce:	e009      	b.n	80044e4 <HAL_RCC_OscConfig+0x470>
 80044d0:	f7fe fbd4 	bl	8002c7c <HAL_GetTick>
 80044d4:	0002      	movs	r2, r0
 80044d6:	693b      	ldr	r3, [r7, #16]
 80044d8:	1ad3      	subs	r3, r2, r3
 80044da:	4a73      	ldr	r2, [pc, #460]	@ (80046a8 <HAL_RCC_OscConfig+0x634>)
 80044dc:	4293      	cmp	r3, r2
 80044de:	d901      	bls.n	80044e4 <HAL_RCC_OscConfig+0x470>
 80044e0:	2303      	movs	r3, #3
 80044e2:	e121      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 80044e4:	4b6e      	ldr	r3, [pc, #440]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80044e6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80044e8:	2202      	movs	r2, #2
 80044ea:	4013      	ands	r3, r2
 80044ec:	d1f0      	bne.n	80044d0 <HAL_RCC_OscConfig+0x45c>
 80044ee:	231f      	movs	r3, #31
 80044f0:	18fb      	adds	r3, r7, r3
 80044f2:	781b      	ldrb	r3, [r3, #0]
 80044f4:	2b01      	cmp	r3, #1
 80044f6:	d105      	bne.n	8004504 <HAL_RCC_OscConfig+0x490>
 80044f8:	4b69      	ldr	r3, [pc, #420]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80044fa:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80044fc:	4b68      	ldr	r3, [pc, #416]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80044fe:	496b      	ldr	r1, [pc, #428]	@ (80046ac <HAL_RCC_OscConfig+0x638>)
 8004500:	400a      	ands	r2, r1
 8004502:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	2220      	movs	r2, #32
 800450a:	4013      	ands	r3, r2
 800450c:	d039      	beq.n	8004582 <HAL_RCC_OscConfig+0x50e>
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	69db      	ldr	r3, [r3, #28]
 8004512:	2b00      	cmp	r3, #0
 8004514:	d01b      	beq.n	800454e <HAL_RCC_OscConfig+0x4da>
 8004516:	4b62      	ldr	r3, [pc, #392]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004518:	681a      	ldr	r2, [r3, #0]
 800451a:	4b61      	ldr	r3, [pc, #388]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800451c:	2180      	movs	r1, #128	@ 0x80
 800451e:	03c9      	lsls	r1, r1, #15
 8004520:	430a      	orrs	r2, r1
 8004522:	601a      	str	r2, [r3, #0]
 8004524:	f7fe fbaa 	bl	8002c7c <HAL_GetTick>
 8004528:	0003      	movs	r3, r0
 800452a:	613b      	str	r3, [r7, #16]
 800452c:	e008      	b.n	8004540 <HAL_RCC_OscConfig+0x4cc>
 800452e:	f7fe fba5 	bl	8002c7c <HAL_GetTick>
 8004532:	0002      	movs	r2, r0
 8004534:	693b      	ldr	r3, [r7, #16]
 8004536:	1ad3      	subs	r3, r2, r3
 8004538:	2b02      	cmp	r3, #2
 800453a:	d901      	bls.n	8004540 <HAL_RCC_OscConfig+0x4cc>
 800453c:	2303      	movs	r3, #3
 800453e:	e0f3      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 8004540:	4b57      	ldr	r3, [pc, #348]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004542:	681a      	ldr	r2, [r3, #0]
 8004544:	2380      	movs	r3, #128	@ 0x80
 8004546:	041b      	lsls	r3, r3, #16
 8004548:	4013      	ands	r3, r2
 800454a:	d0f0      	beq.n	800452e <HAL_RCC_OscConfig+0x4ba>
 800454c:	e019      	b.n	8004582 <HAL_RCC_OscConfig+0x50e>
 800454e:	4b54      	ldr	r3, [pc, #336]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004550:	681a      	ldr	r2, [r3, #0]
 8004552:	4b53      	ldr	r3, [pc, #332]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004554:	4956      	ldr	r1, [pc, #344]	@ (80046b0 <HAL_RCC_OscConfig+0x63c>)
 8004556:	400a      	ands	r2, r1
 8004558:	601a      	str	r2, [r3, #0]
 800455a:	f7fe fb8f 	bl	8002c7c <HAL_GetTick>
 800455e:	0003      	movs	r3, r0
 8004560:	613b      	str	r3, [r7, #16]
 8004562:	e008      	b.n	8004576 <HAL_RCC_OscConfig+0x502>
 8004564:	f7fe fb8a 	bl	8002c7c <HAL_GetTick>
 8004568:	0002      	movs	r2, r0
 800456a:	693b      	ldr	r3, [r7, #16]
 800456c:	1ad3      	subs	r3, r2, r3
 800456e:	2b02      	cmp	r3, #2
 8004570:	d901      	bls.n	8004576 <HAL_RCC_OscConfig+0x502>
 8004572:	2303      	movs	r3, #3
 8004574:	e0d8      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 8004576:	4b4a      	ldr	r3, [pc, #296]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004578:	681a      	ldr	r2, [r3, #0]
 800457a:	2380      	movs	r3, #128	@ 0x80
 800457c:	041b      	lsls	r3, r3, #16
 800457e:	4013      	ands	r3, r2
 8004580:	d1f0      	bne.n	8004564 <HAL_RCC_OscConfig+0x4f0>
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	6a1b      	ldr	r3, [r3, #32]
 8004586:	2b00      	cmp	r3, #0
 8004588:	d100      	bne.n	800458c <HAL_RCC_OscConfig+0x518>
 800458a:	e0cc      	b.n	8004726 <HAL_RCC_OscConfig+0x6b2>
 800458c:	4b44      	ldr	r3, [pc, #272]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800458e:	689b      	ldr	r3, [r3, #8]
 8004590:	2238      	movs	r2, #56	@ 0x38
 8004592:	4013      	ands	r3, r2
 8004594:	2b10      	cmp	r3, #16
 8004596:	d100      	bne.n	800459a <HAL_RCC_OscConfig+0x526>
 8004598:	e07b      	b.n	8004692 <HAL_RCC_OscConfig+0x61e>
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	6a1b      	ldr	r3, [r3, #32]
 800459e:	2b02      	cmp	r3, #2
 80045a0:	d156      	bne.n	8004650 <HAL_RCC_OscConfig+0x5dc>
 80045a2:	4b3f      	ldr	r3, [pc, #252]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80045a4:	681a      	ldr	r2, [r3, #0]
 80045a6:	4b3e      	ldr	r3, [pc, #248]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80045a8:	4942      	ldr	r1, [pc, #264]	@ (80046b4 <HAL_RCC_OscConfig+0x640>)
 80045aa:	400a      	ands	r2, r1
 80045ac:	601a      	str	r2, [r3, #0]
 80045ae:	f7fe fb65 	bl	8002c7c <HAL_GetTick>
 80045b2:	0003      	movs	r3, r0
 80045b4:	613b      	str	r3, [r7, #16]
 80045b6:	e008      	b.n	80045ca <HAL_RCC_OscConfig+0x556>
 80045b8:	f7fe fb60 	bl	8002c7c <HAL_GetTick>
 80045bc:	0002      	movs	r2, r0
 80045be:	693b      	ldr	r3, [r7, #16]
 80045c0:	1ad3      	subs	r3, r2, r3
 80045c2:	2b02      	cmp	r3, #2
 80045c4:	d901      	bls.n	80045ca <HAL_RCC_OscConfig+0x556>
 80045c6:	2303      	movs	r3, #3
 80045c8:	e0ae      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 80045ca:	4b35      	ldr	r3, [pc, #212]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80045cc:	681a      	ldr	r2, [r3, #0]
 80045ce:	2380      	movs	r3, #128	@ 0x80
 80045d0:	049b      	lsls	r3, r3, #18
 80045d2:	4013      	ands	r3, r2
 80045d4:	d1f0      	bne.n	80045b8 <HAL_RCC_OscConfig+0x544>
 80045d6:	4b32      	ldr	r3, [pc, #200]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 80045d8:	68db      	ldr	r3, [r3, #12]
 80045da:	4a37      	ldr	r2, [pc, #220]	@ (80046b8 <HAL_RCC_OscConfig+0x644>)
 80045dc:	4013      	ands	r3, r2
 80045de:	0019      	movs	r1, r3
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80045e8:	431a      	orrs	r2, r3
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80045ee:	021b      	lsls	r3, r3, #8
 80045f0:	431a      	orrs	r2, r3
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80045f6:	431a      	orrs	r2, r3
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80045fc:	431a      	orrs	r2, r3
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004602:	431a      	orrs	r2, r3
 8004604:	4b26      	ldr	r3, [pc, #152]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004606:	430a      	orrs	r2, r1
 8004608:	60da      	str	r2, [r3, #12]
 800460a:	4b25      	ldr	r3, [pc, #148]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800460c:	681a      	ldr	r2, [r3, #0]
 800460e:	4b24      	ldr	r3, [pc, #144]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004610:	2180      	movs	r1, #128	@ 0x80
 8004612:	0449      	lsls	r1, r1, #17
 8004614:	430a      	orrs	r2, r1
 8004616:	601a      	str	r2, [r3, #0]
 8004618:	4b21      	ldr	r3, [pc, #132]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800461a:	68da      	ldr	r2, [r3, #12]
 800461c:	4b20      	ldr	r3, [pc, #128]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800461e:	2180      	movs	r1, #128	@ 0x80
 8004620:	0549      	lsls	r1, r1, #21
 8004622:	430a      	orrs	r2, r1
 8004624:	60da      	str	r2, [r3, #12]
 8004626:	f7fe fb29 	bl	8002c7c <HAL_GetTick>
 800462a:	0003      	movs	r3, r0
 800462c:	613b      	str	r3, [r7, #16]
 800462e:	e008      	b.n	8004642 <HAL_RCC_OscConfig+0x5ce>
 8004630:	f7fe fb24 	bl	8002c7c <HAL_GetTick>
 8004634:	0002      	movs	r2, r0
 8004636:	693b      	ldr	r3, [r7, #16]
 8004638:	1ad3      	subs	r3, r2, r3
 800463a:	2b02      	cmp	r3, #2
 800463c:	d901      	bls.n	8004642 <HAL_RCC_OscConfig+0x5ce>
 800463e:	2303      	movs	r3, #3
 8004640:	e072      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 8004642:	4b17      	ldr	r3, [pc, #92]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004644:	681a      	ldr	r2, [r3, #0]
 8004646:	2380      	movs	r3, #128	@ 0x80
 8004648:	049b      	lsls	r3, r3, #18
 800464a:	4013      	ands	r3, r2
 800464c:	d0f0      	beq.n	8004630 <HAL_RCC_OscConfig+0x5bc>
 800464e:	e06a      	b.n	8004726 <HAL_RCC_OscConfig+0x6b2>
 8004650:	4b13      	ldr	r3, [pc, #76]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004652:	681a      	ldr	r2, [r3, #0]
 8004654:	4b12      	ldr	r3, [pc, #72]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004656:	4917      	ldr	r1, [pc, #92]	@ (80046b4 <HAL_RCC_OscConfig+0x640>)
 8004658:	400a      	ands	r2, r1
 800465a:	601a      	str	r2, [r3, #0]
 800465c:	f7fe fb0e 	bl	8002c7c <HAL_GetTick>
 8004660:	0003      	movs	r3, r0
 8004662:	613b      	str	r3, [r7, #16]
 8004664:	e008      	b.n	8004678 <HAL_RCC_OscConfig+0x604>
 8004666:	f7fe fb09 	bl	8002c7c <HAL_GetTick>
 800466a:	0002      	movs	r2, r0
 800466c:	693b      	ldr	r3, [r7, #16]
 800466e:	1ad3      	subs	r3, r2, r3
 8004670:	2b02      	cmp	r3, #2
 8004672:	d901      	bls.n	8004678 <HAL_RCC_OscConfig+0x604>
 8004674:	2303      	movs	r3, #3
 8004676:	e057      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 8004678:	4b09      	ldr	r3, [pc, #36]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800467a:	681a      	ldr	r2, [r3, #0]
 800467c:	2380      	movs	r3, #128	@ 0x80
 800467e:	049b      	lsls	r3, r3, #18
 8004680:	4013      	ands	r3, r2
 8004682:	d1f0      	bne.n	8004666 <HAL_RCC_OscConfig+0x5f2>
 8004684:	4b06      	ldr	r3, [pc, #24]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 8004686:	68da      	ldr	r2, [r3, #12]
 8004688:	4b05      	ldr	r3, [pc, #20]	@ (80046a0 <HAL_RCC_OscConfig+0x62c>)
 800468a:	490c      	ldr	r1, [pc, #48]	@ (80046bc <HAL_RCC_OscConfig+0x648>)
 800468c:	400a      	ands	r2, r1
 800468e:	60da      	str	r2, [r3, #12]
 8004690:	e049      	b.n	8004726 <HAL_RCC_OscConfig+0x6b2>
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	6a1b      	ldr	r3, [r3, #32]
 8004696:	2b01      	cmp	r3, #1
 8004698:	d112      	bne.n	80046c0 <HAL_RCC_OscConfig+0x64c>
 800469a:	2301      	movs	r3, #1
 800469c:	e044      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 800469e:	46c0      	nop			@ (mov r8, r8)
 80046a0:	40021000 	.word	0x40021000
 80046a4:	40007000 	.word	0x40007000
 80046a8:	00001388 	.word	0x00001388
 80046ac:	efffffff 	.word	0xefffffff
 80046b0:	ffbfffff 	.word	0xffbfffff
 80046b4:	feffffff 	.word	0xfeffffff
 80046b8:	11c1808c 	.word	0x11c1808c
 80046bc:	eefefffc 	.word	0xeefefffc
 80046c0:	4b1b      	ldr	r3, [pc, #108]	@ (8004730 <HAL_RCC_OscConfig+0x6bc>)
 80046c2:	68db      	ldr	r3, [r3, #12]
 80046c4:	617b      	str	r3, [r7, #20]
 80046c6:	697b      	ldr	r3, [r7, #20]
 80046c8:	2203      	movs	r2, #3
 80046ca:	401a      	ands	r2, r3
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046d0:	429a      	cmp	r2, r3
 80046d2:	d126      	bne.n	8004722 <HAL_RCC_OscConfig+0x6ae>
 80046d4:	697b      	ldr	r3, [r7, #20]
 80046d6:	2270      	movs	r2, #112	@ 0x70
 80046d8:	401a      	ands	r2, r3
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80046de:	429a      	cmp	r2, r3
 80046e0:	d11f      	bne.n	8004722 <HAL_RCC_OscConfig+0x6ae>
 80046e2:	697a      	ldr	r2, [r7, #20]
 80046e4:	23fe      	movs	r3, #254	@ 0xfe
 80046e6:	01db      	lsls	r3, r3, #7
 80046e8:	401a      	ands	r2, r3
 80046ea:	687b      	ldr	r3, [r7, #4]
 80046ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80046ee:	021b      	lsls	r3, r3, #8
 80046f0:	429a      	cmp	r2, r3
 80046f2:	d116      	bne.n	8004722 <HAL_RCC_OscConfig+0x6ae>
 80046f4:	697a      	ldr	r2, [r7, #20]
 80046f6:	23f8      	movs	r3, #248	@ 0xf8
 80046f8:	039b      	lsls	r3, r3, #14
 80046fa:	401a      	ands	r2, r3
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004700:	429a      	cmp	r2, r3
 8004702:	d10e      	bne.n	8004722 <HAL_RCC_OscConfig+0x6ae>
 8004704:	697a      	ldr	r2, [r7, #20]
 8004706:	23e0      	movs	r3, #224	@ 0xe0
 8004708:	051b      	lsls	r3, r3, #20
 800470a:	401a      	ands	r2, r3
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004710:	429a      	cmp	r2, r3
 8004712:	d106      	bne.n	8004722 <HAL_RCC_OscConfig+0x6ae>
 8004714:	697b      	ldr	r3, [r7, #20]
 8004716:	0f5b      	lsrs	r3, r3, #29
 8004718:	075a      	lsls	r2, r3, #29
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800471e:	429a      	cmp	r2, r3
 8004720:	d001      	beq.n	8004726 <HAL_RCC_OscConfig+0x6b2>
 8004722:	2301      	movs	r3, #1
 8004724:	e000      	b.n	8004728 <HAL_RCC_OscConfig+0x6b4>
 8004726:	2300      	movs	r3, #0
 8004728:	0018      	movs	r0, r3
 800472a:	46bd      	mov	sp, r7
 800472c:	b008      	add	sp, #32
 800472e:	bd80      	pop	{r7, pc}
 8004730:	40021000 	.word	0x40021000

08004734 <HAL_RCC_ClockConfig>:
 8004734:	b580      	push	{r7, lr}
 8004736:	b084      	sub	sp, #16
 8004738:	af00      	add	r7, sp, #0
 800473a:	6078      	str	r0, [r7, #4]
 800473c:	6039      	str	r1, [r7, #0]
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	2b00      	cmp	r3, #0
 8004742:	d101      	bne.n	8004748 <HAL_RCC_ClockConfig+0x14>
 8004744:	2301      	movs	r3, #1
 8004746:	e0e9      	b.n	800491c <HAL_RCC_ClockConfig+0x1e8>
 8004748:	4b76      	ldr	r3, [pc, #472]	@ (8004924 <HAL_RCC_ClockConfig+0x1f0>)
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	2207      	movs	r2, #7
 800474e:	4013      	ands	r3, r2
 8004750:	683a      	ldr	r2, [r7, #0]
 8004752:	429a      	cmp	r2, r3
 8004754:	d91e      	bls.n	8004794 <HAL_RCC_ClockConfig+0x60>
 8004756:	4b73      	ldr	r3, [pc, #460]	@ (8004924 <HAL_RCC_ClockConfig+0x1f0>)
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	2207      	movs	r2, #7
 800475c:	4393      	bics	r3, r2
 800475e:	0019      	movs	r1, r3
 8004760:	4b70      	ldr	r3, [pc, #448]	@ (8004924 <HAL_RCC_ClockConfig+0x1f0>)
 8004762:	683a      	ldr	r2, [r7, #0]
 8004764:	430a      	orrs	r2, r1
 8004766:	601a      	str	r2, [r3, #0]
 8004768:	f7fe fa88 	bl	8002c7c <HAL_GetTick>
 800476c:	0003      	movs	r3, r0
 800476e:	60fb      	str	r3, [r7, #12]
 8004770:	e009      	b.n	8004786 <HAL_RCC_ClockConfig+0x52>
 8004772:	f7fe fa83 	bl	8002c7c <HAL_GetTick>
 8004776:	0002      	movs	r2, r0
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	1ad3      	subs	r3, r2, r3
 800477c:	4a6a      	ldr	r2, [pc, #424]	@ (8004928 <HAL_RCC_ClockConfig+0x1f4>)
 800477e:	4293      	cmp	r3, r2
 8004780:	d901      	bls.n	8004786 <HAL_RCC_ClockConfig+0x52>
 8004782:	2303      	movs	r3, #3
 8004784:	e0ca      	b.n	800491c <HAL_RCC_ClockConfig+0x1e8>
 8004786:	4b67      	ldr	r3, [pc, #412]	@ (8004924 <HAL_RCC_ClockConfig+0x1f0>)
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	2207      	movs	r2, #7
 800478c:	4013      	ands	r3, r2
 800478e:	683a      	ldr	r2, [r7, #0]
 8004790:	429a      	cmp	r2, r3
 8004792:	d1ee      	bne.n	8004772 <HAL_RCC_ClockConfig+0x3e>
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	2202      	movs	r2, #2
 800479a:	4013      	ands	r3, r2
 800479c:	d015      	beq.n	80047ca <HAL_RCC_ClockConfig+0x96>
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	2204      	movs	r2, #4
 80047a4:	4013      	ands	r3, r2
 80047a6:	d006      	beq.n	80047b6 <HAL_RCC_ClockConfig+0x82>
 80047a8:	4b60      	ldr	r3, [pc, #384]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 80047aa:	689a      	ldr	r2, [r3, #8]
 80047ac:	4b5f      	ldr	r3, [pc, #380]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 80047ae:	21e0      	movs	r1, #224	@ 0xe0
 80047b0:	01c9      	lsls	r1, r1, #7
 80047b2:	430a      	orrs	r2, r1
 80047b4:	609a      	str	r2, [r3, #8]
 80047b6:	4b5d      	ldr	r3, [pc, #372]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 80047b8:	689b      	ldr	r3, [r3, #8]
 80047ba:	4a5d      	ldr	r2, [pc, #372]	@ (8004930 <HAL_RCC_ClockConfig+0x1fc>)
 80047bc:	4013      	ands	r3, r2
 80047be:	0019      	movs	r1, r3
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	689a      	ldr	r2, [r3, #8]
 80047c4:	4b59      	ldr	r3, [pc, #356]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 80047c6:	430a      	orrs	r2, r1
 80047c8:	609a      	str	r2, [r3, #8]
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	2201      	movs	r2, #1
 80047d0:	4013      	ands	r3, r2
 80047d2:	d057      	beq.n	8004884 <HAL_RCC_ClockConfig+0x150>
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	685b      	ldr	r3, [r3, #4]
 80047d8:	2b01      	cmp	r3, #1
 80047da:	d107      	bne.n	80047ec <HAL_RCC_ClockConfig+0xb8>
 80047dc:	4b53      	ldr	r3, [pc, #332]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 80047de:	681a      	ldr	r2, [r3, #0]
 80047e0:	2380      	movs	r3, #128	@ 0x80
 80047e2:	029b      	lsls	r3, r3, #10
 80047e4:	4013      	ands	r3, r2
 80047e6:	d12b      	bne.n	8004840 <HAL_RCC_ClockConfig+0x10c>
 80047e8:	2301      	movs	r3, #1
 80047ea:	e097      	b.n	800491c <HAL_RCC_ClockConfig+0x1e8>
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	685b      	ldr	r3, [r3, #4]
 80047f0:	2b02      	cmp	r3, #2
 80047f2:	d107      	bne.n	8004804 <HAL_RCC_ClockConfig+0xd0>
 80047f4:	4b4d      	ldr	r3, [pc, #308]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 80047f6:	681a      	ldr	r2, [r3, #0]
 80047f8:	2380      	movs	r3, #128	@ 0x80
 80047fa:	049b      	lsls	r3, r3, #18
 80047fc:	4013      	ands	r3, r2
 80047fe:	d11f      	bne.n	8004840 <HAL_RCC_ClockConfig+0x10c>
 8004800:	2301      	movs	r3, #1
 8004802:	e08b      	b.n	800491c <HAL_RCC_ClockConfig+0x1e8>
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	685b      	ldr	r3, [r3, #4]
 8004808:	2b00      	cmp	r3, #0
 800480a:	d107      	bne.n	800481c <HAL_RCC_ClockConfig+0xe8>
 800480c:	4b47      	ldr	r3, [pc, #284]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 800480e:	681a      	ldr	r2, [r3, #0]
 8004810:	2380      	movs	r3, #128	@ 0x80
 8004812:	00db      	lsls	r3, r3, #3
 8004814:	4013      	ands	r3, r2
 8004816:	d113      	bne.n	8004840 <HAL_RCC_ClockConfig+0x10c>
 8004818:	2301      	movs	r3, #1
 800481a:	e07f      	b.n	800491c <HAL_RCC_ClockConfig+0x1e8>
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	685b      	ldr	r3, [r3, #4]
 8004820:	2b03      	cmp	r3, #3
 8004822:	d106      	bne.n	8004832 <HAL_RCC_ClockConfig+0xfe>
 8004824:	4b41      	ldr	r3, [pc, #260]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 8004826:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004828:	2202      	movs	r2, #2
 800482a:	4013      	ands	r3, r2
 800482c:	d108      	bne.n	8004840 <HAL_RCC_ClockConfig+0x10c>
 800482e:	2301      	movs	r3, #1
 8004830:	e074      	b.n	800491c <HAL_RCC_ClockConfig+0x1e8>
 8004832:	4b3e      	ldr	r3, [pc, #248]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 8004834:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004836:	2202      	movs	r2, #2
 8004838:	4013      	ands	r3, r2
 800483a:	d101      	bne.n	8004840 <HAL_RCC_ClockConfig+0x10c>
 800483c:	2301      	movs	r3, #1
 800483e:	e06d      	b.n	800491c <HAL_RCC_ClockConfig+0x1e8>
 8004840:	4b3a      	ldr	r3, [pc, #232]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 8004842:	689b      	ldr	r3, [r3, #8]
 8004844:	2207      	movs	r2, #7
 8004846:	4393      	bics	r3, r2
 8004848:	0019      	movs	r1, r3
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	685a      	ldr	r2, [r3, #4]
 800484e:	4b37      	ldr	r3, [pc, #220]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 8004850:	430a      	orrs	r2, r1
 8004852:	609a      	str	r2, [r3, #8]
 8004854:	f7fe fa12 	bl	8002c7c <HAL_GetTick>
 8004858:	0003      	movs	r3, r0
 800485a:	60fb      	str	r3, [r7, #12]
 800485c:	e009      	b.n	8004872 <HAL_RCC_ClockConfig+0x13e>
 800485e:	f7fe fa0d 	bl	8002c7c <HAL_GetTick>
 8004862:	0002      	movs	r2, r0
 8004864:	68fb      	ldr	r3, [r7, #12]
 8004866:	1ad3      	subs	r3, r2, r3
 8004868:	4a2f      	ldr	r2, [pc, #188]	@ (8004928 <HAL_RCC_ClockConfig+0x1f4>)
 800486a:	4293      	cmp	r3, r2
 800486c:	d901      	bls.n	8004872 <HAL_RCC_ClockConfig+0x13e>
 800486e:	2303      	movs	r3, #3
 8004870:	e054      	b.n	800491c <HAL_RCC_ClockConfig+0x1e8>
 8004872:	4b2e      	ldr	r3, [pc, #184]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 8004874:	689b      	ldr	r3, [r3, #8]
 8004876:	2238      	movs	r2, #56	@ 0x38
 8004878:	401a      	ands	r2, r3
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	685b      	ldr	r3, [r3, #4]
 800487e:	00db      	lsls	r3, r3, #3
 8004880:	429a      	cmp	r2, r3
 8004882:	d1ec      	bne.n	800485e <HAL_RCC_ClockConfig+0x12a>
 8004884:	4b27      	ldr	r3, [pc, #156]	@ (8004924 <HAL_RCC_ClockConfig+0x1f0>)
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	2207      	movs	r2, #7
 800488a:	4013      	ands	r3, r2
 800488c:	683a      	ldr	r2, [r7, #0]
 800488e:	429a      	cmp	r2, r3
 8004890:	d21e      	bcs.n	80048d0 <HAL_RCC_ClockConfig+0x19c>
 8004892:	4b24      	ldr	r3, [pc, #144]	@ (8004924 <HAL_RCC_ClockConfig+0x1f0>)
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	2207      	movs	r2, #7
 8004898:	4393      	bics	r3, r2
 800489a:	0019      	movs	r1, r3
 800489c:	4b21      	ldr	r3, [pc, #132]	@ (8004924 <HAL_RCC_ClockConfig+0x1f0>)
 800489e:	683a      	ldr	r2, [r7, #0]
 80048a0:	430a      	orrs	r2, r1
 80048a2:	601a      	str	r2, [r3, #0]
 80048a4:	f7fe f9ea 	bl	8002c7c <HAL_GetTick>
 80048a8:	0003      	movs	r3, r0
 80048aa:	60fb      	str	r3, [r7, #12]
 80048ac:	e009      	b.n	80048c2 <HAL_RCC_ClockConfig+0x18e>
 80048ae:	f7fe f9e5 	bl	8002c7c <HAL_GetTick>
 80048b2:	0002      	movs	r2, r0
 80048b4:	68fb      	ldr	r3, [r7, #12]
 80048b6:	1ad3      	subs	r3, r2, r3
 80048b8:	4a1b      	ldr	r2, [pc, #108]	@ (8004928 <HAL_RCC_ClockConfig+0x1f4>)
 80048ba:	4293      	cmp	r3, r2
 80048bc:	d901      	bls.n	80048c2 <HAL_RCC_ClockConfig+0x18e>
 80048be:	2303      	movs	r3, #3
 80048c0:	e02c      	b.n	800491c <HAL_RCC_ClockConfig+0x1e8>
 80048c2:	4b18      	ldr	r3, [pc, #96]	@ (8004924 <HAL_RCC_ClockConfig+0x1f0>)
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	2207      	movs	r2, #7
 80048c8:	4013      	ands	r3, r2
 80048ca:	683a      	ldr	r2, [r7, #0]
 80048cc:	429a      	cmp	r2, r3
 80048ce:	d1ee      	bne.n	80048ae <HAL_RCC_ClockConfig+0x17a>
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	2204      	movs	r2, #4
 80048d6:	4013      	ands	r3, r2
 80048d8:	d009      	beq.n	80048ee <HAL_RCC_ClockConfig+0x1ba>
 80048da:	4b14      	ldr	r3, [pc, #80]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 80048dc:	689b      	ldr	r3, [r3, #8]
 80048de:	4a15      	ldr	r2, [pc, #84]	@ (8004934 <HAL_RCC_ClockConfig+0x200>)
 80048e0:	4013      	ands	r3, r2
 80048e2:	0019      	movs	r1, r3
 80048e4:	687b      	ldr	r3, [r7, #4]
 80048e6:	68da      	ldr	r2, [r3, #12]
 80048e8:	4b10      	ldr	r3, [pc, #64]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 80048ea:	430a      	orrs	r2, r1
 80048ec:	609a      	str	r2, [r3, #8]
 80048ee:	f000 f88d 	bl	8004a0c <HAL_RCC_GetSysClockFreq>
 80048f2:	0001      	movs	r1, r0
 80048f4:	4b0d      	ldr	r3, [pc, #52]	@ (800492c <HAL_RCC_ClockConfig+0x1f8>)
 80048f6:	689b      	ldr	r3, [r3, #8]
 80048f8:	0a1b      	lsrs	r3, r3, #8
 80048fa:	220f      	movs	r2, #15
 80048fc:	401a      	ands	r2, r3
 80048fe:	4b0e      	ldr	r3, [pc, #56]	@ (8004938 <HAL_RCC_ClockConfig+0x204>)
 8004900:	0092      	lsls	r2, r2, #2
 8004902:	58d3      	ldr	r3, [r2, r3]
 8004904:	221f      	movs	r2, #31
 8004906:	4013      	ands	r3, r2
 8004908:	000a      	movs	r2, r1
 800490a:	40da      	lsrs	r2, r3
 800490c:	4b0b      	ldr	r3, [pc, #44]	@ (800493c <HAL_RCC_ClockConfig+0x208>)
 800490e:	601a      	str	r2, [r3, #0]
 8004910:	4b0b      	ldr	r3, [pc, #44]	@ (8004940 <HAL_RCC_ClockConfig+0x20c>)
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	0018      	movs	r0, r3
 8004916:	f7fe f955 	bl	8002bc4 <HAL_InitTick>
 800491a:	0003      	movs	r3, r0
 800491c:	0018      	movs	r0, r3
 800491e:	46bd      	mov	sp, r7
 8004920:	b004      	add	sp, #16
 8004922:	bd80      	pop	{r7, pc}
 8004924:	40022000 	.word	0x40022000
 8004928:	00001388 	.word	0x00001388
 800492c:	40021000 	.word	0x40021000
 8004930:	fffff0ff 	.word	0xfffff0ff
 8004934:	ffff8fff 	.word	0xffff8fff
 8004938:	08008168 	.word	0x08008168
 800493c:	20000008 	.word	0x20000008
 8004940:	2000000c 	.word	0x2000000c

08004944 <HAL_RCC_MCOConfig>:
 8004944:	b580      	push	{r7, lr}
 8004946:	b08c      	sub	sp, #48	@ 0x30
 8004948:	af00      	add	r7, sp, #0
 800494a:	60f8      	str	r0, [r7, #12]
 800494c:	60b9      	str	r1, [r7, #8]
 800494e:	607a      	str	r2, [r7, #4]
 8004950:	2010      	movs	r0, #16
 8004952:	183b      	adds	r3, r7, r0
 8004954:	2202      	movs	r2, #2
 8004956:	605a      	str	r2, [r3, #4]
 8004958:	183b      	adds	r3, r7, r0
 800495a:	2203      	movs	r2, #3
 800495c:	60da      	str	r2, [r3, #12]
 800495e:	183b      	adds	r3, r7, r0
 8004960:	2200      	movs	r2, #0
 8004962:	609a      	str	r2, [r3, #8]
 8004964:	68fa      	ldr	r2, [r7, #12]
 8004966:	2380      	movs	r3, #128	@ 0x80
 8004968:	055b      	lsls	r3, r3, #21
 800496a:	4013      	ands	r3, r2
 800496c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800496e:	68fb      	ldr	r3, [r7, #12]
 8004970:	0c1b      	lsrs	r3, r3, #16
 8004972:	220f      	movs	r2, #15
 8004974:	4013      	ands	r3, r2
 8004976:	22a0      	movs	r2, #160	@ 0xa0
 8004978:	0352      	lsls	r2, r2, #13
 800497a:	4694      	mov	ip, r2
 800497c:	4463      	add	r3, ip
 800497e:	029b      	lsls	r3, r3, #10
 8004980:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004982:	68fb      	ldr	r3, [r7, #12]
 8004984:	0c1b      	lsrs	r3, r3, #16
 8004986:	220f      	movs	r2, #15
 8004988:	4013      	ands	r3, r2
 800498a:	627b      	str	r3, [r7, #36]	@ 0x24
 800498c:	4b1d      	ldr	r3, [pc, #116]	@ (8004a04 <HAL_RCC_MCOConfig+0xc0>)
 800498e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004990:	2201      	movs	r2, #1
 8004992:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004994:	409a      	lsls	r2, r3
 8004996:	4b1b      	ldr	r3, [pc, #108]	@ (8004a04 <HAL_RCC_MCOConfig+0xc0>)
 8004998:	430a      	orrs	r2, r1
 800499a:	635a      	str	r2, [r3, #52]	@ 0x34
 800499c:	68fb      	ldr	r3, [r7, #12]
 800499e:	041b      	lsls	r3, r3, #16
 80049a0:	0c1a      	lsrs	r2, r3, #16
 80049a2:	183b      	adds	r3, r7, r0
 80049a4:	601a      	str	r2, [r3, #0]
 80049a6:	68fb      	ldr	r3, [r7, #12]
 80049a8:	0d1b      	lsrs	r3, r3, #20
 80049aa:	22ff      	movs	r2, #255	@ 0xff
 80049ac:	401a      	ands	r2, r3
 80049ae:	183b      	adds	r3, r7, r0
 80049b0:	611a      	str	r2, [r3, #16]
 80049b2:	183a      	adds	r2, r7, r0
 80049b4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80049b6:	0011      	movs	r1, r2
 80049b8:	0018      	movs	r0, r3
 80049ba:	f7ff f94d 	bl	8003c58 <HAL_GPIO_Init>
 80049be:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d10a      	bne.n	80049da <HAL_RCC_MCOConfig+0x96>
 80049c4:	4b0f      	ldr	r3, [pc, #60]	@ (8004a04 <HAL_RCC_MCOConfig+0xc0>)
 80049c6:	689b      	ldr	r3, [r3, #8]
 80049c8:	021b      	lsls	r3, r3, #8
 80049ca:	0a19      	lsrs	r1, r3, #8
 80049cc:	68ba      	ldr	r2, [r7, #8]
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	431a      	orrs	r2, r3
 80049d2:	4b0c      	ldr	r3, [pc, #48]	@ (8004a04 <HAL_RCC_MCOConfig+0xc0>)
 80049d4:	430a      	orrs	r2, r1
 80049d6:	609a      	str	r2, [r3, #8]
 80049d8:	e00f      	b.n	80049fa <HAL_RCC_MCOConfig+0xb6>
 80049da:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80049dc:	2380      	movs	r3, #128	@ 0x80
 80049de:	055b      	lsls	r3, r3, #21
 80049e0:	429a      	cmp	r2, r3
 80049e2:	d10a      	bne.n	80049fa <HAL_RCC_MCOConfig+0xb6>
 80049e4:	4b07      	ldr	r3, [pc, #28]	@ (8004a04 <HAL_RCC_MCOConfig+0xc0>)
 80049e6:	689b      	ldr	r3, [r3, #8]
 80049e8:	4a07      	ldr	r2, [pc, #28]	@ (8004a08 <HAL_RCC_MCOConfig+0xc4>)
 80049ea:	4013      	ands	r3, r2
 80049ec:	0019      	movs	r1, r3
 80049ee:	68ba      	ldr	r2, [r7, #8]
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	431a      	orrs	r2, r3
 80049f4:	4b03      	ldr	r3, [pc, #12]	@ (8004a04 <HAL_RCC_MCOConfig+0xc0>)
 80049f6:	430a      	orrs	r2, r1
 80049f8:	609a      	str	r2, [r3, #8]
 80049fa:	46c0      	nop			@ (mov r8, r8)
 80049fc:	46bd      	mov	sp, r7
 80049fe:	b00c      	add	sp, #48	@ 0x30
 8004a00:	bd80      	pop	{r7, pc}
 8004a02:	46c0      	nop			@ (mov r8, r8)
 8004a04:	40021000 	.word	0x40021000
 8004a08:	ff00ffff 	.word	0xff00ffff

08004a0c <HAL_RCC_GetSysClockFreq>:
 8004a0c:	b580      	push	{r7, lr}
 8004a0e:	b086      	sub	sp, #24
 8004a10:	af00      	add	r7, sp, #0
 8004a12:	4b3c      	ldr	r3, [pc, #240]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004a14:	689b      	ldr	r3, [r3, #8]
 8004a16:	2238      	movs	r2, #56	@ 0x38
 8004a18:	4013      	ands	r3, r2
 8004a1a:	d10f      	bne.n	8004a3c <HAL_RCC_GetSysClockFreq+0x30>
 8004a1c:	4b39      	ldr	r3, [pc, #228]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004a1e:	681b      	ldr	r3, [r3, #0]
 8004a20:	0adb      	lsrs	r3, r3, #11
 8004a22:	2207      	movs	r2, #7
 8004a24:	4013      	ands	r3, r2
 8004a26:	2201      	movs	r2, #1
 8004a28:	409a      	lsls	r2, r3
 8004a2a:	0013      	movs	r3, r2
 8004a2c:	603b      	str	r3, [r7, #0]
 8004a2e:	6839      	ldr	r1, [r7, #0]
 8004a30:	4835      	ldr	r0, [pc, #212]	@ (8004b08 <HAL_RCC_GetSysClockFreq+0xfc>)
 8004a32:	f7fb fb6f 	bl	8000114 <__udivsi3>
 8004a36:	0003      	movs	r3, r0
 8004a38:	613b      	str	r3, [r7, #16]
 8004a3a:	e05d      	b.n	8004af8 <HAL_RCC_GetSysClockFreq+0xec>
 8004a3c:	4b31      	ldr	r3, [pc, #196]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004a3e:	689b      	ldr	r3, [r3, #8]
 8004a40:	2238      	movs	r2, #56	@ 0x38
 8004a42:	4013      	ands	r3, r2
 8004a44:	2b08      	cmp	r3, #8
 8004a46:	d102      	bne.n	8004a4e <HAL_RCC_GetSysClockFreq+0x42>
 8004a48:	4b30      	ldr	r3, [pc, #192]	@ (8004b0c <HAL_RCC_GetSysClockFreq+0x100>)
 8004a4a:	613b      	str	r3, [r7, #16]
 8004a4c:	e054      	b.n	8004af8 <HAL_RCC_GetSysClockFreq+0xec>
 8004a4e:	4b2d      	ldr	r3, [pc, #180]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004a50:	689b      	ldr	r3, [r3, #8]
 8004a52:	2238      	movs	r2, #56	@ 0x38
 8004a54:	4013      	ands	r3, r2
 8004a56:	2b10      	cmp	r3, #16
 8004a58:	d138      	bne.n	8004acc <HAL_RCC_GetSysClockFreq+0xc0>
 8004a5a:	4b2a      	ldr	r3, [pc, #168]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004a5c:	68db      	ldr	r3, [r3, #12]
 8004a5e:	2203      	movs	r2, #3
 8004a60:	4013      	ands	r3, r2
 8004a62:	60fb      	str	r3, [r7, #12]
 8004a64:	4b27      	ldr	r3, [pc, #156]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004a66:	68db      	ldr	r3, [r3, #12]
 8004a68:	091b      	lsrs	r3, r3, #4
 8004a6a:	2207      	movs	r2, #7
 8004a6c:	4013      	ands	r3, r2
 8004a6e:	3301      	adds	r3, #1
 8004a70:	60bb      	str	r3, [r7, #8]
 8004a72:	68fb      	ldr	r3, [r7, #12]
 8004a74:	2b03      	cmp	r3, #3
 8004a76:	d10d      	bne.n	8004a94 <HAL_RCC_GetSysClockFreq+0x88>
 8004a78:	68b9      	ldr	r1, [r7, #8]
 8004a7a:	4824      	ldr	r0, [pc, #144]	@ (8004b0c <HAL_RCC_GetSysClockFreq+0x100>)
 8004a7c:	f7fb fb4a 	bl	8000114 <__udivsi3>
 8004a80:	0003      	movs	r3, r0
 8004a82:	0019      	movs	r1, r3
 8004a84:	4b1f      	ldr	r3, [pc, #124]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004a86:	68db      	ldr	r3, [r3, #12]
 8004a88:	0a1b      	lsrs	r3, r3, #8
 8004a8a:	227f      	movs	r2, #127	@ 0x7f
 8004a8c:	4013      	ands	r3, r2
 8004a8e:	434b      	muls	r3, r1
 8004a90:	617b      	str	r3, [r7, #20]
 8004a92:	e00d      	b.n	8004ab0 <HAL_RCC_GetSysClockFreq+0xa4>
 8004a94:	68b9      	ldr	r1, [r7, #8]
 8004a96:	481c      	ldr	r0, [pc, #112]	@ (8004b08 <HAL_RCC_GetSysClockFreq+0xfc>)
 8004a98:	f7fb fb3c 	bl	8000114 <__udivsi3>
 8004a9c:	0003      	movs	r3, r0
 8004a9e:	0019      	movs	r1, r3
 8004aa0:	4b18      	ldr	r3, [pc, #96]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004aa2:	68db      	ldr	r3, [r3, #12]
 8004aa4:	0a1b      	lsrs	r3, r3, #8
 8004aa6:	227f      	movs	r2, #127	@ 0x7f
 8004aa8:	4013      	ands	r3, r2
 8004aaa:	434b      	muls	r3, r1
 8004aac:	617b      	str	r3, [r7, #20]
 8004aae:	46c0      	nop			@ (mov r8, r8)
 8004ab0:	4b14      	ldr	r3, [pc, #80]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004ab2:	68db      	ldr	r3, [r3, #12]
 8004ab4:	0f5b      	lsrs	r3, r3, #29
 8004ab6:	2207      	movs	r2, #7
 8004ab8:	4013      	ands	r3, r2
 8004aba:	3301      	adds	r3, #1
 8004abc:	607b      	str	r3, [r7, #4]
 8004abe:	6879      	ldr	r1, [r7, #4]
 8004ac0:	6978      	ldr	r0, [r7, #20]
 8004ac2:	f7fb fb27 	bl	8000114 <__udivsi3>
 8004ac6:	0003      	movs	r3, r0
 8004ac8:	613b      	str	r3, [r7, #16]
 8004aca:	e015      	b.n	8004af8 <HAL_RCC_GetSysClockFreq+0xec>
 8004acc:	4b0d      	ldr	r3, [pc, #52]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004ace:	689b      	ldr	r3, [r3, #8]
 8004ad0:	2238      	movs	r2, #56	@ 0x38
 8004ad2:	4013      	ands	r3, r2
 8004ad4:	2b20      	cmp	r3, #32
 8004ad6:	d103      	bne.n	8004ae0 <HAL_RCC_GetSysClockFreq+0xd4>
 8004ad8:	2380      	movs	r3, #128	@ 0x80
 8004ada:	021b      	lsls	r3, r3, #8
 8004adc:	613b      	str	r3, [r7, #16]
 8004ade:	e00b      	b.n	8004af8 <HAL_RCC_GetSysClockFreq+0xec>
 8004ae0:	4b08      	ldr	r3, [pc, #32]	@ (8004b04 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004ae2:	689b      	ldr	r3, [r3, #8]
 8004ae4:	2238      	movs	r2, #56	@ 0x38
 8004ae6:	4013      	ands	r3, r2
 8004ae8:	2b18      	cmp	r3, #24
 8004aea:	d103      	bne.n	8004af4 <HAL_RCC_GetSysClockFreq+0xe8>
 8004aec:	23fa      	movs	r3, #250	@ 0xfa
 8004aee:	01db      	lsls	r3, r3, #7
 8004af0:	613b      	str	r3, [r7, #16]
 8004af2:	e001      	b.n	8004af8 <HAL_RCC_GetSysClockFreq+0xec>
 8004af4:	2300      	movs	r3, #0
 8004af6:	613b      	str	r3, [r7, #16]
 8004af8:	693b      	ldr	r3, [r7, #16]
 8004afa:	0018      	movs	r0, r3
 8004afc:	46bd      	mov	sp, r7
 8004afe:	b006      	add	sp, #24
 8004b00:	bd80      	pop	{r7, pc}
 8004b02:	46c0      	nop			@ (mov r8, r8)
 8004b04:	40021000 	.word	0x40021000
 8004b08:	00f42400 	.word	0x00f42400
 8004b0c:	007a1200 	.word	0x007a1200

08004b10 <HAL_RCC_GetHCLKFreq>:
 8004b10:	b580      	push	{r7, lr}
 8004b12:	af00      	add	r7, sp, #0
 8004b14:	4b02      	ldr	r3, [pc, #8]	@ (8004b20 <HAL_RCC_GetHCLKFreq+0x10>)
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	0018      	movs	r0, r3
 8004b1a:	46bd      	mov	sp, r7
 8004b1c:	bd80      	pop	{r7, pc}
 8004b1e:	46c0      	nop			@ (mov r8, r8)
 8004b20:	20000008 	.word	0x20000008

08004b24 <HAL_RCC_GetPCLK1Freq>:
 8004b24:	b5b0      	push	{r4, r5, r7, lr}
 8004b26:	af00      	add	r7, sp, #0
 8004b28:	f7ff fff2 	bl	8004b10 <HAL_RCC_GetHCLKFreq>
 8004b2c:	0004      	movs	r4, r0
 8004b2e:	f7ff fa95 	bl	800405c <LL_RCC_GetAPB1Prescaler>
 8004b32:	0003      	movs	r3, r0
 8004b34:	0b1a      	lsrs	r2, r3, #12
 8004b36:	4b05      	ldr	r3, [pc, #20]	@ (8004b4c <HAL_RCC_GetPCLK1Freq+0x28>)
 8004b38:	0092      	lsls	r2, r2, #2
 8004b3a:	58d3      	ldr	r3, [r2, r3]
 8004b3c:	221f      	movs	r2, #31
 8004b3e:	4013      	ands	r3, r2
 8004b40:	40dc      	lsrs	r4, r3
 8004b42:	0023      	movs	r3, r4
 8004b44:	0018      	movs	r0, r3
 8004b46:	46bd      	mov	sp, r7
 8004b48:	bdb0      	pop	{r4, r5, r7, pc}
 8004b4a:	46c0      	nop			@ (mov r8, r8)
 8004b4c:	080081a8 	.word	0x080081a8

08004b50 <HAL_RCCEx_PeriphCLKConfig>:
 8004b50:	b580      	push	{r7, lr}
 8004b52:	b086      	sub	sp, #24
 8004b54:	af00      	add	r7, sp, #0
 8004b56:	6078      	str	r0, [r7, #4]
 8004b58:	2313      	movs	r3, #19
 8004b5a:	18fb      	adds	r3, r7, r3
 8004b5c:	2200      	movs	r2, #0
 8004b5e:	701a      	strb	r2, [r3, #0]
 8004b60:	2312      	movs	r3, #18
 8004b62:	18fb      	adds	r3, r7, r3
 8004b64:	2200      	movs	r2, #0
 8004b66:	701a      	strb	r2, [r3, #0]
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	681a      	ldr	r2, [r3, #0]
 8004b6c:	2380      	movs	r3, #128	@ 0x80
 8004b6e:	029b      	lsls	r3, r3, #10
 8004b70:	4013      	ands	r3, r2
 8004b72:	d100      	bne.n	8004b76 <HAL_RCCEx_PeriphCLKConfig+0x26>
 8004b74:	e0ad      	b.n	8004cd2 <HAL_RCCEx_PeriphCLKConfig+0x182>
 8004b76:	2011      	movs	r0, #17
 8004b78:	183b      	adds	r3, r7, r0
 8004b7a:	2200      	movs	r2, #0
 8004b7c:	701a      	strb	r2, [r3, #0]
 8004b7e:	4b47      	ldr	r3, [pc, #284]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004b80:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004b82:	2380      	movs	r3, #128	@ 0x80
 8004b84:	055b      	lsls	r3, r3, #21
 8004b86:	4013      	ands	r3, r2
 8004b88:	d110      	bne.n	8004bac <HAL_RCCEx_PeriphCLKConfig+0x5c>
 8004b8a:	4b44      	ldr	r3, [pc, #272]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004b8c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004b8e:	4b43      	ldr	r3, [pc, #268]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004b90:	2180      	movs	r1, #128	@ 0x80
 8004b92:	0549      	lsls	r1, r1, #21
 8004b94:	430a      	orrs	r2, r1
 8004b96:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004b98:	4b40      	ldr	r3, [pc, #256]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004b9a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004b9c:	2380      	movs	r3, #128	@ 0x80
 8004b9e:	055b      	lsls	r3, r3, #21
 8004ba0:	4013      	ands	r3, r2
 8004ba2:	60bb      	str	r3, [r7, #8]
 8004ba4:	68bb      	ldr	r3, [r7, #8]
 8004ba6:	183b      	adds	r3, r7, r0
 8004ba8:	2201      	movs	r2, #1
 8004baa:	701a      	strb	r2, [r3, #0]
 8004bac:	4b3c      	ldr	r3, [pc, #240]	@ (8004ca0 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8004bae:	681a      	ldr	r2, [r3, #0]
 8004bb0:	4b3b      	ldr	r3, [pc, #236]	@ (8004ca0 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8004bb2:	2180      	movs	r1, #128	@ 0x80
 8004bb4:	0049      	lsls	r1, r1, #1
 8004bb6:	430a      	orrs	r2, r1
 8004bb8:	601a      	str	r2, [r3, #0]
 8004bba:	f7fe f85f 	bl	8002c7c <HAL_GetTick>
 8004bbe:	0003      	movs	r3, r0
 8004bc0:	60fb      	str	r3, [r7, #12]
 8004bc2:	e00b      	b.n	8004bdc <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8004bc4:	f7fe f85a 	bl	8002c7c <HAL_GetTick>
 8004bc8:	0002      	movs	r2, r0
 8004bca:	68fb      	ldr	r3, [r7, #12]
 8004bcc:	1ad3      	subs	r3, r2, r3
 8004bce:	2b02      	cmp	r3, #2
 8004bd0:	d904      	bls.n	8004bdc <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8004bd2:	2313      	movs	r3, #19
 8004bd4:	18fb      	adds	r3, r7, r3
 8004bd6:	2203      	movs	r2, #3
 8004bd8:	701a      	strb	r2, [r3, #0]
 8004bda:	e005      	b.n	8004be8 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8004bdc:	4b30      	ldr	r3, [pc, #192]	@ (8004ca0 <HAL_RCCEx_PeriphCLKConfig+0x150>)
 8004bde:	681a      	ldr	r2, [r3, #0]
 8004be0:	2380      	movs	r3, #128	@ 0x80
 8004be2:	005b      	lsls	r3, r3, #1
 8004be4:	4013      	ands	r3, r2
 8004be6:	d0ed      	beq.n	8004bc4 <HAL_RCCEx_PeriphCLKConfig+0x74>
 8004be8:	2313      	movs	r3, #19
 8004bea:	18fb      	adds	r3, r7, r3
 8004bec:	781b      	ldrb	r3, [r3, #0]
 8004bee:	2b00      	cmp	r3, #0
 8004bf0:	d15e      	bne.n	8004cb0 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8004bf2:	4b2a      	ldr	r3, [pc, #168]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004bf4:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004bf6:	23c0      	movs	r3, #192	@ 0xc0
 8004bf8:	009b      	lsls	r3, r3, #2
 8004bfa:	4013      	ands	r3, r2
 8004bfc:	617b      	str	r3, [r7, #20]
 8004bfe:	697b      	ldr	r3, [r7, #20]
 8004c00:	2b00      	cmp	r3, #0
 8004c02:	d019      	beq.n	8004c38 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004c08:	697a      	ldr	r2, [r7, #20]
 8004c0a:	429a      	cmp	r2, r3
 8004c0c:	d014      	beq.n	8004c38 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8004c0e:	4b23      	ldr	r3, [pc, #140]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004c10:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c12:	4a24      	ldr	r2, [pc, #144]	@ (8004ca4 <HAL_RCCEx_PeriphCLKConfig+0x154>)
 8004c14:	4013      	ands	r3, r2
 8004c16:	617b      	str	r3, [r7, #20]
 8004c18:	4b20      	ldr	r3, [pc, #128]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004c1a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004c1c:	4b1f      	ldr	r3, [pc, #124]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004c1e:	2180      	movs	r1, #128	@ 0x80
 8004c20:	0249      	lsls	r1, r1, #9
 8004c22:	430a      	orrs	r2, r1
 8004c24:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004c26:	4b1d      	ldr	r3, [pc, #116]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004c28:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004c2a:	4b1c      	ldr	r3, [pc, #112]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004c2c:	491e      	ldr	r1, [pc, #120]	@ (8004ca8 <HAL_RCCEx_PeriphCLKConfig+0x158>)
 8004c2e:	400a      	ands	r2, r1
 8004c30:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004c32:	4b1a      	ldr	r3, [pc, #104]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004c34:	697a      	ldr	r2, [r7, #20]
 8004c36:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004c38:	697b      	ldr	r3, [r7, #20]
 8004c3a:	2201      	movs	r2, #1
 8004c3c:	4013      	ands	r3, r2
 8004c3e:	d016      	beq.n	8004c6e <HAL_RCCEx_PeriphCLKConfig+0x11e>
 8004c40:	f7fe f81c 	bl	8002c7c <HAL_GetTick>
 8004c44:	0003      	movs	r3, r0
 8004c46:	60fb      	str	r3, [r7, #12]
 8004c48:	e00c      	b.n	8004c64 <HAL_RCCEx_PeriphCLKConfig+0x114>
 8004c4a:	f7fe f817 	bl	8002c7c <HAL_GetTick>
 8004c4e:	0002      	movs	r2, r0
 8004c50:	68fb      	ldr	r3, [r7, #12]
 8004c52:	1ad3      	subs	r3, r2, r3
 8004c54:	4a15      	ldr	r2, [pc, #84]	@ (8004cac <HAL_RCCEx_PeriphCLKConfig+0x15c>)
 8004c56:	4293      	cmp	r3, r2
 8004c58:	d904      	bls.n	8004c64 <HAL_RCCEx_PeriphCLKConfig+0x114>
 8004c5a:	2313      	movs	r3, #19
 8004c5c:	18fb      	adds	r3, r7, r3
 8004c5e:	2203      	movs	r2, #3
 8004c60:	701a      	strb	r2, [r3, #0]
 8004c62:	e004      	b.n	8004c6e <HAL_RCCEx_PeriphCLKConfig+0x11e>
 8004c64:	4b0d      	ldr	r3, [pc, #52]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004c66:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c68:	2202      	movs	r2, #2
 8004c6a:	4013      	ands	r3, r2
 8004c6c:	d0ed      	beq.n	8004c4a <HAL_RCCEx_PeriphCLKConfig+0xfa>
 8004c6e:	2313      	movs	r3, #19
 8004c70:	18fb      	adds	r3, r7, r3
 8004c72:	781b      	ldrb	r3, [r3, #0]
 8004c74:	2b00      	cmp	r3, #0
 8004c76:	d10a      	bne.n	8004c8e <HAL_RCCEx_PeriphCLKConfig+0x13e>
 8004c78:	4b08      	ldr	r3, [pc, #32]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004c7a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c7c:	4a09      	ldr	r2, [pc, #36]	@ (8004ca4 <HAL_RCCEx_PeriphCLKConfig+0x154>)
 8004c7e:	4013      	ands	r3, r2
 8004c80:	0019      	movs	r1, r3
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004c86:	4b05      	ldr	r3, [pc, #20]	@ (8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14c>)
 8004c88:	430a      	orrs	r2, r1
 8004c8a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004c8c:	e016      	b.n	8004cbc <HAL_RCCEx_PeriphCLKConfig+0x16c>
 8004c8e:	2312      	movs	r3, #18
 8004c90:	18fb      	adds	r3, r7, r3
 8004c92:	2213      	movs	r2, #19
 8004c94:	18ba      	adds	r2, r7, r2
 8004c96:	7812      	ldrb	r2, [r2, #0]
 8004c98:	701a      	strb	r2, [r3, #0]
 8004c9a:	e00f      	b.n	8004cbc <HAL_RCCEx_PeriphCLKConfig+0x16c>
 8004c9c:	40021000 	.word	0x40021000
 8004ca0:	40007000 	.word	0x40007000
 8004ca4:	fffffcff 	.word	0xfffffcff
 8004ca8:	fffeffff 	.word	0xfffeffff
 8004cac:	00001388 	.word	0x00001388
 8004cb0:	2312      	movs	r3, #18
 8004cb2:	18fb      	adds	r3, r7, r3
 8004cb4:	2213      	movs	r2, #19
 8004cb6:	18ba      	adds	r2, r7, r2
 8004cb8:	7812      	ldrb	r2, [r2, #0]
 8004cba:	701a      	strb	r2, [r3, #0]
 8004cbc:	2311      	movs	r3, #17
 8004cbe:	18fb      	adds	r3, r7, r3
 8004cc0:	781b      	ldrb	r3, [r3, #0]
 8004cc2:	2b01      	cmp	r3, #1
 8004cc4:	d105      	bne.n	8004cd2 <HAL_RCCEx_PeriphCLKConfig+0x182>
 8004cc6:	4bb6      	ldr	r3, [pc, #728]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004cc8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004cca:	4bb5      	ldr	r3, [pc, #724]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004ccc:	49b5      	ldr	r1, [pc, #724]	@ (8004fa4 <HAL_RCCEx_PeriphCLKConfig+0x454>)
 8004cce:	400a      	ands	r2, r1
 8004cd0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	2201      	movs	r2, #1
 8004cd8:	4013      	ands	r3, r2
 8004cda:	d009      	beq.n	8004cf0 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8004cdc:	4bb0      	ldr	r3, [pc, #704]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004cde:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004ce0:	2203      	movs	r2, #3
 8004ce2:	4393      	bics	r3, r2
 8004ce4:	0019      	movs	r1, r3
 8004ce6:	687b      	ldr	r3, [r7, #4]
 8004ce8:	685a      	ldr	r2, [r3, #4]
 8004cea:	4bad      	ldr	r3, [pc, #692]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004cec:	430a      	orrs	r2, r1
 8004cee:	655a      	str	r2, [r3, #84]	@ 0x54
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	2202      	movs	r2, #2
 8004cf6:	4013      	ands	r3, r2
 8004cf8:	d009      	beq.n	8004d0e <HAL_RCCEx_PeriphCLKConfig+0x1be>
 8004cfa:	4ba9      	ldr	r3, [pc, #676]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004cfc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004cfe:	220c      	movs	r2, #12
 8004d00:	4393      	bics	r3, r2
 8004d02:	0019      	movs	r1, r3
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	689a      	ldr	r2, [r3, #8]
 8004d08:	4ba5      	ldr	r3, [pc, #660]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d0a:	430a      	orrs	r2, r1
 8004d0c:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	2204      	movs	r2, #4
 8004d14:	4013      	ands	r3, r2
 8004d16:	d009      	beq.n	8004d2c <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8004d18:	4ba1      	ldr	r3, [pc, #644]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d1a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d1c:	2230      	movs	r2, #48	@ 0x30
 8004d1e:	4393      	bics	r3, r2
 8004d20:	0019      	movs	r1, r3
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	68da      	ldr	r2, [r3, #12]
 8004d26:	4b9e      	ldr	r3, [pc, #632]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d28:	430a      	orrs	r2, r1
 8004d2a:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	681b      	ldr	r3, [r3, #0]
 8004d30:	2210      	movs	r2, #16
 8004d32:	4013      	ands	r3, r2
 8004d34:	d009      	beq.n	8004d4a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8004d36:	4b9a      	ldr	r3, [pc, #616]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d38:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d3a:	4a9b      	ldr	r2, [pc, #620]	@ (8004fa8 <HAL_RCCEx_PeriphCLKConfig+0x458>)
 8004d3c:	4013      	ands	r3, r2
 8004d3e:	0019      	movs	r1, r3
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	691a      	ldr	r2, [r3, #16]
 8004d44:	4b96      	ldr	r3, [pc, #600]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d46:	430a      	orrs	r2, r1
 8004d48:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d4a:	687b      	ldr	r3, [r7, #4]
 8004d4c:	681a      	ldr	r2, [r3, #0]
 8004d4e:	2380      	movs	r3, #128	@ 0x80
 8004d50:	015b      	lsls	r3, r3, #5
 8004d52:	4013      	ands	r3, r2
 8004d54:	d009      	beq.n	8004d6a <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8004d56:	4b92      	ldr	r3, [pc, #584]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d58:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d5a:	4a94      	ldr	r2, [pc, #592]	@ (8004fac <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004d5c:	4013      	ands	r3, r2
 8004d5e:	0019      	movs	r1, r3
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	695a      	ldr	r2, [r3, #20]
 8004d64:	4b8e      	ldr	r3, [pc, #568]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d66:	430a      	orrs	r2, r1
 8004d68:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	681a      	ldr	r2, [r3, #0]
 8004d6e:	2380      	movs	r3, #128	@ 0x80
 8004d70:	009b      	lsls	r3, r3, #2
 8004d72:	4013      	ands	r3, r2
 8004d74:	d009      	beq.n	8004d8a <HAL_RCCEx_PeriphCLKConfig+0x23a>
 8004d76:	4b8a      	ldr	r3, [pc, #552]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d78:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d7a:	4a8d      	ldr	r2, [pc, #564]	@ (8004fb0 <HAL_RCCEx_PeriphCLKConfig+0x460>)
 8004d7c:	4013      	ands	r3, r2
 8004d7e:	0019      	movs	r1, r3
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004d84:	4b86      	ldr	r3, [pc, #536]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d86:	430a      	orrs	r2, r1
 8004d88:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	681a      	ldr	r2, [r3, #0]
 8004d8e:	2380      	movs	r3, #128	@ 0x80
 8004d90:	00db      	lsls	r3, r3, #3
 8004d92:	4013      	ands	r3, r2
 8004d94:	d009      	beq.n	8004daa <HAL_RCCEx_PeriphCLKConfig+0x25a>
 8004d96:	4b82      	ldr	r3, [pc, #520]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004d98:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d9a:	4a86      	ldr	r2, [pc, #536]	@ (8004fb4 <HAL_RCCEx_PeriphCLKConfig+0x464>)
 8004d9c:	4013      	ands	r3, r2
 8004d9e:	0019      	movs	r1, r3
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004da4:	4b7e      	ldr	r3, [pc, #504]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004da6:	430a      	orrs	r2, r1
 8004da8:	655a      	str	r2, [r3, #84]	@ 0x54
 8004daa:	687b      	ldr	r3, [r7, #4]
 8004dac:	681b      	ldr	r3, [r3, #0]
 8004dae:	2220      	movs	r2, #32
 8004db0:	4013      	ands	r3, r2
 8004db2:	d009      	beq.n	8004dc8 <HAL_RCCEx_PeriphCLKConfig+0x278>
 8004db4:	4b7a      	ldr	r3, [pc, #488]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004db6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004db8:	4a7f      	ldr	r2, [pc, #508]	@ (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x468>)
 8004dba:	4013      	ands	r3, r2
 8004dbc:	0019      	movs	r1, r3
 8004dbe:	687b      	ldr	r3, [r7, #4]
 8004dc0:	699a      	ldr	r2, [r3, #24]
 8004dc2:	4b77      	ldr	r3, [pc, #476]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004dc4:	430a      	orrs	r2, r1
 8004dc6:	655a      	str	r2, [r3, #84]	@ 0x54
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	2240      	movs	r2, #64	@ 0x40
 8004dce:	4013      	ands	r3, r2
 8004dd0:	d009      	beq.n	8004de6 <HAL_RCCEx_PeriphCLKConfig+0x296>
 8004dd2:	4b73      	ldr	r3, [pc, #460]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004dd4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004dd6:	4a79      	ldr	r2, [pc, #484]	@ (8004fbc <HAL_RCCEx_PeriphCLKConfig+0x46c>)
 8004dd8:	4013      	ands	r3, r2
 8004dda:	0019      	movs	r1, r3
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	69da      	ldr	r2, [r3, #28]
 8004de0:	4b6f      	ldr	r3, [pc, #444]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004de2:	430a      	orrs	r2, r1
 8004de4:	655a      	str	r2, [r3, #84]	@ 0x54
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	681a      	ldr	r2, [r3, #0]
 8004dea:	2380      	movs	r3, #128	@ 0x80
 8004dec:	01db      	lsls	r3, r3, #7
 8004dee:	4013      	ands	r3, r2
 8004df0:	d015      	beq.n	8004e1e <HAL_RCCEx_PeriphCLKConfig+0x2ce>
 8004df2:	4b6b      	ldr	r3, [pc, #428]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004df4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004df6:	009b      	lsls	r3, r3, #2
 8004df8:	0899      	lsrs	r1, r3, #2
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004dfe:	4b68      	ldr	r3, [pc, #416]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e00:	430a      	orrs	r2, r1
 8004e02:	655a      	str	r2, [r3, #84]	@ 0x54
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004e08:	2380      	movs	r3, #128	@ 0x80
 8004e0a:	05db      	lsls	r3, r3, #23
 8004e0c:	429a      	cmp	r2, r3
 8004e0e:	d106      	bne.n	8004e1e <HAL_RCCEx_PeriphCLKConfig+0x2ce>
 8004e10:	4b63      	ldr	r3, [pc, #396]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e12:	68da      	ldr	r2, [r3, #12]
 8004e14:	4b62      	ldr	r3, [pc, #392]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e16:	2180      	movs	r1, #128	@ 0x80
 8004e18:	0249      	lsls	r1, r1, #9
 8004e1a:	430a      	orrs	r2, r1
 8004e1c:	60da      	str	r2, [r3, #12]
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	681a      	ldr	r2, [r3, #0]
 8004e22:	2380      	movs	r3, #128	@ 0x80
 8004e24:	031b      	lsls	r3, r3, #12
 8004e26:	4013      	ands	r3, r2
 8004e28:	d009      	beq.n	8004e3e <HAL_RCCEx_PeriphCLKConfig+0x2ee>
 8004e2a:	4b5d      	ldr	r3, [pc, #372]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e2c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004e2e:	2240      	movs	r2, #64	@ 0x40
 8004e30:	4393      	bics	r3, r2
 8004e32:	0019      	movs	r1, r3
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004e38:	4b59      	ldr	r3, [pc, #356]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e3a:	430a      	orrs	r2, r1
 8004e3c:	655a      	str	r2, [r3, #84]	@ 0x54
 8004e3e:	687b      	ldr	r3, [r7, #4]
 8004e40:	681a      	ldr	r2, [r3, #0]
 8004e42:	2380      	movs	r3, #128	@ 0x80
 8004e44:	039b      	lsls	r3, r3, #14
 8004e46:	4013      	ands	r3, r2
 8004e48:	d016      	beq.n	8004e78 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8004e4a:	4b55      	ldr	r3, [pc, #340]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e4c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004e4e:	4a5c      	ldr	r2, [pc, #368]	@ (8004fc0 <HAL_RCCEx_PeriphCLKConfig+0x470>)
 8004e50:	4013      	ands	r3, r2
 8004e52:	0019      	movs	r1, r3
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004e58:	4b51      	ldr	r3, [pc, #324]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e5a:	430a      	orrs	r2, r1
 8004e5c:	655a      	str	r2, [r3, #84]	@ 0x54
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004e62:	2380      	movs	r3, #128	@ 0x80
 8004e64:	03db      	lsls	r3, r3, #15
 8004e66:	429a      	cmp	r2, r3
 8004e68:	d106      	bne.n	8004e78 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8004e6a:	4b4d      	ldr	r3, [pc, #308]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e6c:	68da      	ldr	r2, [r3, #12]
 8004e6e:	4b4c      	ldr	r3, [pc, #304]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e70:	2180      	movs	r1, #128	@ 0x80
 8004e72:	0449      	lsls	r1, r1, #17
 8004e74:	430a      	orrs	r2, r1
 8004e76:	60da      	str	r2, [r3, #12]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	681a      	ldr	r2, [r3, #0]
 8004e7c:	2380      	movs	r3, #128	@ 0x80
 8004e7e:	03db      	lsls	r3, r3, #15
 8004e80:	4013      	ands	r3, r2
 8004e82:	d016      	beq.n	8004eb2 <HAL_RCCEx_PeriphCLKConfig+0x362>
 8004e84:	4b46      	ldr	r3, [pc, #280]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e86:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004e88:	4a4e      	ldr	r2, [pc, #312]	@ (8004fc4 <HAL_RCCEx_PeriphCLKConfig+0x474>)
 8004e8a:	4013      	ands	r3, r2
 8004e8c:	0019      	movs	r1, r3
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004e92:	4b43      	ldr	r3, [pc, #268]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004e94:	430a      	orrs	r2, r1
 8004e96:	655a      	str	r2, [r3, #84]	@ 0x54
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004e9c:	2380      	movs	r3, #128	@ 0x80
 8004e9e:	045b      	lsls	r3, r3, #17
 8004ea0:	429a      	cmp	r2, r3
 8004ea2:	d106      	bne.n	8004eb2 <HAL_RCCEx_PeriphCLKConfig+0x362>
 8004ea4:	4b3e      	ldr	r3, [pc, #248]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004ea6:	68da      	ldr	r2, [r3, #12]
 8004ea8:	4b3d      	ldr	r3, [pc, #244]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004eaa:	2180      	movs	r1, #128	@ 0x80
 8004eac:	0449      	lsls	r1, r1, #17
 8004eae:	430a      	orrs	r2, r1
 8004eb0:	60da      	str	r2, [r3, #12]
 8004eb2:	687b      	ldr	r3, [r7, #4]
 8004eb4:	681a      	ldr	r2, [r3, #0]
 8004eb6:	2380      	movs	r3, #128	@ 0x80
 8004eb8:	011b      	lsls	r3, r3, #4
 8004eba:	4013      	ands	r3, r2
 8004ebc:	d014      	beq.n	8004ee8 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8004ebe:	4b38      	ldr	r3, [pc, #224]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004ec0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004ec2:	2203      	movs	r2, #3
 8004ec4:	4393      	bics	r3, r2
 8004ec6:	0019      	movs	r1, r3
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	6a1a      	ldr	r2, [r3, #32]
 8004ecc:	4b34      	ldr	r3, [pc, #208]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004ece:	430a      	orrs	r2, r1
 8004ed0:	659a      	str	r2, [r3, #88]	@ 0x58
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	6a1b      	ldr	r3, [r3, #32]
 8004ed6:	2b01      	cmp	r3, #1
 8004ed8:	d106      	bne.n	8004ee8 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8004eda:	4b31      	ldr	r3, [pc, #196]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004edc:	68da      	ldr	r2, [r3, #12]
 8004ede:	4b30      	ldr	r3, [pc, #192]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004ee0:	2180      	movs	r1, #128	@ 0x80
 8004ee2:	0249      	lsls	r1, r1, #9
 8004ee4:	430a      	orrs	r2, r1
 8004ee6:	60da      	str	r2, [r3, #12]
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	681a      	ldr	r2, [r3, #0]
 8004eec:	2380      	movs	r3, #128	@ 0x80
 8004eee:	019b      	lsls	r3, r3, #6
 8004ef0:	4013      	ands	r3, r2
 8004ef2:	d014      	beq.n	8004f1e <HAL_RCCEx_PeriphCLKConfig+0x3ce>
 8004ef4:	4b2a      	ldr	r3, [pc, #168]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004ef6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004ef8:	220c      	movs	r2, #12
 8004efa:	4393      	bics	r3, r2
 8004efc:	0019      	movs	r1, r3
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004f02:	4b27      	ldr	r3, [pc, #156]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f04:	430a      	orrs	r2, r1
 8004f06:	659a      	str	r2, [r3, #88]	@ 0x58
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f0c:	2b04      	cmp	r3, #4
 8004f0e:	d106      	bne.n	8004f1e <HAL_RCCEx_PeriphCLKConfig+0x3ce>
 8004f10:	4b23      	ldr	r3, [pc, #140]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f12:	68da      	ldr	r2, [r3, #12]
 8004f14:	4b22      	ldr	r3, [pc, #136]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f16:	2180      	movs	r1, #128	@ 0x80
 8004f18:	0249      	lsls	r1, r1, #9
 8004f1a:	430a      	orrs	r2, r1
 8004f1c:	60da      	str	r2, [r3, #12]
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	681a      	ldr	r2, [r3, #0]
 8004f22:	2380      	movs	r3, #128	@ 0x80
 8004f24:	045b      	lsls	r3, r3, #17
 8004f26:	4013      	ands	r3, r2
 8004f28:	d016      	beq.n	8004f58 <HAL_RCCEx_PeriphCLKConfig+0x408>
 8004f2a:	4b1d      	ldr	r3, [pc, #116]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f2c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004f2e:	4a22      	ldr	r2, [pc, #136]	@ (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x468>)
 8004f30:	4013      	ands	r3, r2
 8004f32:	0019      	movs	r1, r3
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004f38:	4b19      	ldr	r3, [pc, #100]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f3a:	430a      	orrs	r2, r1
 8004f3c:	659a      	str	r2, [r3, #88]	@ 0x58
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004f42:	2380      	movs	r3, #128	@ 0x80
 8004f44:	019b      	lsls	r3, r3, #6
 8004f46:	429a      	cmp	r2, r3
 8004f48:	d106      	bne.n	8004f58 <HAL_RCCEx_PeriphCLKConfig+0x408>
 8004f4a:	4b15      	ldr	r3, [pc, #84]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f4c:	68da      	ldr	r2, [r3, #12]
 8004f4e:	4b14      	ldr	r3, [pc, #80]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f50:	2180      	movs	r1, #128	@ 0x80
 8004f52:	0449      	lsls	r1, r1, #17
 8004f54:	430a      	orrs	r2, r1
 8004f56:	60da      	str	r2, [r3, #12]
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	681a      	ldr	r2, [r3, #0]
 8004f5c:	2380      	movs	r3, #128	@ 0x80
 8004f5e:	049b      	lsls	r3, r3, #18
 8004f60:	4013      	ands	r3, r2
 8004f62:	d016      	beq.n	8004f92 <HAL_RCCEx_PeriphCLKConfig+0x442>
 8004f64:	4b0e      	ldr	r3, [pc, #56]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f66:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004f68:	4a10      	ldr	r2, [pc, #64]	@ (8004fac <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f6a:	4013      	ands	r3, r2
 8004f6c:	0019      	movs	r1, r3
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004f72:	4b0b      	ldr	r3, [pc, #44]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f74:	430a      	orrs	r2, r1
 8004f76:	659a      	str	r2, [r3, #88]	@ 0x58
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004f7c:	2380      	movs	r3, #128	@ 0x80
 8004f7e:	005b      	lsls	r3, r3, #1
 8004f80:	429a      	cmp	r2, r3
 8004f82:	d106      	bne.n	8004f92 <HAL_RCCEx_PeriphCLKConfig+0x442>
 8004f84:	4b06      	ldr	r3, [pc, #24]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f86:	68da      	ldr	r2, [r3, #12]
 8004f88:	4b05      	ldr	r3, [pc, #20]	@ (8004fa0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8004f8a:	2180      	movs	r1, #128	@ 0x80
 8004f8c:	0449      	lsls	r1, r1, #17
 8004f8e:	430a      	orrs	r2, r1
 8004f90:	60da      	str	r2, [r3, #12]
 8004f92:	2312      	movs	r3, #18
 8004f94:	18fb      	adds	r3, r7, r3
 8004f96:	781b      	ldrb	r3, [r3, #0]
 8004f98:	0018      	movs	r0, r3
 8004f9a:	46bd      	mov	sp, r7
 8004f9c:	b006      	add	sp, #24
 8004f9e:	bd80      	pop	{r7, pc}
 8004fa0:	40021000 	.word	0x40021000
 8004fa4:	efffffff 	.word	0xefffffff
 8004fa8:	fffff3ff 	.word	0xfffff3ff
 8004fac:	fffffcff 	.word	0xfffffcff
 8004fb0:	fff3ffff 	.word	0xfff3ffff
 8004fb4:	ffcfffff 	.word	0xffcfffff
 8004fb8:	ffffcfff 	.word	0xffffcfff
 8004fbc:	ffff3fff 	.word	0xffff3fff
 8004fc0:	ffbfffff 	.word	0xffbfffff
 8004fc4:	feffffff 	.word	0xfeffffff

08004fc8 <HAL_TIM_Base_Init>:
 8004fc8:	b580      	push	{r7, lr}
 8004fca:	b082      	sub	sp, #8
 8004fcc:	af00      	add	r7, sp, #0
 8004fce:	6078      	str	r0, [r7, #4]
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	d101      	bne.n	8004fda <HAL_TIM_Base_Init+0x12>
 8004fd6:	2301      	movs	r3, #1
 8004fd8:	e04a      	b.n	8005070 <HAL_TIM_Base_Init+0xa8>
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	223d      	movs	r2, #61	@ 0x3d
 8004fde:	5c9b      	ldrb	r3, [r3, r2]
 8004fe0:	b2db      	uxtb	r3, r3
 8004fe2:	2b00      	cmp	r3, #0
 8004fe4:	d107      	bne.n	8004ff6 <HAL_TIM_Base_Init+0x2e>
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	223c      	movs	r2, #60	@ 0x3c
 8004fea:	2100      	movs	r1, #0
 8004fec:	5499      	strb	r1, [r3, r2]
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	0018      	movs	r0, r3
 8004ff2:	f7fd fc3d 	bl	8002870 <HAL_TIM_Base_MspInit>
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	223d      	movs	r2, #61	@ 0x3d
 8004ffa:	2102      	movs	r1, #2
 8004ffc:	5499      	strb	r1, [r3, r2]
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	681a      	ldr	r2, [r3, #0]
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	3304      	adds	r3, #4
 8005006:	0019      	movs	r1, r3
 8005008:	0010      	movs	r0, r2
 800500a:	f000 fa47 	bl	800549c <TIM_Base_SetConfig>
 800500e:	687b      	ldr	r3, [r7, #4]
 8005010:	2248      	movs	r2, #72	@ 0x48
 8005012:	2101      	movs	r1, #1
 8005014:	5499      	strb	r1, [r3, r2]
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	223e      	movs	r2, #62	@ 0x3e
 800501a:	2101      	movs	r1, #1
 800501c:	5499      	strb	r1, [r3, r2]
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	223f      	movs	r2, #63	@ 0x3f
 8005022:	2101      	movs	r1, #1
 8005024:	5499      	strb	r1, [r3, r2]
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	2240      	movs	r2, #64	@ 0x40
 800502a:	2101      	movs	r1, #1
 800502c:	5499      	strb	r1, [r3, r2]
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	2241      	movs	r2, #65	@ 0x41
 8005032:	2101      	movs	r1, #1
 8005034:	5499      	strb	r1, [r3, r2]
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	2242      	movs	r2, #66	@ 0x42
 800503a:	2101      	movs	r1, #1
 800503c:	5499      	strb	r1, [r3, r2]
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	2243      	movs	r2, #67	@ 0x43
 8005042:	2101      	movs	r1, #1
 8005044:	5499      	strb	r1, [r3, r2]
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	2244      	movs	r2, #68	@ 0x44
 800504a:	2101      	movs	r1, #1
 800504c:	5499      	strb	r1, [r3, r2]
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	2245      	movs	r2, #69	@ 0x45
 8005052:	2101      	movs	r1, #1
 8005054:	5499      	strb	r1, [r3, r2]
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	2246      	movs	r2, #70	@ 0x46
 800505a:	2101      	movs	r1, #1
 800505c:	5499      	strb	r1, [r3, r2]
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	2247      	movs	r2, #71	@ 0x47
 8005062:	2101      	movs	r1, #1
 8005064:	5499      	strb	r1, [r3, r2]
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	223d      	movs	r2, #61	@ 0x3d
 800506a:	2101      	movs	r1, #1
 800506c:	5499      	strb	r1, [r3, r2]
 800506e:	2300      	movs	r3, #0
 8005070:	0018      	movs	r0, r3
 8005072:	46bd      	mov	sp, r7
 8005074:	b002      	add	sp, #8
 8005076:	bd80      	pop	{r7, pc}

08005078 <HAL_TIM_Base_Start>:
 8005078:	b580      	push	{r7, lr}
 800507a:	b084      	sub	sp, #16
 800507c:	af00      	add	r7, sp, #0
 800507e:	6078      	str	r0, [r7, #4]
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	223d      	movs	r2, #61	@ 0x3d
 8005084:	5c9b      	ldrb	r3, [r3, r2]
 8005086:	b2db      	uxtb	r3, r3
 8005088:	2b01      	cmp	r3, #1
 800508a:	d001      	beq.n	8005090 <HAL_TIM_Base_Start+0x18>
 800508c:	2301      	movs	r3, #1
 800508e:	e03f      	b.n	8005110 <HAL_TIM_Base_Start+0x98>
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	223d      	movs	r2, #61	@ 0x3d
 8005094:	2102      	movs	r1, #2
 8005096:	5499      	strb	r1, [r3, r2]
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	4a1e      	ldr	r2, [pc, #120]	@ (8005118 <HAL_TIM_Base_Start+0xa0>)
 800509e:	4293      	cmp	r3, r2
 80050a0:	d014      	beq.n	80050cc <HAL_TIM_Base_Start+0x54>
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	681a      	ldr	r2, [r3, #0]
 80050a6:	2380      	movs	r3, #128	@ 0x80
 80050a8:	05db      	lsls	r3, r3, #23
 80050aa:	429a      	cmp	r2, r3
 80050ac:	d00e      	beq.n	80050cc <HAL_TIM_Base_Start+0x54>
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	4a1a      	ldr	r2, [pc, #104]	@ (800511c <HAL_TIM_Base_Start+0xa4>)
 80050b4:	4293      	cmp	r3, r2
 80050b6:	d009      	beq.n	80050cc <HAL_TIM_Base_Start+0x54>
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	681b      	ldr	r3, [r3, #0]
 80050bc:	4a18      	ldr	r2, [pc, #96]	@ (8005120 <HAL_TIM_Base_Start+0xa8>)
 80050be:	4293      	cmp	r3, r2
 80050c0:	d004      	beq.n	80050cc <HAL_TIM_Base_Start+0x54>
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	4a17      	ldr	r2, [pc, #92]	@ (8005124 <HAL_TIM_Base_Start+0xac>)
 80050c8:	4293      	cmp	r3, r2
 80050ca:	d116      	bne.n	80050fa <HAL_TIM_Base_Start+0x82>
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	689b      	ldr	r3, [r3, #8]
 80050d2:	4a15      	ldr	r2, [pc, #84]	@ (8005128 <HAL_TIM_Base_Start+0xb0>)
 80050d4:	4013      	ands	r3, r2
 80050d6:	60fb      	str	r3, [r7, #12]
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	2b06      	cmp	r3, #6
 80050dc:	d016      	beq.n	800510c <HAL_TIM_Base_Start+0x94>
 80050de:	68fa      	ldr	r2, [r7, #12]
 80050e0:	2380      	movs	r3, #128	@ 0x80
 80050e2:	025b      	lsls	r3, r3, #9
 80050e4:	429a      	cmp	r2, r3
 80050e6:	d011      	beq.n	800510c <HAL_TIM_Base_Start+0x94>
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	681a      	ldr	r2, [r3, #0]
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	681b      	ldr	r3, [r3, #0]
 80050f2:	2101      	movs	r1, #1
 80050f4:	430a      	orrs	r2, r1
 80050f6:	601a      	str	r2, [r3, #0]
 80050f8:	e008      	b.n	800510c <HAL_TIM_Base_Start+0x94>
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	681b      	ldr	r3, [r3, #0]
 80050fe:	681a      	ldr	r2, [r3, #0]
 8005100:	687b      	ldr	r3, [r7, #4]
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	2101      	movs	r1, #1
 8005106:	430a      	orrs	r2, r1
 8005108:	601a      	str	r2, [r3, #0]
 800510a:	e000      	b.n	800510e <HAL_TIM_Base_Start+0x96>
 800510c:	46c0      	nop			@ (mov r8, r8)
 800510e:	2300      	movs	r3, #0
 8005110:	0018      	movs	r0, r3
 8005112:	46bd      	mov	sp, r7
 8005114:	b004      	add	sp, #16
 8005116:	bd80      	pop	{r7, pc}
 8005118:	40012c00 	.word	0x40012c00
 800511c:	40000400 	.word	0x40000400
 8005120:	40000800 	.word	0x40000800
 8005124:	40014000 	.word	0x40014000
 8005128:	00010007 	.word	0x00010007

0800512c <HAL_TIM_Base_Stop>:
 800512c:	b580      	push	{r7, lr}
 800512e:	b082      	sub	sp, #8
 8005130:	af00      	add	r7, sp, #0
 8005132:	6078      	str	r0, [r7, #4]
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	6a1b      	ldr	r3, [r3, #32]
 800513a:	4a0d      	ldr	r2, [pc, #52]	@ (8005170 <HAL_TIM_Base_Stop+0x44>)
 800513c:	4013      	ands	r3, r2
 800513e:	d10d      	bne.n	800515c <HAL_TIM_Base_Stop+0x30>
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	6a1b      	ldr	r3, [r3, #32]
 8005146:	4a0b      	ldr	r2, [pc, #44]	@ (8005174 <HAL_TIM_Base_Stop+0x48>)
 8005148:	4013      	ands	r3, r2
 800514a:	d107      	bne.n	800515c <HAL_TIM_Base_Stop+0x30>
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	681a      	ldr	r2, [r3, #0]
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	681b      	ldr	r3, [r3, #0]
 8005156:	2101      	movs	r1, #1
 8005158:	438a      	bics	r2, r1
 800515a:	601a      	str	r2, [r3, #0]
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	223d      	movs	r2, #61	@ 0x3d
 8005160:	2101      	movs	r1, #1
 8005162:	5499      	strb	r1, [r3, r2]
 8005164:	2300      	movs	r3, #0
 8005166:	0018      	movs	r0, r3
 8005168:	46bd      	mov	sp, r7
 800516a:	b002      	add	sp, #8
 800516c:	bd80      	pop	{r7, pc}
 800516e:	46c0      	nop			@ (mov r8, r8)
 8005170:	00001111 	.word	0x00001111
 8005174:	00000444 	.word	0x00000444

08005178 <HAL_TIM_Base_Start_IT>:
 8005178:	b580      	push	{r7, lr}
 800517a:	b084      	sub	sp, #16
 800517c:	af00      	add	r7, sp, #0
 800517e:	6078      	str	r0, [r7, #4]
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	223d      	movs	r2, #61	@ 0x3d
 8005184:	5c9b      	ldrb	r3, [r3, r2]
 8005186:	b2db      	uxtb	r3, r3
 8005188:	2b01      	cmp	r3, #1
 800518a:	d001      	beq.n	8005190 <HAL_TIM_Base_Start_IT+0x18>
 800518c:	2301      	movs	r3, #1
 800518e:	e047      	b.n	8005220 <HAL_TIM_Base_Start_IT+0xa8>
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	223d      	movs	r2, #61	@ 0x3d
 8005194:	2102      	movs	r1, #2
 8005196:	5499      	strb	r1, [r3, r2]
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	681b      	ldr	r3, [r3, #0]
 800519c:	68da      	ldr	r2, [r3, #12]
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	681b      	ldr	r3, [r3, #0]
 80051a2:	2101      	movs	r1, #1
 80051a4:	430a      	orrs	r2, r1
 80051a6:	60da      	str	r2, [r3, #12]
 80051a8:	687b      	ldr	r3, [r7, #4]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	4a1e      	ldr	r2, [pc, #120]	@ (8005228 <HAL_TIM_Base_Start_IT+0xb0>)
 80051ae:	4293      	cmp	r3, r2
 80051b0:	d014      	beq.n	80051dc <HAL_TIM_Base_Start_IT+0x64>
 80051b2:	687b      	ldr	r3, [r7, #4]
 80051b4:	681a      	ldr	r2, [r3, #0]
 80051b6:	2380      	movs	r3, #128	@ 0x80
 80051b8:	05db      	lsls	r3, r3, #23
 80051ba:	429a      	cmp	r2, r3
 80051bc:	d00e      	beq.n	80051dc <HAL_TIM_Base_Start_IT+0x64>
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	681b      	ldr	r3, [r3, #0]
 80051c2:	4a1a      	ldr	r2, [pc, #104]	@ (800522c <HAL_TIM_Base_Start_IT+0xb4>)
 80051c4:	4293      	cmp	r3, r2
 80051c6:	d009      	beq.n	80051dc <HAL_TIM_Base_Start_IT+0x64>
 80051c8:	687b      	ldr	r3, [r7, #4]
 80051ca:	681b      	ldr	r3, [r3, #0]
 80051cc:	4a18      	ldr	r2, [pc, #96]	@ (8005230 <HAL_TIM_Base_Start_IT+0xb8>)
 80051ce:	4293      	cmp	r3, r2
 80051d0:	d004      	beq.n	80051dc <HAL_TIM_Base_Start_IT+0x64>
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	4a17      	ldr	r2, [pc, #92]	@ (8005234 <HAL_TIM_Base_Start_IT+0xbc>)
 80051d8:	4293      	cmp	r3, r2
 80051da:	d116      	bne.n	800520a <HAL_TIM_Base_Start_IT+0x92>
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	689b      	ldr	r3, [r3, #8]
 80051e2:	4a15      	ldr	r2, [pc, #84]	@ (8005238 <HAL_TIM_Base_Start_IT+0xc0>)
 80051e4:	4013      	ands	r3, r2
 80051e6:	60fb      	str	r3, [r7, #12]
 80051e8:	68fb      	ldr	r3, [r7, #12]
 80051ea:	2b06      	cmp	r3, #6
 80051ec:	d016      	beq.n	800521c <HAL_TIM_Base_Start_IT+0xa4>
 80051ee:	68fa      	ldr	r2, [r7, #12]
 80051f0:	2380      	movs	r3, #128	@ 0x80
 80051f2:	025b      	lsls	r3, r3, #9
 80051f4:	429a      	cmp	r2, r3
 80051f6:	d011      	beq.n	800521c <HAL_TIM_Base_Start_IT+0xa4>
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	681b      	ldr	r3, [r3, #0]
 80051fc:	681a      	ldr	r2, [r3, #0]
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	2101      	movs	r1, #1
 8005204:	430a      	orrs	r2, r1
 8005206:	601a      	str	r2, [r3, #0]
 8005208:	e008      	b.n	800521c <HAL_TIM_Base_Start_IT+0xa4>
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	681b      	ldr	r3, [r3, #0]
 800520e:	681a      	ldr	r2, [r3, #0]
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	2101      	movs	r1, #1
 8005216:	430a      	orrs	r2, r1
 8005218:	601a      	str	r2, [r3, #0]
 800521a:	e000      	b.n	800521e <HAL_TIM_Base_Start_IT+0xa6>
 800521c:	46c0      	nop			@ (mov r8, r8)
 800521e:	2300      	movs	r3, #0
 8005220:	0018      	movs	r0, r3
 8005222:	46bd      	mov	sp, r7
 8005224:	b004      	add	sp, #16
 8005226:	bd80      	pop	{r7, pc}
 8005228:	40012c00 	.word	0x40012c00
 800522c:	40000400 	.word	0x40000400
 8005230:	40000800 	.word	0x40000800
 8005234:	40014000 	.word	0x40014000
 8005238:	00010007 	.word	0x00010007

0800523c <HAL_TIM_IRQHandler>:
 800523c:	b580      	push	{r7, lr}
 800523e:	b084      	sub	sp, #16
 8005240:	af00      	add	r7, sp, #0
 8005242:	6078      	str	r0, [r7, #4]
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	68db      	ldr	r3, [r3, #12]
 800524a:	60fb      	str	r3, [r7, #12]
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	691b      	ldr	r3, [r3, #16]
 8005252:	60bb      	str	r3, [r7, #8]
 8005254:	68bb      	ldr	r3, [r7, #8]
 8005256:	2202      	movs	r2, #2
 8005258:	4013      	ands	r3, r2
 800525a:	d021      	beq.n	80052a0 <HAL_TIM_IRQHandler+0x64>
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	2202      	movs	r2, #2
 8005260:	4013      	ands	r3, r2
 8005262:	d01d      	beq.n	80052a0 <HAL_TIM_IRQHandler+0x64>
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	2203      	movs	r2, #3
 800526a:	4252      	negs	r2, r2
 800526c:	611a      	str	r2, [r3, #16]
 800526e:	687b      	ldr	r3, [r7, #4]
 8005270:	2201      	movs	r2, #1
 8005272:	771a      	strb	r2, [r3, #28]
 8005274:	687b      	ldr	r3, [r7, #4]
 8005276:	681b      	ldr	r3, [r3, #0]
 8005278:	699b      	ldr	r3, [r3, #24]
 800527a:	2203      	movs	r2, #3
 800527c:	4013      	ands	r3, r2
 800527e:	d004      	beq.n	800528a <HAL_TIM_IRQHandler+0x4e>
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	0018      	movs	r0, r3
 8005284:	f000 f8f2 	bl	800546c <HAL_TIM_IC_CaptureCallback>
 8005288:	e007      	b.n	800529a <HAL_TIM_IRQHandler+0x5e>
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	0018      	movs	r0, r3
 800528e:	f000 f8e5 	bl	800545c <HAL_TIM_OC_DelayElapsedCallback>
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	0018      	movs	r0, r3
 8005296:	f000 f8f1 	bl	800547c <HAL_TIM_PWM_PulseFinishedCallback>
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	2200      	movs	r2, #0
 800529e:	771a      	strb	r2, [r3, #28]
 80052a0:	68bb      	ldr	r3, [r7, #8]
 80052a2:	2204      	movs	r2, #4
 80052a4:	4013      	ands	r3, r2
 80052a6:	d022      	beq.n	80052ee <HAL_TIM_IRQHandler+0xb2>
 80052a8:	68fb      	ldr	r3, [r7, #12]
 80052aa:	2204      	movs	r2, #4
 80052ac:	4013      	ands	r3, r2
 80052ae:	d01e      	beq.n	80052ee <HAL_TIM_IRQHandler+0xb2>
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	2205      	movs	r2, #5
 80052b6:	4252      	negs	r2, r2
 80052b8:	611a      	str	r2, [r3, #16]
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	2202      	movs	r2, #2
 80052be:	771a      	strb	r2, [r3, #28]
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	699a      	ldr	r2, [r3, #24]
 80052c6:	23c0      	movs	r3, #192	@ 0xc0
 80052c8:	009b      	lsls	r3, r3, #2
 80052ca:	4013      	ands	r3, r2
 80052cc:	d004      	beq.n	80052d8 <HAL_TIM_IRQHandler+0x9c>
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	0018      	movs	r0, r3
 80052d2:	f000 f8cb 	bl	800546c <HAL_TIM_IC_CaptureCallback>
 80052d6:	e007      	b.n	80052e8 <HAL_TIM_IRQHandler+0xac>
 80052d8:	687b      	ldr	r3, [r7, #4]
 80052da:	0018      	movs	r0, r3
 80052dc:	f000 f8be 	bl	800545c <HAL_TIM_OC_DelayElapsedCallback>
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	0018      	movs	r0, r3
 80052e4:	f000 f8ca 	bl	800547c <HAL_TIM_PWM_PulseFinishedCallback>
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	2200      	movs	r2, #0
 80052ec:	771a      	strb	r2, [r3, #28]
 80052ee:	68bb      	ldr	r3, [r7, #8]
 80052f0:	2208      	movs	r2, #8
 80052f2:	4013      	ands	r3, r2
 80052f4:	d021      	beq.n	800533a <HAL_TIM_IRQHandler+0xfe>
 80052f6:	68fb      	ldr	r3, [r7, #12]
 80052f8:	2208      	movs	r2, #8
 80052fa:	4013      	ands	r3, r2
 80052fc:	d01d      	beq.n	800533a <HAL_TIM_IRQHandler+0xfe>
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	2209      	movs	r2, #9
 8005304:	4252      	negs	r2, r2
 8005306:	611a      	str	r2, [r3, #16]
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	2204      	movs	r2, #4
 800530c:	771a      	strb	r2, [r3, #28]
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	69db      	ldr	r3, [r3, #28]
 8005314:	2203      	movs	r2, #3
 8005316:	4013      	ands	r3, r2
 8005318:	d004      	beq.n	8005324 <HAL_TIM_IRQHandler+0xe8>
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	0018      	movs	r0, r3
 800531e:	f000 f8a5 	bl	800546c <HAL_TIM_IC_CaptureCallback>
 8005322:	e007      	b.n	8005334 <HAL_TIM_IRQHandler+0xf8>
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	0018      	movs	r0, r3
 8005328:	f000 f898 	bl	800545c <HAL_TIM_OC_DelayElapsedCallback>
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	0018      	movs	r0, r3
 8005330:	f000 f8a4 	bl	800547c <HAL_TIM_PWM_PulseFinishedCallback>
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	2200      	movs	r2, #0
 8005338:	771a      	strb	r2, [r3, #28]
 800533a:	68bb      	ldr	r3, [r7, #8]
 800533c:	2210      	movs	r2, #16
 800533e:	4013      	ands	r3, r2
 8005340:	d022      	beq.n	8005388 <HAL_TIM_IRQHandler+0x14c>
 8005342:	68fb      	ldr	r3, [r7, #12]
 8005344:	2210      	movs	r2, #16
 8005346:	4013      	ands	r3, r2
 8005348:	d01e      	beq.n	8005388 <HAL_TIM_IRQHandler+0x14c>
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	681b      	ldr	r3, [r3, #0]
 800534e:	2211      	movs	r2, #17
 8005350:	4252      	negs	r2, r2
 8005352:	611a      	str	r2, [r3, #16]
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	2208      	movs	r2, #8
 8005358:	771a      	strb	r2, [r3, #28]
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	681b      	ldr	r3, [r3, #0]
 800535e:	69da      	ldr	r2, [r3, #28]
 8005360:	23c0      	movs	r3, #192	@ 0xc0
 8005362:	009b      	lsls	r3, r3, #2
 8005364:	4013      	ands	r3, r2
 8005366:	d004      	beq.n	8005372 <HAL_TIM_IRQHandler+0x136>
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	0018      	movs	r0, r3
 800536c:	f000 f87e 	bl	800546c <HAL_TIM_IC_CaptureCallback>
 8005370:	e007      	b.n	8005382 <HAL_TIM_IRQHandler+0x146>
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	0018      	movs	r0, r3
 8005376:	f000 f871 	bl	800545c <HAL_TIM_OC_DelayElapsedCallback>
 800537a:	687b      	ldr	r3, [r7, #4]
 800537c:	0018      	movs	r0, r3
 800537e:	f000 f87d 	bl	800547c <HAL_TIM_PWM_PulseFinishedCallback>
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	2200      	movs	r2, #0
 8005386:	771a      	strb	r2, [r3, #28]
 8005388:	68bb      	ldr	r3, [r7, #8]
 800538a:	2201      	movs	r2, #1
 800538c:	4013      	ands	r3, r2
 800538e:	d00c      	beq.n	80053aa <HAL_TIM_IRQHandler+0x16e>
 8005390:	68fb      	ldr	r3, [r7, #12]
 8005392:	2201      	movs	r2, #1
 8005394:	4013      	ands	r3, r2
 8005396:	d008      	beq.n	80053aa <HAL_TIM_IRQHandler+0x16e>
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	2202      	movs	r2, #2
 800539e:	4252      	negs	r2, r2
 80053a0:	611a      	str	r2, [r3, #16]
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	0018      	movs	r0, r3
 80053a6:	f000 f851 	bl	800544c <HAL_TIM_PeriodElapsedCallback>
 80053aa:	68bb      	ldr	r3, [r7, #8]
 80053ac:	2280      	movs	r2, #128	@ 0x80
 80053ae:	4013      	ands	r3, r2
 80053b0:	d104      	bne.n	80053bc <HAL_TIM_IRQHandler+0x180>
 80053b2:	68ba      	ldr	r2, [r7, #8]
 80053b4:	2380      	movs	r3, #128	@ 0x80
 80053b6:	019b      	lsls	r3, r3, #6
 80053b8:	4013      	ands	r3, r2
 80053ba:	d00b      	beq.n	80053d4 <HAL_TIM_IRQHandler+0x198>
 80053bc:	68fb      	ldr	r3, [r7, #12]
 80053be:	2280      	movs	r2, #128	@ 0x80
 80053c0:	4013      	ands	r3, r2
 80053c2:	d007      	beq.n	80053d4 <HAL_TIM_IRQHandler+0x198>
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	4a1e      	ldr	r2, [pc, #120]	@ (8005444 <HAL_TIM_IRQHandler+0x208>)
 80053ca:	611a      	str	r2, [r3, #16]
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	0018      	movs	r0, r3
 80053d0:	f000 f97a 	bl	80056c8 <HAL_TIMEx_BreakCallback>
 80053d4:	68ba      	ldr	r2, [r7, #8]
 80053d6:	2380      	movs	r3, #128	@ 0x80
 80053d8:	005b      	lsls	r3, r3, #1
 80053da:	4013      	ands	r3, r2
 80053dc:	d00b      	beq.n	80053f6 <HAL_TIM_IRQHandler+0x1ba>
 80053de:	68fb      	ldr	r3, [r7, #12]
 80053e0:	2280      	movs	r2, #128	@ 0x80
 80053e2:	4013      	ands	r3, r2
 80053e4:	d007      	beq.n	80053f6 <HAL_TIM_IRQHandler+0x1ba>
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	4a17      	ldr	r2, [pc, #92]	@ (8005448 <HAL_TIM_IRQHandler+0x20c>)
 80053ec:	611a      	str	r2, [r3, #16]
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	0018      	movs	r0, r3
 80053f2:	f000 f971 	bl	80056d8 <HAL_TIMEx_Break2Callback>
 80053f6:	68bb      	ldr	r3, [r7, #8]
 80053f8:	2240      	movs	r2, #64	@ 0x40
 80053fa:	4013      	ands	r3, r2
 80053fc:	d00c      	beq.n	8005418 <HAL_TIM_IRQHandler+0x1dc>
 80053fe:	68fb      	ldr	r3, [r7, #12]
 8005400:	2240      	movs	r2, #64	@ 0x40
 8005402:	4013      	ands	r3, r2
 8005404:	d008      	beq.n	8005418 <HAL_TIM_IRQHandler+0x1dc>
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	681b      	ldr	r3, [r3, #0]
 800540a:	2241      	movs	r2, #65	@ 0x41
 800540c:	4252      	negs	r2, r2
 800540e:	611a      	str	r2, [r3, #16]
 8005410:	687b      	ldr	r3, [r7, #4]
 8005412:	0018      	movs	r0, r3
 8005414:	f000 f83a 	bl	800548c <HAL_TIM_TriggerCallback>
 8005418:	68bb      	ldr	r3, [r7, #8]
 800541a:	2220      	movs	r2, #32
 800541c:	4013      	ands	r3, r2
 800541e:	d00c      	beq.n	800543a <HAL_TIM_IRQHandler+0x1fe>
 8005420:	68fb      	ldr	r3, [r7, #12]
 8005422:	2220      	movs	r2, #32
 8005424:	4013      	ands	r3, r2
 8005426:	d008      	beq.n	800543a <HAL_TIM_IRQHandler+0x1fe>
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	681b      	ldr	r3, [r3, #0]
 800542c:	2221      	movs	r2, #33	@ 0x21
 800542e:	4252      	negs	r2, r2
 8005430:	611a      	str	r2, [r3, #16]
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	0018      	movs	r0, r3
 8005436:	f000 f93f 	bl	80056b8 <HAL_TIMEx_CommutCallback>
 800543a:	46c0      	nop			@ (mov r8, r8)
 800543c:	46bd      	mov	sp, r7
 800543e:	b004      	add	sp, #16
 8005440:	bd80      	pop	{r7, pc}
 8005442:	46c0      	nop			@ (mov r8, r8)
 8005444:	ffffdf7f 	.word	0xffffdf7f
 8005448:	fffffeff 	.word	0xfffffeff

0800544c <HAL_TIM_PeriodElapsedCallback>:
 800544c:	b580      	push	{r7, lr}
 800544e:	b082      	sub	sp, #8
 8005450:	af00      	add	r7, sp, #0
 8005452:	6078      	str	r0, [r7, #4]
 8005454:	46c0      	nop			@ (mov r8, r8)
 8005456:	46bd      	mov	sp, r7
 8005458:	b002      	add	sp, #8
 800545a:	bd80      	pop	{r7, pc}

0800545c <HAL_TIM_OC_DelayElapsedCallback>:
 800545c:	b580      	push	{r7, lr}
 800545e:	b082      	sub	sp, #8
 8005460:	af00      	add	r7, sp, #0
 8005462:	6078      	str	r0, [r7, #4]
 8005464:	46c0      	nop			@ (mov r8, r8)
 8005466:	46bd      	mov	sp, r7
 8005468:	b002      	add	sp, #8
 800546a:	bd80      	pop	{r7, pc}

0800546c <HAL_TIM_IC_CaptureCallback>:
 800546c:	b580      	push	{r7, lr}
 800546e:	b082      	sub	sp, #8
 8005470:	af00      	add	r7, sp, #0
 8005472:	6078      	str	r0, [r7, #4]
 8005474:	46c0      	nop			@ (mov r8, r8)
 8005476:	46bd      	mov	sp, r7
 8005478:	b002      	add	sp, #8
 800547a:	bd80      	pop	{r7, pc}

0800547c <HAL_TIM_PWM_PulseFinishedCallback>:
 800547c:	b580      	push	{r7, lr}
 800547e:	b082      	sub	sp, #8
 8005480:	af00      	add	r7, sp, #0
 8005482:	6078      	str	r0, [r7, #4]
 8005484:	46c0      	nop			@ (mov r8, r8)
 8005486:	46bd      	mov	sp, r7
 8005488:	b002      	add	sp, #8
 800548a:	bd80      	pop	{r7, pc}

0800548c <HAL_TIM_TriggerCallback>:
 800548c:	b580      	push	{r7, lr}
 800548e:	b082      	sub	sp, #8
 8005490:	af00      	add	r7, sp, #0
 8005492:	6078      	str	r0, [r7, #4]
 8005494:	46c0      	nop			@ (mov r8, r8)
 8005496:	46bd      	mov	sp, r7
 8005498:	b002      	add	sp, #8
 800549a:	bd80      	pop	{r7, pc}

0800549c <TIM_Base_SetConfig>:
 800549c:	b580      	push	{r7, lr}
 800549e:	b084      	sub	sp, #16
 80054a0:	af00      	add	r7, sp, #0
 80054a2:	6078      	str	r0, [r7, #4]
 80054a4:	6039      	str	r1, [r7, #0]
 80054a6:	687b      	ldr	r3, [r7, #4]
 80054a8:	681b      	ldr	r3, [r3, #0]
 80054aa:	60fb      	str	r3, [r7, #12]
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	4a3f      	ldr	r2, [pc, #252]	@ (80055ac <TIM_Base_SetConfig+0x110>)
 80054b0:	4293      	cmp	r3, r2
 80054b2:	d00c      	beq.n	80054ce <TIM_Base_SetConfig+0x32>
 80054b4:	687a      	ldr	r2, [r7, #4]
 80054b6:	2380      	movs	r3, #128	@ 0x80
 80054b8:	05db      	lsls	r3, r3, #23
 80054ba:	429a      	cmp	r2, r3
 80054bc:	d007      	beq.n	80054ce <TIM_Base_SetConfig+0x32>
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	4a3b      	ldr	r2, [pc, #236]	@ (80055b0 <TIM_Base_SetConfig+0x114>)
 80054c2:	4293      	cmp	r3, r2
 80054c4:	d003      	beq.n	80054ce <TIM_Base_SetConfig+0x32>
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	4a3a      	ldr	r2, [pc, #232]	@ (80055b4 <TIM_Base_SetConfig+0x118>)
 80054ca:	4293      	cmp	r3, r2
 80054cc:	d108      	bne.n	80054e0 <TIM_Base_SetConfig+0x44>
 80054ce:	68fb      	ldr	r3, [r7, #12]
 80054d0:	2270      	movs	r2, #112	@ 0x70
 80054d2:	4393      	bics	r3, r2
 80054d4:	60fb      	str	r3, [r7, #12]
 80054d6:	683b      	ldr	r3, [r7, #0]
 80054d8:	685b      	ldr	r3, [r3, #4]
 80054da:	68fa      	ldr	r2, [r7, #12]
 80054dc:	4313      	orrs	r3, r2
 80054de:	60fb      	str	r3, [r7, #12]
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	4a32      	ldr	r2, [pc, #200]	@ (80055ac <TIM_Base_SetConfig+0x110>)
 80054e4:	4293      	cmp	r3, r2
 80054e6:	d01c      	beq.n	8005522 <TIM_Base_SetConfig+0x86>
 80054e8:	687a      	ldr	r2, [r7, #4]
 80054ea:	2380      	movs	r3, #128	@ 0x80
 80054ec:	05db      	lsls	r3, r3, #23
 80054ee:	429a      	cmp	r2, r3
 80054f0:	d017      	beq.n	8005522 <TIM_Base_SetConfig+0x86>
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	4a2e      	ldr	r2, [pc, #184]	@ (80055b0 <TIM_Base_SetConfig+0x114>)
 80054f6:	4293      	cmp	r3, r2
 80054f8:	d013      	beq.n	8005522 <TIM_Base_SetConfig+0x86>
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	4a2d      	ldr	r2, [pc, #180]	@ (80055b4 <TIM_Base_SetConfig+0x118>)
 80054fe:	4293      	cmp	r3, r2
 8005500:	d00f      	beq.n	8005522 <TIM_Base_SetConfig+0x86>
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	4a2c      	ldr	r2, [pc, #176]	@ (80055b8 <TIM_Base_SetConfig+0x11c>)
 8005506:	4293      	cmp	r3, r2
 8005508:	d00b      	beq.n	8005522 <TIM_Base_SetConfig+0x86>
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	4a2b      	ldr	r2, [pc, #172]	@ (80055bc <TIM_Base_SetConfig+0x120>)
 800550e:	4293      	cmp	r3, r2
 8005510:	d007      	beq.n	8005522 <TIM_Base_SetConfig+0x86>
 8005512:	687b      	ldr	r3, [r7, #4]
 8005514:	4a2a      	ldr	r2, [pc, #168]	@ (80055c0 <TIM_Base_SetConfig+0x124>)
 8005516:	4293      	cmp	r3, r2
 8005518:	d003      	beq.n	8005522 <TIM_Base_SetConfig+0x86>
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	4a29      	ldr	r2, [pc, #164]	@ (80055c4 <TIM_Base_SetConfig+0x128>)
 800551e:	4293      	cmp	r3, r2
 8005520:	d108      	bne.n	8005534 <TIM_Base_SetConfig+0x98>
 8005522:	68fb      	ldr	r3, [r7, #12]
 8005524:	4a28      	ldr	r2, [pc, #160]	@ (80055c8 <TIM_Base_SetConfig+0x12c>)
 8005526:	4013      	ands	r3, r2
 8005528:	60fb      	str	r3, [r7, #12]
 800552a:	683b      	ldr	r3, [r7, #0]
 800552c:	68db      	ldr	r3, [r3, #12]
 800552e:	68fa      	ldr	r2, [r7, #12]
 8005530:	4313      	orrs	r3, r2
 8005532:	60fb      	str	r3, [r7, #12]
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	2280      	movs	r2, #128	@ 0x80
 8005538:	4393      	bics	r3, r2
 800553a:	001a      	movs	r2, r3
 800553c:	683b      	ldr	r3, [r7, #0]
 800553e:	695b      	ldr	r3, [r3, #20]
 8005540:	4313      	orrs	r3, r2
 8005542:	60fb      	str	r3, [r7, #12]
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	68fa      	ldr	r2, [r7, #12]
 8005548:	601a      	str	r2, [r3, #0]
 800554a:	683b      	ldr	r3, [r7, #0]
 800554c:	689a      	ldr	r2, [r3, #8]
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005552:	683b      	ldr	r3, [r7, #0]
 8005554:	681a      	ldr	r2, [r3, #0]
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	629a      	str	r2, [r3, #40]	@ 0x28
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	4a13      	ldr	r2, [pc, #76]	@ (80055ac <TIM_Base_SetConfig+0x110>)
 800555e:	4293      	cmp	r3, r2
 8005560:	d00b      	beq.n	800557a <TIM_Base_SetConfig+0xde>
 8005562:	687b      	ldr	r3, [r7, #4]
 8005564:	4a15      	ldr	r2, [pc, #84]	@ (80055bc <TIM_Base_SetConfig+0x120>)
 8005566:	4293      	cmp	r3, r2
 8005568:	d007      	beq.n	800557a <TIM_Base_SetConfig+0xde>
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	4a14      	ldr	r2, [pc, #80]	@ (80055c0 <TIM_Base_SetConfig+0x124>)
 800556e:	4293      	cmp	r3, r2
 8005570:	d003      	beq.n	800557a <TIM_Base_SetConfig+0xde>
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	4a13      	ldr	r2, [pc, #76]	@ (80055c4 <TIM_Base_SetConfig+0x128>)
 8005576:	4293      	cmp	r3, r2
 8005578:	d103      	bne.n	8005582 <TIM_Base_SetConfig+0xe6>
 800557a:	683b      	ldr	r3, [r7, #0]
 800557c:	691a      	ldr	r2, [r3, #16]
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	631a      	str	r2, [r3, #48]	@ 0x30
 8005582:	687b      	ldr	r3, [r7, #4]
 8005584:	2201      	movs	r2, #1
 8005586:	615a      	str	r2, [r3, #20]
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	691b      	ldr	r3, [r3, #16]
 800558c:	2201      	movs	r2, #1
 800558e:	4013      	ands	r3, r2
 8005590:	2b01      	cmp	r3, #1
 8005592:	d106      	bne.n	80055a2 <TIM_Base_SetConfig+0x106>
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	691b      	ldr	r3, [r3, #16]
 8005598:	2201      	movs	r2, #1
 800559a:	4393      	bics	r3, r2
 800559c:	001a      	movs	r2, r3
 800559e:	687b      	ldr	r3, [r7, #4]
 80055a0:	611a      	str	r2, [r3, #16]
 80055a2:	46c0      	nop			@ (mov r8, r8)
 80055a4:	46bd      	mov	sp, r7
 80055a6:	b004      	add	sp, #16
 80055a8:	bd80      	pop	{r7, pc}
 80055aa:	46c0      	nop			@ (mov r8, r8)
 80055ac:	40012c00 	.word	0x40012c00
 80055b0:	40000400 	.word	0x40000400
 80055b4:	40000800 	.word	0x40000800
 80055b8:	40002000 	.word	0x40002000
 80055bc:	40014000 	.word	0x40014000
 80055c0:	40014400 	.word	0x40014400
 80055c4:	40014800 	.word	0x40014800
 80055c8:	fffffcff 	.word	0xfffffcff

080055cc <HAL_TIMEx_MasterConfigSynchronization>:
 80055cc:	b580      	push	{r7, lr}
 80055ce:	b084      	sub	sp, #16
 80055d0:	af00      	add	r7, sp, #0
 80055d2:	6078      	str	r0, [r7, #4]
 80055d4:	6039      	str	r1, [r7, #0]
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	223c      	movs	r2, #60	@ 0x3c
 80055da:	5c9b      	ldrb	r3, [r3, r2]
 80055dc:	2b01      	cmp	r3, #1
 80055de:	d101      	bne.n	80055e4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80055e0:	2302      	movs	r3, #2
 80055e2:	e05a      	b.n	800569a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	223c      	movs	r2, #60	@ 0x3c
 80055e8:	2101      	movs	r1, #1
 80055ea:	5499      	strb	r1, [r3, r2]
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	223d      	movs	r2, #61	@ 0x3d
 80055f0:	2102      	movs	r1, #2
 80055f2:	5499      	strb	r1, [r3, r2]
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	681b      	ldr	r3, [r3, #0]
 80055f8:	685b      	ldr	r3, [r3, #4]
 80055fa:	60fb      	str	r3, [r7, #12]
 80055fc:	687b      	ldr	r3, [r7, #4]
 80055fe:	681b      	ldr	r3, [r3, #0]
 8005600:	689b      	ldr	r3, [r3, #8]
 8005602:	60bb      	str	r3, [r7, #8]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	4a26      	ldr	r2, [pc, #152]	@ (80056a4 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800560a:	4293      	cmp	r3, r2
 800560c:	d108      	bne.n	8005620 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 800560e:	68fb      	ldr	r3, [r7, #12]
 8005610:	4a25      	ldr	r2, [pc, #148]	@ (80056a8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005612:	4013      	ands	r3, r2
 8005614:	60fb      	str	r3, [r7, #12]
 8005616:	683b      	ldr	r3, [r7, #0]
 8005618:	685b      	ldr	r3, [r3, #4]
 800561a:	68fa      	ldr	r2, [r7, #12]
 800561c:	4313      	orrs	r3, r2
 800561e:	60fb      	str	r3, [r7, #12]
 8005620:	68fb      	ldr	r3, [r7, #12]
 8005622:	2270      	movs	r2, #112	@ 0x70
 8005624:	4393      	bics	r3, r2
 8005626:	60fb      	str	r3, [r7, #12]
 8005628:	683b      	ldr	r3, [r7, #0]
 800562a:	681b      	ldr	r3, [r3, #0]
 800562c:	68fa      	ldr	r2, [r7, #12]
 800562e:	4313      	orrs	r3, r2
 8005630:	60fb      	str	r3, [r7, #12]
 8005632:	687b      	ldr	r3, [r7, #4]
 8005634:	681b      	ldr	r3, [r3, #0]
 8005636:	68fa      	ldr	r2, [r7, #12]
 8005638:	605a      	str	r2, [r3, #4]
 800563a:	687b      	ldr	r3, [r7, #4]
 800563c:	681b      	ldr	r3, [r3, #0]
 800563e:	4a19      	ldr	r2, [pc, #100]	@ (80056a4 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8005640:	4293      	cmp	r3, r2
 8005642:	d014      	beq.n	800566e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005644:	687b      	ldr	r3, [r7, #4]
 8005646:	681a      	ldr	r2, [r3, #0]
 8005648:	2380      	movs	r3, #128	@ 0x80
 800564a:	05db      	lsls	r3, r3, #23
 800564c:	429a      	cmp	r2, r3
 800564e:	d00e      	beq.n	800566e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	4a15      	ldr	r2, [pc, #84]	@ (80056ac <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005656:	4293      	cmp	r3, r2
 8005658:	d009      	beq.n	800566e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800565a:	687b      	ldr	r3, [r7, #4]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	4a14      	ldr	r2, [pc, #80]	@ (80056b0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8005660:	4293      	cmp	r3, r2
 8005662:	d004      	beq.n	800566e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	4a12      	ldr	r2, [pc, #72]	@ (80056b4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800566a:	4293      	cmp	r3, r2
 800566c:	d10c      	bne.n	8005688 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800566e:	68bb      	ldr	r3, [r7, #8]
 8005670:	2280      	movs	r2, #128	@ 0x80
 8005672:	4393      	bics	r3, r2
 8005674:	60bb      	str	r3, [r7, #8]
 8005676:	683b      	ldr	r3, [r7, #0]
 8005678:	689b      	ldr	r3, [r3, #8]
 800567a:	68ba      	ldr	r2, [r7, #8]
 800567c:	4313      	orrs	r3, r2
 800567e:	60bb      	str	r3, [r7, #8]
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	68ba      	ldr	r2, [r7, #8]
 8005686:	609a      	str	r2, [r3, #8]
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	223d      	movs	r2, #61	@ 0x3d
 800568c:	2101      	movs	r1, #1
 800568e:	5499      	strb	r1, [r3, r2]
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	223c      	movs	r2, #60	@ 0x3c
 8005694:	2100      	movs	r1, #0
 8005696:	5499      	strb	r1, [r3, r2]
 8005698:	2300      	movs	r3, #0
 800569a:	0018      	movs	r0, r3
 800569c:	46bd      	mov	sp, r7
 800569e:	b004      	add	sp, #16
 80056a0:	bd80      	pop	{r7, pc}
 80056a2:	46c0      	nop			@ (mov r8, r8)
 80056a4:	40012c00 	.word	0x40012c00
 80056a8:	ff0fffff 	.word	0xff0fffff
 80056ac:	40000400 	.word	0x40000400
 80056b0:	40000800 	.word	0x40000800
 80056b4:	40014000 	.word	0x40014000

080056b8 <HAL_TIMEx_CommutCallback>:
 80056b8:	b580      	push	{r7, lr}
 80056ba:	b082      	sub	sp, #8
 80056bc:	af00      	add	r7, sp, #0
 80056be:	6078      	str	r0, [r7, #4]
 80056c0:	46c0      	nop			@ (mov r8, r8)
 80056c2:	46bd      	mov	sp, r7
 80056c4:	b002      	add	sp, #8
 80056c6:	bd80      	pop	{r7, pc}

080056c8 <HAL_TIMEx_BreakCallback>:
 80056c8:	b580      	push	{r7, lr}
 80056ca:	b082      	sub	sp, #8
 80056cc:	af00      	add	r7, sp, #0
 80056ce:	6078      	str	r0, [r7, #4]
 80056d0:	46c0      	nop			@ (mov r8, r8)
 80056d2:	46bd      	mov	sp, r7
 80056d4:	b002      	add	sp, #8
 80056d6:	bd80      	pop	{r7, pc}

080056d8 <HAL_TIMEx_Break2Callback>:
 80056d8:	b580      	push	{r7, lr}
 80056da:	b082      	sub	sp, #8
 80056dc:	af00      	add	r7, sp, #0
 80056de:	6078      	str	r0, [r7, #4]
 80056e0:	46c0      	nop			@ (mov r8, r8)
 80056e2:	46bd      	mov	sp, r7
 80056e4:	b002      	add	sp, #8
 80056e6:	bd80      	pop	{r7, pc}

080056e8 <HAL_UART_Init>:
 80056e8:	b580      	push	{r7, lr}
 80056ea:	b082      	sub	sp, #8
 80056ec:	af00      	add	r7, sp, #0
 80056ee:	6078      	str	r0, [r7, #4]
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	2b00      	cmp	r3, #0
 80056f4:	d101      	bne.n	80056fa <HAL_UART_Init+0x12>
 80056f6:	2301      	movs	r3, #1
 80056f8:	e046      	b.n	8005788 <HAL_UART_Init+0xa0>
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	2288      	movs	r2, #136	@ 0x88
 80056fe:	589b      	ldr	r3, [r3, r2]
 8005700:	2b00      	cmp	r3, #0
 8005702:	d107      	bne.n	8005714 <HAL_UART_Init+0x2c>
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	2284      	movs	r2, #132	@ 0x84
 8005708:	2100      	movs	r1, #0
 800570a:	5499      	strb	r1, [r3, r2]
 800570c:	687b      	ldr	r3, [r7, #4]
 800570e:	0018      	movs	r0, r3
 8005710:	f7fd f906 	bl	8002920 <HAL_UART_MspInit>
 8005714:	687b      	ldr	r3, [r7, #4]
 8005716:	2288      	movs	r2, #136	@ 0x88
 8005718:	2124      	movs	r1, #36	@ 0x24
 800571a:	5099      	str	r1, [r3, r2]
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	681a      	ldr	r2, [r3, #0]
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	2101      	movs	r1, #1
 8005728:	438a      	bics	r2, r1
 800572a:	601a      	str	r2, [r3, #0]
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005730:	2b00      	cmp	r3, #0
 8005732:	d003      	beq.n	800573c <HAL_UART_Init+0x54>
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	0018      	movs	r0, r3
 8005738:	f000 ffce 	bl	80066d8 <UART_AdvFeatureConfig>
 800573c:	687b      	ldr	r3, [r7, #4]
 800573e:	0018      	movs	r0, r3
 8005740:	f000 fc74 	bl	800602c <UART_SetConfig>
 8005744:	0003      	movs	r3, r0
 8005746:	2b01      	cmp	r3, #1
 8005748:	d101      	bne.n	800574e <HAL_UART_Init+0x66>
 800574a:	2301      	movs	r3, #1
 800574c:	e01c      	b.n	8005788 <HAL_UART_Init+0xa0>
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	685a      	ldr	r2, [r3, #4]
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	681b      	ldr	r3, [r3, #0]
 8005758:	490d      	ldr	r1, [pc, #52]	@ (8005790 <HAL_UART_Init+0xa8>)
 800575a:	400a      	ands	r2, r1
 800575c:	605a      	str	r2, [r3, #4]
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	681b      	ldr	r3, [r3, #0]
 8005762:	689a      	ldr	r2, [r3, #8]
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	212a      	movs	r1, #42	@ 0x2a
 800576a:	438a      	bics	r2, r1
 800576c:	609a      	str	r2, [r3, #8]
 800576e:	687b      	ldr	r3, [r7, #4]
 8005770:	681b      	ldr	r3, [r3, #0]
 8005772:	681a      	ldr	r2, [r3, #0]
 8005774:	687b      	ldr	r3, [r7, #4]
 8005776:	681b      	ldr	r3, [r3, #0]
 8005778:	2101      	movs	r1, #1
 800577a:	430a      	orrs	r2, r1
 800577c:	601a      	str	r2, [r3, #0]
 800577e:	687b      	ldr	r3, [r7, #4]
 8005780:	0018      	movs	r0, r3
 8005782:	f001 f85d 	bl	8006840 <UART_CheckIdleState>
 8005786:	0003      	movs	r3, r0
 8005788:	0018      	movs	r0, r3
 800578a:	46bd      	mov	sp, r7
 800578c:	b002      	add	sp, #8
 800578e:	bd80      	pop	{r7, pc}
 8005790:	ffffb7ff 	.word	0xffffb7ff

08005794 <HAL_UART_Transmit>:
 8005794:	b580      	push	{r7, lr}
 8005796:	b08a      	sub	sp, #40	@ 0x28
 8005798:	af02      	add	r7, sp, #8
 800579a:	60f8      	str	r0, [r7, #12]
 800579c:	60b9      	str	r1, [r7, #8]
 800579e:	603b      	str	r3, [r7, #0]
 80057a0:	1dbb      	adds	r3, r7, #6
 80057a2:	801a      	strh	r2, [r3, #0]
 80057a4:	68fb      	ldr	r3, [r7, #12]
 80057a6:	2288      	movs	r2, #136	@ 0x88
 80057a8:	589b      	ldr	r3, [r3, r2]
 80057aa:	2b20      	cmp	r3, #32
 80057ac:	d000      	beq.n	80057b0 <HAL_UART_Transmit+0x1c>
 80057ae:	e090      	b.n	80058d2 <HAL_UART_Transmit+0x13e>
 80057b0:	68bb      	ldr	r3, [r7, #8]
 80057b2:	2b00      	cmp	r3, #0
 80057b4:	d003      	beq.n	80057be <HAL_UART_Transmit+0x2a>
 80057b6:	1dbb      	adds	r3, r7, #6
 80057b8:	881b      	ldrh	r3, [r3, #0]
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	d101      	bne.n	80057c2 <HAL_UART_Transmit+0x2e>
 80057be:	2301      	movs	r3, #1
 80057c0:	e088      	b.n	80058d4 <HAL_UART_Transmit+0x140>
 80057c2:	68fb      	ldr	r3, [r7, #12]
 80057c4:	689a      	ldr	r2, [r3, #8]
 80057c6:	2380      	movs	r3, #128	@ 0x80
 80057c8:	015b      	lsls	r3, r3, #5
 80057ca:	429a      	cmp	r2, r3
 80057cc:	d109      	bne.n	80057e2 <HAL_UART_Transmit+0x4e>
 80057ce:	68fb      	ldr	r3, [r7, #12]
 80057d0:	691b      	ldr	r3, [r3, #16]
 80057d2:	2b00      	cmp	r3, #0
 80057d4:	d105      	bne.n	80057e2 <HAL_UART_Transmit+0x4e>
 80057d6:	68bb      	ldr	r3, [r7, #8]
 80057d8:	2201      	movs	r2, #1
 80057da:	4013      	ands	r3, r2
 80057dc:	d001      	beq.n	80057e2 <HAL_UART_Transmit+0x4e>
 80057de:	2301      	movs	r3, #1
 80057e0:	e078      	b.n	80058d4 <HAL_UART_Transmit+0x140>
 80057e2:	68fb      	ldr	r3, [r7, #12]
 80057e4:	2290      	movs	r2, #144	@ 0x90
 80057e6:	2100      	movs	r1, #0
 80057e8:	5099      	str	r1, [r3, r2]
 80057ea:	68fb      	ldr	r3, [r7, #12]
 80057ec:	2288      	movs	r2, #136	@ 0x88
 80057ee:	2121      	movs	r1, #33	@ 0x21
 80057f0:	5099      	str	r1, [r3, r2]
 80057f2:	f7fd fa43 	bl	8002c7c <HAL_GetTick>
 80057f6:	0003      	movs	r3, r0
 80057f8:	617b      	str	r3, [r7, #20]
 80057fa:	68fb      	ldr	r3, [r7, #12]
 80057fc:	1dba      	adds	r2, r7, #6
 80057fe:	2154      	movs	r1, #84	@ 0x54
 8005800:	8812      	ldrh	r2, [r2, #0]
 8005802:	525a      	strh	r2, [r3, r1]
 8005804:	68fb      	ldr	r3, [r7, #12]
 8005806:	1dba      	adds	r2, r7, #6
 8005808:	2156      	movs	r1, #86	@ 0x56
 800580a:	8812      	ldrh	r2, [r2, #0]
 800580c:	525a      	strh	r2, [r3, r1]
 800580e:	68fb      	ldr	r3, [r7, #12]
 8005810:	689a      	ldr	r2, [r3, #8]
 8005812:	2380      	movs	r3, #128	@ 0x80
 8005814:	015b      	lsls	r3, r3, #5
 8005816:	429a      	cmp	r2, r3
 8005818:	d108      	bne.n	800582c <HAL_UART_Transmit+0x98>
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	691b      	ldr	r3, [r3, #16]
 800581e:	2b00      	cmp	r3, #0
 8005820:	d104      	bne.n	800582c <HAL_UART_Transmit+0x98>
 8005822:	2300      	movs	r3, #0
 8005824:	61fb      	str	r3, [r7, #28]
 8005826:	68bb      	ldr	r3, [r7, #8]
 8005828:	61bb      	str	r3, [r7, #24]
 800582a:	e003      	b.n	8005834 <HAL_UART_Transmit+0xa0>
 800582c:	68bb      	ldr	r3, [r7, #8]
 800582e:	61fb      	str	r3, [r7, #28]
 8005830:	2300      	movs	r3, #0
 8005832:	61bb      	str	r3, [r7, #24]
 8005834:	e030      	b.n	8005898 <HAL_UART_Transmit+0x104>
 8005836:	697a      	ldr	r2, [r7, #20]
 8005838:	68f8      	ldr	r0, [r7, #12]
 800583a:	683b      	ldr	r3, [r7, #0]
 800583c:	9300      	str	r3, [sp, #0]
 800583e:	0013      	movs	r3, r2
 8005840:	2200      	movs	r2, #0
 8005842:	2180      	movs	r1, #128	@ 0x80
 8005844:	f001 f8a6 	bl	8006994 <UART_WaitOnFlagUntilTimeout>
 8005848:	1e03      	subs	r3, r0, #0
 800584a:	d005      	beq.n	8005858 <HAL_UART_Transmit+0xc4>
 800584c:	68fb      	ldr	r3, [r7, #12]
 800584e:	2288      	movs	r2, #136	@ 0x88
 8005850:	2120      	movs	r1, #32
 8005852:	5099      	str	r1, [r3, r2]
 8005854:	2303      	movs	r3, #3
 8005856:	e03d      	b.n	80058d4 <HAL_UART_Transmit+0x140>
 8005858:	69fb      	ldr	r3, [r7, #28]
 800585a:	2b00      	cmp	r3, #0
 800585c:	d10b      	bne.n	8005876 <HAL_UART_Transmit+0xe2>
 800585e:	69bb      	ldr	r3, [r7, #24]
 8005860:	881b      	ldrh	r3, [r3, #0]
 8005862:	001a      	movs	r2, r3
 8005864:	68fb      	ldr	r3, [r7, #12]
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	05d2      	lsls	r2, r2, #23
 800586a:	0dd2      	lsrs	r2, r2, #23
 800586c:	629a      	str	r2, [r3, #40]	@ 0x28
 800586e:	69bb      	ldr	r3, [r7, #24]
 8005870:	3302      	adds	r3, #2
 8005872:	61bb      	str	r3, [r7, #24]
 8005874:	e007      	b.n	8005886 <HAL_UART_Transmit+0xf2>
 8005876:	69fb      	ldr	r3, [r7, #28]
 8005878:	781a      	ldrb	r2, [r3, #0]
 800587a:	68fb      	ldr	r3, [r7, #12]
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	629a      	str	r2, [r3, #40]	@ 0x28
 8005880:	69fb      	ldr	r3, [r7, #28]
 8005882:	3301      	adds	r3, #1
 8005884:	61fb      	str	r3, [r7, #28]
 8005886:	68fb      	ldr	r3, [r7, #12]
 8005888:	2256      	movs	r2, #86	@ 0x56
 800588a:	5a9b      	ldrh	r3, [r3, r2]
 800588c:	b29b      	uxth	r3, r3
 800588e:	3b01      	subs	r3, #1
 8005890:	b299      	uxth	r1, r3
 8005892:	68fb      	ldr	r3, [r7, #12]
 8005894:	2256      	movs	r2, #86	@ 0x56
 8005896:	5299      	strh	r1, [r3, r2]
 8005898:	68fb      	ldr	r3, [r7, #12]
 800589a:	2256      	movs	r2, #86	@ 0x56
 800589c:	5a9b      	ldrh	r3, [r3, r2]
 800589e:	b29b      	uxth	r3, r3
 80058a0:	2b00      	cmp	r3, #0
 80058a2:	d1c8      	bne.n	8005836 <HAL_UART_Transmit+0xa2>
 80058a4:	697a      	ldr	r2, [r7, #20]
 80058a6:	68f8      	ldr	r0, [r7, #12]
 80058a8:	683b      	ldr	r3, [r7, #0]
 80058aa:	9300      	str	r3, [sp, #0]
 80058ac:	0013      	movs	r3, r2
 80058ae:	2200      	movs	r2, #0
 80058b0:	2140      	movs	r1, #64	@ 0x40
 80058b2:	f001 f86f 	bl	8006994 <UART_WaitOnFlagUntilTimeout>
 80058b6:	1e03      	subs	r3, r0, #0
 80058b8:	d005      	beq.n	80058c6 <HAL_UART_Transmit+0x132>
 80058ba:	68fb      	ldr	r3, [r7, #12]
 80058bc:	2288      	movs	r2, #136	@ 0x88
 80058be:	2120      	movs	r1, #32
 80058c0:	5099      	str	r1, [r3, r2]
 80058c2:	2303      	movs	r3, #3
 80058c4:	e006      	b.n	80058d4 <HAL_UART_Transmit+0x140>
 80058c6:	68fb      	ldr	r3, [r7, #12]
 80058c8:	2288      	movs	r2, #136	@ 0x88
 80058ca:	2120      	movs	r1, #32
 80058cc:	5099      	str	r1, [r3, r2]
 80058ce:	2300      	movs	r3, #0
 80058d0:	e000      	b.n	80058d4 <HAL_UART_Transmit+0x140>
 80058d2:	2302      	movs	r3, #2
 80058d4:	0018      	movs	r0, r3
 80058d6:	46bd      	mov	sp, r7
 80058d8:	b008      	add	sp, #32
 80058da:	bd80      	pop	{r7, pc}

080058dc <HAL_UART_Receive_IT>:
 80058dc:	b580      	push	{r7, lr}
 80058de:	b088      	sub	sp, #32
 80058e0:	af00      	add	r7, sp, #0
 80058e2:	60f8      	str	r0, [r7, #12]
 80058e4:	60b9      	str	r1, [r7, #8]
 80058e6:	1dbb      	adds	r3, r7, #6
 80058e8:	801a      	strh	r2, [r3, #0]
 80058ea:	68fb      	ldr	r3, [r7, #12]
 80058ec:	228c      	movs	r2, #140	@ 0x8c
 80058ee:	589b      	ldr	r3, [r3, r2]
 80058f0:	2b20      	cmp	r3, #32
 80058f2:	d14f      	bne.n	8005994 <HAL_UART_Receive_IT+0xb8>
 80058f4:	68bb      	ldr	r3, [r7, #8]
 80058f6:	2b00      	cmp	r3, #0
 80058f8:	d003      	beq.n	8005902 <HAL_UART_Receive_IT+0x26>
 80058fa:	1dbb      	adds	r3, r7, #6
 80058fc:	881b      	ldrh	r3, [r3, #0]
 80058fe:	2b00      	cmp	r3, #0
 8005900:	d101      	bne.n	8005906 <HAL_UART_Receive_IT+0x2a>
 8005902:	2301      	movs	r3, #1
 8005904:	e047      	b.n	8005996 <HAL_UART_Receive_IT+0xba>
 8005906:	68fb      	ldr	r3, [r7, #12]
 8005908:	689a      	ldr	r2, [r3, #8]
 800590a:	2380      	movs	r3, #128	@ 0x80
 800590c:	015b      	lsls	r3, r3, #5
 800590e:	429a      	cmp	r2, r3
 8005910:	d109      	bne.n	8005926 <HAL_UART_Receive_IT+0x4a>
 8005912:	68fb      	ldr	r3, [r7, #12]
 8005914:	691b      	ldr	r3, [r3, #16]
 8005916:	2b00      	cmp	r3, #0
 8005918:	d105      	bne.n	8005926 <HAL_UART_Receive_IT+0x4a>
 800591a:	68bb      	ldr	r3, [r7, #8]
 800591c:	2201      	movs	r2, #1
 800591e:	4013      	ands	r3, r2
 8005920:	d001      	beq.n	8005926 <HAL_UART_Receive_IT+0x4a>
 8005922:	2301      	movs	r3, #1
 8005924:	e037      	b.n	8005996 <HAL_UART_Receive_IT+0xba>
 8005926:	68fb      	ldr	r3, [r7, #12]
 8005928:	2200      	movs	r2, #0
 800592a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800592c:	68fb      	ldr	r3, [r7, #12]
 800592e:	681b      	ldr	r3, [r3, #0]
 8005930:	4a1b      	ldr	r2, [pc, #108]	@ (80059a0 <HAL_UART_Receive_IT+0xc4>)
 8005932:	4293      	cmp	r3, r2
 8005934:	d025      	beq.n	8005982 <HAL_UART_Receive_IT+0xa6>
 8005936:	68fb      	ldr	r3, [r7, #12]
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	4a1a      	ldr	r2, [pc, #104]	@ (80059a4 <HAL_UART_Receive_IT+0xc8>)
 800593c:	4293      	cmp	r3, r2
 800593e:	d020      	beq.n	8005982 <HAL_UART_Receive_IT+0xa6>
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	685a      	ldr	r2, [r3, #4]
 8005946:	2380      	movs	r3, #128	@ 0x80
 8005948:	041b      	lsls	r3, r3, #16
 800594a:	4013      	ands	r3, r2
 800594c:	d019      	beq.n	8005982 <HAL_UART_Receive_IT+0xa6>
 800594e:	f3ef 8310 	mrs	r3, PRIMASK
 8005952:	613b      	str	r3, [r7, #16]
 8005954:	693b      	ldr	r3, [r7, #16]
 8005956:	61fb      	str	r3, [r7, #28]
 8005958:	2301      	movs	r3, #1
 800595a:	617b      	str	r3, [r7, #20]
 800595c:	697b      	ldr	r3, [r7, #20]
 800595e:	f383 8810 	msr	PRIMASK, r3
 8005962:	46c0      	nop			@ (mov r8, r8)
 8005964:	68fb      	ldr	r3, [r7, #12]
 8005966:	681b      	ldr	r3, [r3, #0]
 8005968:	681a      	ldr	r2, [r3, #0]
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	681b      	ldr	r3, [r3, #0]
 800596e:	2180      	movs	r1, #128	@ 0x80
 8005970:	04c9      	lsls	r1, r1, #19
 8005972:	430a      	orrs	r2, r1
 8005974:	601a      	str	r2, [r3, #0]
 8005976:	69fb      	ldr	r3, [r7, #28]
 8005978:	61bb      	str	r3, [r7, #24]
 800597a:	69bb      	ldr	r3, [r7, #24]
 800597c:	f383 8810 	msr	PRIMASK, r3
 8005980:	46c0      	nop			@ (mov r8, r8)
 8005982:	1dbb      	adds	r3, r7, #6
 8005984:	881a      	ldrh	r2, [r3, #0]
 8005986:	68b9      	ldr	r1, [r7, #8]
 8005988:	68fb      	ldr	r3, [r7, #12]
 800598a:	0018      	movs	r0, r3
 800598c:	f001 f872 	bl	8006a74 <UART_Start_Receive_IT>
 8005990:	0003      	movs	r3, r0
 8005992:	e000      	b.n	8005996 <HAL_UART_Receive_IT+0xba>
 8005994:	2302      	movs	r3, #2
 8005996:	0018      	movs	r0, r3
 8005998:	46bd      	mov	sp, r7
 800599a:	b008      	add	sp, #32
 800599c:	bd80      	pop	{r7, pc}
 800599e:	46c0      	nop			@ (mov r8, r8)
 80059a0:	40008000 	.word	0x40008000
 80059a4:	40008400 	.word	0x40008400

080059a8 <HAL_UART_IRQHandler>:
 80059a8:	b5b0      	push	{r4, r5, r7, lr}
 80059aa:	b0aa      	sub	sp, #168	@ 0xa8
 80059ac:	af00      	add	r7, sp, #0
 80059ae:	6078      	str	r0, [r7, #4]
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	681b      	ldr	r3, [r3, #0]
 80059b4:	69db      	ldr	r3, [r3, #28]
 80059b6:	22a4      	movs	r2, #164	@ 0xa4
 80059b8:	18b9      	adds	r1, r7, r2
 80059ba:	600b      	str	r3, [r1, #0]
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	681b      	ldr	r3, [r3, #0]
 80059c0:	681b      	ldr	r3, [r3, #0]
 80059c2:	20a0      	movs	r0, #160	@ 0xa0
 80059c4:	1839      	adds	r1, r7, r0
 80059c6:	600b      	str	r3, [r1, #0]
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	681b      	ldr	r3, [r3, #0]
 80059cc:	689b      	ldr	r3, [r3, #8]
 80059ce:	249c      	movs	r4, #156	@ 0x9c
 80059d0:	1939      	adds	r1, r7, r4
 80059d2:	600b      	str	r3, [r1, #0]
 80059d4:	0011      	movs	r1, r2
 80059d6:	18bb      	adds	r3, r7, r2
 80059d8:	681b      	ldr	r3, [r3, #0]
 80059da:	4aa2      	ldr	r2, [pc, #648]	@ (8005c64 <HAL_UART_IRQHandler+0x2bc>)
 80059dc:	4013      	ands	r3, r2
 80059de:	2298      	movs	r2, #152	@ 0x98
 80059e0:	18bd      	adds	r5, r7, r2
 80059e2:	602b      	str	r3, [r5, #0]
 80059e4:	18bb      	adds	r3, r7, r2
 80059e6:	681b      	ldr	r3, [r3, #0]
 80059e8:	2b00      	cmp	r3, #0
 80059ea:	d11a      	bne.n	8005a22 <HAL_UART_IRQHandler+0x7a>
 80059ec:	187b      	adds	r3, r7, r1
 80059ee:	681b      	ldr	r3, [r3, #0]
 80059f0:	2220      	movs	r2, #32
 80059f2:	4013      	ands	r3, r2
 80059f4:	d015      	beq.n	8005a22 <HAL_UART_IRQHandler+0x7a>
 80059f6:	183b      	adds	r3, r7, r0
 80059f8:	681b      	ldr	r3, [r3, #0]
 80059fa:	2220      	movs	r2, #32
 80059fc:	4013      	ands	r3, r2
 80059fe:	d105      	bne.n	8005a0c <HAL_UART_IRQHandler+0x64>
 8005a00:	193b      	adds	r3, r7, r4
 8005a02:	681a      	ldr	r2, [r3, #0]
 8005a04:	2380      	movs	r3, #128	@ 0x80
 8005a06:	055b      	lsls	r3, r3, #21
 8005a08:	4013      	ands	r3, r2
 8005a0a:	d00a      	beq.n	8005a22 <HAL_UART_IRQHandler+0x7a>
 8005a0c:	687b      	ldr	r3, [r7, #4]
 8005a0e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005a10:	2b00      	cmp	r3, #0
 8005a12:	d100      	bne.n	8005a16 <HAL_UART_IRQHandler+0x6e>
 8005a14:	e2dc      	b.n	8005fd0 <HAL_UART_IRQHandler+0x628>
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005a1a:	687a      	ldr	r2, [r7, #4]
 8005a1c:	0010      	movs	r0, r2
 8005a1e:	4798      	blx	r3
 8005a20:	e2d6      	b.n	8005fd0 <HAL_UART_IRQHandler+0x628>
 8005a22:	2398      	movs	r3, #152	@ 0x98
 8005a24:	18fb      	adds	r3, r7, r3
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	2b00      	cmp	r3, #0
 8005a2a:	d100      	bne.n	8005a2e <HAL_UART_IRQHandler+0x86>
 8005a2c:	e122      	b.n	8005c74 <HAL_UART_IRQHandler+0x2cc>
 8005a2e:	239c      	movs	r3, #156	@ 0x9c
 8005a30:	18fb      	adds	r3, r7, r3
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	4a8c      	ldr	r2, [pc, #560]	@ (8005c68 <HAL_UART_IRQHandler+0x2c0>)
 8005a36:	4013      	ands	r3, r2
 8005a38:	d106      	bne.n	8005a48 <HAL_UART_IRQHandler+0xa0>
 8005a3a:	23a0      	movs	r3, #160	@ 0xa0
 8005a3c:	18fb      	adds	r3, r7, r3
 8005a3e:	681b      	ldr	r3, [r3, #0]
 8005a40:	4a8a      	ldr	r2, [pc, #552]	@ (8005c6c <HAL_UART_IRQHandler+0x2c4>)
 8005a42:	4013      	ands	r3, r2
 8005a44:	d100      	bne.n	8005a48 <HAL_UART_IRQHandler+0xa0>
 8005a46:	e115      	b.n	8005c74 <HAL_UART_IRQHandler+0x2cc>
 8005a48:	23a4      	movs	r3, #164	@ 0xa4
 8005a4a:	18fb      	adds	r3, r7, r3
 8005a4c:	681b      	ldr	r3, [r3, #0]
 8005a4e:	2201      	movs	r2, #1
 8005a50:	4013      	ands	r3, r2
 8005a52:	d012      	beq.n	8005a7a <HAL_UART_IRQHandler+0xd2>
 8005a54:	23a0      	movs	r3, #160	@ 0xa0
 8005a56:	18fb      	adds	r3, r7, r3
 8005a58:	681a      	ldr	r2, [r3, #0]
 8005a5a:	2380      	movs	r3, #128	@ 0x80
 8005a5c:	005b      	lsls	r3, r3, #1
 8005a5e:	4013      	ands	r3, r2
 8005a60:	d00b      	beq.n	8005a7a <HAL_UART_IRQHandler+0xd2>
 8005a62:	687b      	ldr	r3, [r7, #4]
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	2201      	movs	r2, #1
 8005a68:	621a      	str	r2, [r3, #32]
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	2290      	movs	r2, #144	@ 0x90
 8005a6e:	589b      	ldr	r3, [r3, r2]
 8005a70:	2201      	movs	r2, #1
 8005a72:	431a      	orrs	r2, r3
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	2190      	movs	r1, #144	@ 0x90
 8005a78:	505a      	str	r2, [r3, r1]
 8005a7a:	23a4      	movs	r3, #164	@ 0xa4
 8005a7c:	18fb      	adds	r3, r7, r3
 8005a7e:	681b      	ldr	r3, [r3, #0]
 8005a80:	2202      	movs	r2, #2
 8005a82:	4013      	ands	r3, r2
 8005a84:	d011      	beq.n	8005aaa <HAL_UART_IRQHandler+0x102>
 8005a86:	239c      	movs	r3, #156	@ 0x9c
 8005a88:	18fb      	adds	r3, r7, r3
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	2201      	movs	r2, #1
 8005a8e:	4013      	ands	r3, r2
 8005a90:	d00b      	beq.n	8005aaa <HAL_UART_IRQHandler+0x102>
 8005a92:	687b      	ldr	r3, [r7, #4]
 8005a94:	681b      	ldr	r3, [r3, #0]
 8005a96:	2202      	movs	r2, #2
 8005a98:	621a      	str	r2, [r3, #32]
 8005a9a:	687b      	ldr	r3, [r7, #4]
 8005a9c:	2290      	movs	r2, #144	@ 0x90
 8005a9e:	589b      	ldr	r3, [r3, r2]
 8005aa0:	2204      	movs	r2, #4
 8005aa2:	431a      	orrs	r2, r3
 8005aa4:	687b      	ldr	r3, [r7, #4]
 8005aa6:	2190      	movs	r1, #144	@ 0x90
 8005aa8:	505a      	str	r2, [r3, r1]
 8005aaa:	23a4      	movs	r3, #164	@ 0xa4
 8005aac:	18fb      	adds	r3, r7, r3
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	2204      	movs	r2, #4
 8005ab2:	4013      	ands	r3, r2
 8005ab4:	d011      	beq.n	8005ada <HAL_UART_IRQHandler+0x132>
 8005ab6:	239c      	movs	r3, #156	@ 0x9c
 8005ab8:	18fb      	adds	r3, r7, r3
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	2201      	movs	r2, #1
 8005abe:	4013      	ands	r3, r2
 8005ac0:	d00b      	beq.n	8005ada <HAL_UART_IRQHandler+0x132>
 8005ac2:	687b      	ldr	r3, [r7, #4]
 8005ac4:	681b      	ldr	r3, [r3, #0]
 8005ac6:	2204      	movs	r2, #4
 8005ac8:	621a      	str	r2, [r3, #32]
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	2290      	movs	r2, #144	@ 0x90
 8005ace:	589b      	ldr	r3, [r3, r2]
 8005ad0:	2202      	movs	r2, #2
 8005ad2:	431a      	orrs	r2, r3
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	2190      	movs	r1, #144	@ 0x90
 8005ad8:	505a      	str	r2, [r3, r1]
 8005ada:	23a4      	movs	r3, #164	@ 0xa4
 8005adc:	18fb      	adds	r3, r7, r3
 8005ade:	681b      	ldr	r3, [r3, #0]
 8005ae0:	2208      	movs	r2, #8
 8005ae2:	4013      	ands	r3, r2
 8005ae4:	d017      	beq.n	8005b16 <HAL_UART_IRQHandler+0x16e>
 8005ae6:	23a0      	movs	r3, #160	@ 0xa0
 8005ae8:	18fb      	adds	r3, r7, r3
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	2220      	movs	r2, #32
 8005aee:	4013      	ands	r3, r2
 8005af0:	d105      	bne.n	8005afe <HAL_UART_IRQHandler+0x156>
 8005af2:	239c      	movs	r3, #156	@ 0x9c
 8005af4:	18fb      	adds	r3, r7, r3
 8005af6:	681b      	ldr	r3, [r3, #0]
 8005af8:	4a5b      	ldr	r2, [pc, #364]	@ (8005c68 <HAL_UART_IRQHandler+0x2c0>)
 8005afa:	4013      	ands	r3, r2
 8005afc:	d00b      	beq.n	8005b16 <HAL_UART_IRQHandler+0x16e>
 8005afe:	687b      	ldr	r3, [r7, #4]
 8005b00:	681b      	ldr	r3, [r3, #0]
 8005b02:	2208      	movs	r2, #8
 8005b04:	621a      	str	r2, [r3, #32]
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	2290      	movs	r2, #144	@ 0x90
 8005b0a:	589b      	ldr	r3, [r3, r2]
 8005b0c:	2208      	movs	r2, #8
 8005b0e:	431a      	orrs	r2, r3
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	2190      	movs	r1, #144	@ 0x90
 8005b14:	505a      	str	r2, [r3, r1]
 8005b16:	23a4      	movs	r3, #164	@ 0xa4
 8005b18:	18fb      	adds	r3, r7, r3
 8005b1a:	681a      	ldr	r2, [r3, #0]
 8005b1c:	2380      	movs	r3, #128	@ 0x80
 8005b1e:	011b      	lsls	r3, r3, #4
 8005b20:	4013      	ands	r3, r2
 8005b22:	d013      	beq.n	8005b4c <HAL_UART_IRQHandler+0x1a4>
 8005b24:	23a0      	movs	r3, #160	@ 0xa0
 8005b26:	18fb      	adds	r3, r7, r3
 8005b28:	681a      	ldr	r2, [r3, #0]
 8005b2a:	2380      	movs	r3, #128	@ 0x80
 8005b2c:	04db      	lsls	r3, r3, #19
 8005b2e:	4013      	ands	r3, r2
 8005b30:	d00c      	beq.n	8005b4c <HAL_UART_IRQHandler+0x1a4>
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	2280      	movs	r2, #128	@ 0x80
 8005b38:	0112      	lsls	r2, r2, #4
 8005b3a:	621a      	str	r2, [r3, #32]
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	2290      	movs	r2, #144	@ 0x90
 8005b40:	589b      	ldr	r3, [r3, r2]
 8005b42:	2220      	movs	r2, #32
 8005b44:	431a      	orrs	r2, r3
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	2190      	movs	r1, #144	@ 0x90
 8005b4a:	505a      	str	r2, [r3, r1]
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	2290      	movs	r2, #144	@ 0x90
 8005b50:	589b      	ldr	r3, [r3, r2]
 8005b52:	2b00      	cmp	r3, #0
 8005b54:	d100      	bne.n	8005b58 <HAL_UART_IRQHandler+0x1b0>
 8005b56:	e23d      	b.n	8005fd4 <HAL_UART_IRQHandler+0x62c>
 8005b58:	23a4      	movs	r3, #164	@ 0xa4
 8005b5a:	18fb      	adds	r3, r7, r3
 8005b5c:	681b      	ldr	r3, [r3, #0]
 8005b5e:	2220      	movs	r2, #32
 8005b60:	4013      	ands	r3, r2
 8005b62:	d015      	beq.n	8005b90 <HAL_UART_IRQHandler+0x1e8>
 8005b64:	23a0      	movs	r3, #160	@ 0xa0
 8005b66:	18fb      	adds	r3, r7, r3
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	2220      	movs	r2, #32
 8005b6c:	4013      	ands	r3, r2
 8005b6e:	d106      	bne.n	8005b7e <HAL_UART_IRQHandler+0x1d6>
 8005b70:	239c      	movs	r3, #156	@ 0x9c
 8005b72:	18fb      	adds	r3, r7, r3
 8005b74:	681a      	ldr	r2, [r3, #0]
 8005b76:	2380      	movs	r3, #128	@ 0x80
 8005b78:	055b      	lsls	r3, r3, #21
 8005b7a:	4013      	ands	r3, r2
 8005b7c:	d008      	beq.n	8005b90 <HAL_UART_IRQHandler+0x1e8>
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005b82:	2b00      	cmp	r3, #0
 8005b84:	d004      	beq.n	8005b90 <HAL_UART_IRQHandler+0x1e8>
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005b8a:	687a      	ldr	r2, [r7, #4]
 8005b8c:	0010      	movs	r0, r2
 8005b8e:	4798      	blx	r3
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	2290      	movs	r2, #144	@ 0x90
 8005b94:	589b      	ldr	r3, [r3, r2]
 8005b96:	2194      	movs	r1, #148	@ 0x94
 8005b98:	187a      	adds	r2, r7, r1
 8005b9a:	6013      	str	r3, [r2, #0]
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	681b      	ldr	r3, [r3, #0]
 8005ba0:	689b      	ldr	r3, [r3, #8]
 8005ba2:	2240      	movs	r2, #64	@ 0x40
 8005ba4:	4013      	ands	r3, r2
 8005ba6:	2b40      	cmp	r3, #64	@ 0x40
 8005ba8:	d004      	beq.n	8005bb4 <HAL_UART_IRQHandler+0x20c>
 8005baa:	187b      	adds	r3, r7, r1
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	2228      	movs	r2, #40	@ 0x28
 8005bb0:	4013      	ands	r3, r2
 8005bb2:	d04c      	beq.n	8005c4e <HAL_UART_IRQHandler+0x2a6>
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	0018      	movs	r0, r3
 8005bb8:	f001 f880 	bl	8006cbc <UART_EndRxTransfer>
 8005bbc:	687b      	ldr	r3, [r7, #4]
 8005bbe:	681b      	ldr	r3, [r3, #0]
 8005bc0:	689b      	ldr	r3, [r3, #8]
 8005bc2:	2240      	movs	r2, #64	@ 0x40
 8005bc4:	4013      	ands	r3, r2
 8005bc6:	2b40      	cmp	r3, #64	@ 0x40
 8005bc8:	d13c      	bne.n	8005c44 <HAL_UART_IRQHandler+0x29c>
 8005bca:	f3ef 8310 	mrs	r3, PRIMASK
 8005bce:	663b      	str	r3, [r7, #96]	@ 0x60
 8005bd0:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8005bd2:	2090      	movs	r0, #144	@ 0x90
 8005bd4:	183a      	adds	r2, r7, r0
 8005bd6:	6013      	str	r3, [r2, #0]
 8005bd8:	2301      	movs	r3, #1
 8005bda:	667b      	str	r3, [r7, #100]	@ 0x64
 8005bdc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005bde:	f383 8810 	msr	PRIMASK, r3
 8005be2:	46c0      	nop			@ (mov r8, r8)
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	689a      	ldr	r2, [r3, #8]
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	681b      	ldr	r3, [r3, #0]
 8005bee:	2140      	movs	r1, #64	@ 0x40
 8005bf0:	438a      	bics	r2, r1
 8005bf2:	609a      	str	r2, [r3, #8]
 8005bf4:	183b      	adds	r3, r7, r0
 8005bf6:	681b      	ldr	r3, [r3, #0]
 8005bf8:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005bfa:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8005bfc:	f383 8810 	msr	PRIMASK, r3
 8005c00:	46c0      	nop			@ (mov r8, r8)
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	2280      	movs	r2, #128	@ 0x80
 8005c06:	589b      	ldr	r3, [r3, r2]
 8005c08:	2b00      	cmp	r3, #0
 8005c0a:	d016      	beq.n	8005c3a <HAL_UART_IRQHandler+0x292>
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	2280      	movs	r2, #128	@ 0x80
 8005c10:	589b      	ldr	r3, [r3, r2]
 8005c12:	4a17      	ldr	r2, [pc, #92]	@ (8005c70 <HAL_UART_IRQHandler+0x2c8>)
 8005c14:	639a      	str	r2, [r3, #56]	@ 0x38
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	2280      	movs	r2, #128	@ 0x80
 8005c1a:	589b      	ldr	r3, [r3, r2]
 8005c1c:	0018      	movs	r0, r3
 8005c1e:	f7fd f98b 	bl	8002f38 <HAL_DMA_Abort_IT>
 8005c22:	1e03      	subs	r3, r0, #0
 8005c24:	d01c      	beq.n	8005c60 <HAL_UART_IRQHandler+0x2b8>
 8005c26:	687b      	ldr	r3, [r7, #4]
 8005c28:	2280      	movs	r2, #128	@ 0x80
 8005c2a:	589b      	ldr	r3, [r3, r2]
 8005c2c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005c2e:	687a      	ldr	r2, [r7, #4]
 8005c30:	2180      	movs	r1, #128	@ 0x80
 8005c32:	5852      	ldr	r2, [r2, r1]
 8005c34:	0010      	movs	r0, r2
 8005c36:	4798      	blx	r3
 8005c38:	e012      	b.n	8005c60 <HAL_UART_IRQHandler+0x2b8>
 8005c3a:	687b      	ldr	r3, [r7, #4]
 8005c3c:	0018      	movs	r0, r3
 8005c3e:	f000 f9e1 	bl	8006004 <HAL_UART_ErrorCallback>
 8005c42:	e00d      	b.n	8005c60 <HAL_UART_IRQHandler+0x2b8>
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	0018      	movs	r0, r3
 8005c48:	f000 f9dc 	bl	8006004 <HAL_UART_ErrorCallback>
 8005c4c:	e008      	b.n	8005c60 <HAL_UART_IRQHandler+0x2b8>
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	0018      	movs	r0, r3
 8005c52:	f000 f9d7 	bl	8006004 <HAL_UART_ErrorCallback>
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	2290      	movs	r2, #144	@ 0x90
 8005c5a:	2100      	movs	r1, #0
 8005c5c:	5099      	str	r1, [r3, r2]
 8005c5e:	e1b9      	b.n	8005fd4 <HAL_UART_IRQHandler+0x62c>
 8005c60:	46c0      	nop			@ (mov r8, r8)
 8005c62:	e1b7      	b.n	8005fd4 <HAL_UART_IRQHandler+0x62c>
 8005c64:	0000080f 	.word	0x0000080f
 8005c68:	10000001 	.word	0x10000001
 8005c6c:	04000120 	.word	0x04000120
 8005c70:	08006d89 	.word	0x08006d89
 8005c74:	687b      	ldr	r3, [r7, #4]
 8005c76:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8005c78:	2b01      	cmp	r3, #1
 8005c7a:	d000      	beq.n	8005c7e <HAL_UART_IRQHandler+0x2d6>
 8005c7c:	e13e      	b.n	8005efc <HAL_UART_IRQHandler+0x554>
 8005c7e:	23a4      	movs	r3, #164	@ 0xa4
 8005c80:	18fb      	adds	r3, r7, r3
 8005c82:	681b      	ldr	r3, [r3, #0]
 8005c84:	2210      	movs	r2, #16
 8005c86:	4013      	ands	r3, r2
 8005c88:	d100      	bne.n	8005c8c <HAL_UART_IRQHandler+0x2e4>
 8005c8a:	e137      	b.n	8005efc <HAL_UART_IRQHandler+0x554>
 8005c8c:	23a0      	movs	r3, #160	@ 0xa0
 8005c8e:	18fb      	adds	r3, r7, r3
 8005c90:	681b      	ldr	r3, [r3, #0]
 8005c92:	2210      	movs	r2, #16
 8005c94:	4013      	ands	r3, r2
 8005c96:	d100      	bne.n	8005c9a <HAL_UART_IRQHandler+0x2f2>
 8005c98:	e130      	b.n	8005efc <HAL_UART_IRQHandler+0x554>
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	681b      	ldr	r3, [r3, #0]
 8005c9e:	2210      	movs	r2, #16
 8005ca0:	621a      	str	r2, [r3, #32]
 8005ca2:	687b      	ldr	r3, [r7, #4]
 8005ca4:	681b      	ldr	r3, [r3, #0]
 8005ca6:	689b      	ldr	r3, [r3, #8]
 8005ca8:	2240      	movs	r2, #64	@ 0x40
 8005caa:	4013      	ands	r3, r2
 8005cac:	2b40      	cmp	r3, #64	@ 0x40
 8005cae:	d000      	beq.n	8005cb2 <HAL_UART_IRQHandler+0x30a>
 8005cb0:	e0a4      	b.n	8005dfc <HAL_UART_IRQHandler+0x454>
 8005cb2:	687b      	ldr	r3, [r7, #4]
 8005cb4:	2280      	movs	r2, #128	@ 0x80
 8005cb6:	589b      	ldr	r3, [r3, r2]
 8005cb8:	681b      	ldr	r3, [r3, #0]
 8005cba:	685a      	ldr	r2, [r3, #4]
 8005cbc:	217e      	movs	r1, #126	@ 0x7e
 8005cbe:	187b      	adds	r3, r7, r1
 8005cc0:	801a      	strh	r2, [r3, #0]
 8005cc2:	187b      	adds	r3, r7, r1
 8005cc4:	881b      	ldrh	r3, [r3, #0]
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d100      	bne.n	8005ccc <HAL_UART_IRQHandler+0x324>
 8005cca:	e185      	b.n	8005fd8 <HAL_UART_IRQHandler+0x630>
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	225c      	movs	r2, #92	@ 0x5c
 8005cd0:	5a9b      	ldrh	r3, [r3, r2]
 8005cd2:	187a      	adds	r2, r7, r1
 8005cd4:	8812      	ldrh	r2, [r2, #0]
 8005cd6:	429a      	cmp	r2, r3
 8005cd8:	d300      	bcc.n	8005cdc <HAL_UART_IRQHandler+0x334>
 8005cda:	e17d      	b.n	8005fd8 <HAL_UART_IRQHandler+0x630>
 8005cdc:	687b      	ldr	r3, [r7, #4]
 8005cde:	187a      	adds	r2, r7, r1
 8005ce0:	215e      	movs	r1, #94	@ 0x5e
 8005ce2:	8812      	ldrh	r2, [r2, #0]
 8005ce4:	525a      	strh	r2, [r3, r1]
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	2280      	movs	r2, #128	@ 0x80
 8005cea:	589b      	ldr	r3, [r3, r2]
 8005cec:	681b      	ldr	r3, [r3, #0]
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	2220      	movs	r2, #32
 8005cf2:	4013      	ands	r3, r2
 8005cf4:	d170      	bne.n	8005dd8 <HAL_UART_IRQHandler+0x430>
 8005cf6:	f3ef 8310 	mrs	r3, PRIMASK
 8005cfa:	633b      	str	r3, [r7, #48]	@ 0x30
 8005cfc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005cfe:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005d00:	2301      	movs	r3, #1
 8005d02:	637b      	str	r3, [r7, #52]	@ 0x34
 8005d04:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005d06:	f383 8810 	msr	PRIMASK, r3
 8005d0a:	46c0      	nop			@ (mov r8, r8)
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	681b      	ldr	r3, [r3, #0]
 8005d10:	681a      	ldr	r2, [r3, #0]
 8005d12:	687b      	ldr	r3, [r7, #4]
 8005d14:	681b      	ldr	r3, [r3, #0]
 8005d16:	49b4      	ldr	r1, [pc, #720]	@ (8005fe8 <HAL_UART_IRQHandler+0x640>)
 8005d18:	400a      	ands	r2, r1
 8005d1a:	601a      	str	r2, [r3, #0]
 8005d1c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8005d1e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005d20:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005d22:	f383 8810 	msr	PRIMASK, r3
 8005d26:	46c0      	nop			@ (mov r8, r8)
 8005d28:	f3ef 8310 	mrs	r3, PRIMASK
 8005d2c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005d2e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005d30:	677b      	str	r3, [r7, #116]	@ 0x74
 8005d32:	2301      	movs	r3, #1
 8005d34:	643b      	str	r3, [r7, #64]	@ 0x40
 8005d36:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8005d38:	f383 8810 	msr	PRIMASK, r3
 8005d3c:	46c0      	nop			@ (mov r8, r8)
 8005d3e:	687b      	ldr	r3, [r7, #4]
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	689a      	ldr	r2, [r3, #8]
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	681b      	ldr	r3, [r3, #0]
 8005d48:	2101      	movs	r1, #1
 8005d4a:	438a      	bics	r2, r1
 8005d4c:	609a      	str	r2, [r3, #8]
 8005d4e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005d50:	647b      	str	r3, [r7, #68]	@ 0x44
 8005d52:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005d54:	f383 8810 	msr	PRIMASK, r3
 8005d58:	46c0      	nop			@ (mov r8, r8)
 8005d5a:	f3ef 8310 	mrs	r3, PRIMASK
 8005d5e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005d60:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8005d62:	673b      	str	r3, [r7, #112]	@ 0x70
 8005d64:	2301      	movs	r3, #1
 8005d66:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005d68:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8005d6a:	f383 8810 	msr	PRIMASK, r3
 8005d6e:	46c0      	nop			@ (mov r8, r8)
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	681b      	ldr	r3, [r3, #0]
 8005d74:	689a      	ldr	r2, [r3, #8]
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	681b      	ldr	r3, [r3, #0]
 8005d7a:	2140      	movs	r1, #64	@ 0x40
 8005d7c:	438a      	bics	r2, r1
 8005d7e:	609a      	str	r2, [r3, #8]
 8005d80:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8005d82:	653b      	str	r3, [r7, #80]	@ 0x50
 8005d84:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005d86:	f383 8810 	msr	PRIMASK, r3
 8005d8a:	46c0      	nop			@ (mov r8, r8)
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	228c      	movs	r2, #140	@ 0x8c
 8005d90:	2120      	movs	r1, #32
 8005d92:	5099      	str	r1, [r3, r2]
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	2200      	movs	r2, #0
 8005d98:	66da      	str	r2, [r3, #108]	@ 0x6c
 8005d9a:	f3ef 8310 	mrs	r3, PRIMASK
 8005d9e:	657b      	str	r3, [r7, #84]	@ 0x54
 8005da0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8005da2:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8005da4:	2301      	movs	r3, #1
 8005da6:	65bb      	str	r3, [r7, #88]	@ 0x58
 8005da8:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8005daa:	f383 8810 	msr	PRIMASK, r3
 8005dae:	46c0      	nop			@ (mov r8, r8)
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	681a      	ldr	r2, [r3, #0]
 8005db6:	687b      	ldr	r3, [r7, #4]
 8005db8:	681b      	ldr	r3, [r3, #0]
 8005dba:	2110      	movs	r1, #16
 8005dbc:	438a      	bics	r2, r1
 8005dbe:	601a      	str	r2, [r3, #0]
 8005dc0:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8005dc2:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005dc4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8005dc6:	f383 8810 	msr	PRIMASK, r3
 8005dca:	46c0      	nop			@ (mov r8, r8)
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	2280      	movs	r2, #128	@ 0x80
 8005dd0:	589b      	ldr	r3, [r3, r2]
 8005dd2:	0018      	movs	r0, r3
 8005dd4:	f7fd f850 	bl	8002e78 <HAL_DMA_Abort>
 8005dd8:	687b      	ldr	r3, [r7, #4]
 8005dda:	2202      	movs	r2, #2
 8005ddc:	671a      	str	r2, [r3, #112]	@ 0x70
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	225c      	movs	r2, #92	@ 0x5c
 8005de2:	5a9a      	ldrh	r2, [r3, r2]
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	215e      	movs	r1, #94	@ 0x5e
 8005de8:	5a5b      	ldrh	r3, [r3, r1]
 8005dea:	b29b      	uxth	r3, r3
 8005dec:	1ad3      	subs	r3, r2, r3
 8005dee:	b29a      	uxth	r2, r3
 8005df0:	687b      	ldr	r3, [r7, #4]
 8005df2:	0011      	movs	r1, r2
 8005df4:	0018      	movs	r0, r3
 8005df6:	f000 f90d 	bl	8006014 <HAL_UARTEx_RxEventCallback>
 8005dfa:	e0ed      	b.n	8005fd8 <HAL_UART_IRQHandler+0x630>
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	225c      	movs	r2, #92	@ 0x5c
 8005e00:	5a99      	ldrh	r1, [r3, r2]
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	225e      	movs	r2, #94	@ 0x5e
 8005e06:	5a9b      	ldrh	r3, [r3, r2]
 8005e08:	b29a      	uxth	r2, r3
 8005e0a:	208e      	movs	r0, #142	@ 0x8e
 8005e0c:	183b      	adds	r3, r7, r0
 8005e0e:	1a8a      	subs	r2, r1, r2
 8005e10:	801a      	strh	r2, [r3, #0]
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	225e      	movs	r2, #94	@ 0x5e
 8005e16:	5a9b      	ldrh	r3, [r3, r2]
 8005e18:	b29b      	uxth	r3, r3
 8005e1a:	2b00      	cmp	r3, #0
 8005e1c:	d100      	bne.n	8005e20 <HAL_UART_IRQHandler+0x478>
 8005e1e:	e0dd      	b.n	8005fdc <HAL_UART_IRQHandler+0x634>
 8005e20:	183b      	adds	r3, r7, r0
 8005e22:	881b      	ldrh	r3, [r3, #0]
 8005e24:	2b00      	cmp	r3, #0
 8005e26:	d100      	bne.n	8005e2a <HAL_UART_IRQHandler+0x482>
 8005e28:	e0d8      	b.n	8005fdc <HAL_UART_IRQHandler+0x634>
 8005e2a:	f3ef 8310 	mrs	r3, PRIMASK
 8005e2e:	60fb      	str	r3, [r7, #12]
 8005e30:	68fb      	ldr	r3, [r7, #12]
 8005e32:	2488      	movs	r4, #136	@ 0x88
 8005e34:	193a      	adds	r2, r7, r4
 8005e36:	6013      	str	r3, [r2, #0]
 8005e38:	2301      	movs	r3, #1
 8005e3a:	613b      	str	r3, [r7, #16]
 8005e3c:	693b      	ldr	r3, [r7, #16]
 8005e3e:	f383 8810 	msr	PRIMASK, r3
 8005e42:	46c0      	nop			@ (mov r8, r8)
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	681b      	ldr	r3, [r3, #0]
 8005e48:	681a      	ldr	r2, [r3, #0]
 8005e4a:	687b      	ldr	r3, [r7, #4]
 8005e4c:	681b      	ldr	r3, [r3, #0]
 8005e4e:	4967      	ldr	r1, [pc, #412]	@ (8005fec <HAL_UART_IRQHandler+0x644>)
 8005e50:	400a      	ands	r2, r1
 8005e52:	601a      	str	r2, [r3, #0]
 8005e54:	193b      	adds	r3, r7, r4
 8005e56:	681b      	ldr	r3, [r3, #0]
 8005e58:	617b      	str	r3, [r7, #20]
 8005e5a:	697b      	ldr	r3, [r7, #20]
 8005e5c:	f383 8810 	msr	PRIMASK, r3
 8005e60:	46c0      	nop			@ (mov r8, r8)
 8005e62:	f3ef 8310 	mrs	r3, PRIMASK
 8005e66:	61bb      	str	r3, [r7, #24]
 8005e68:	69bb      	ldr	r3, [r7, #24]
 8005e6a:	2484      	movs	r4, #132	@ 0x84
 8005e6c:	193a      	adds	r2, r7, r4
 8005e6e:	6013      	str	r3, [r2, #0]
 8005e70:	2301      	movs	r3, #1
 8005e72:	61fb      	str	r3, [r7, #28]
 8005e74:	69fb      	ldr	r3, [r7, #28]
 8005e76:	f383 8810 	msr	PRIMASK, r3
 8005e7a:	46c0      	nop			@ (mov r8, r8)
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	681b      	ldr	r3, [r3, #0]
 8005e80:	689a      	ldr	r2, [r3, #8]
 8005e82:	687b      	ldr	r3, [r7, #4]
 8005e84:	681b      	ldr	r3, [r3, #0]
 8005e86:	495a      	ldr	r1, [pc, #360]	@ (8005ff0 <HAL_UART_IRQHandler+0x648>)
 8005e88:	400a      	ands	r2, r1
 8005e8a:	609a      	str	r2, [r3, #8]
 8005e8c:	193b      	adds	r3, r7, r4
 8005e8e:	681b      	ldr	r3, [r3, #0]
 8005e90:	623b      	str	r3, [r7, #32]
 8005e92:	6a3b      	ldr	r3, [r7, #32]
 8005e94:	f383 8810 	msr	PRIMASK, r3
 8005e98:	46c0      	nop			@ (mov r8, r8)
 8005e9a:	687b      	ldr	r3, [r7, #4]
 8005e9c:	228c      	movs	r2, #140	@ 0x8c
 8005e9e:	2120      	movs	r1, #32
 8005ea0:	5099      	str	r1, [r3, r2]
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	2200      	movs	r2, #0
 8005ea6:	66da      	str	r2, [r3, #108]	@ 0x6c
 8005ea8:	687b      	ldr	r3, [r7, #4]
 8005eaa:	2200      	movs	r2, #0
 8005eac:	675a      	str	r2, [r3, #116]	@ 0x74
 8005eae:	f3ef 8310 	mrs	r3, PRIMASK
 8005eb2:	627b      	str	r3, [r7, #36]	@ 0x24
 8005eb4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005eb6:	2480      	movs	r4, #128	@ 0x80
 8005eb8:	193a      	adds	r2, r7, r4
 8005eba:	6013      	str	r3, [r2, #0]
 8005ebc:	2301      	movs	r3, #1
 8005ebe:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005ec0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005ec2:	f383 8810 	msr	PRIMASK, r3
 8005ec6:	46c0      	nop			@ (mov r8, r8)
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	681b      	ldr	r3, [r3, #0]
 8005ecc:	681a      	ldr	r2, [r3, #0]
 8005ece:	687b      	ldr	r3, [r7, #4]
 8005ed0:	681b      	ldr	r3, [r3, #0]
 8005ed2:	2110      	movs	r1, #16
 8005ed4:	438a      	bics	r2, r1
 8005ed6:	601a      	str	r2, [r3, #0]
 8005ed8:	193b      	adds	r3, r7, r4
 8005eda:	681b      	ldr	r3, [r3, #0]
 8005edc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005ede:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005ee0:	f383 8810 	msr	PRIMASK, r3
 8005ee4:	46c0      	nop			@ (mov r8, r8)
 8005ee6:	687b      	ldr	r3, [r7, #4]
 8005ee8:	2202      	movs	r2, #2
 8005eea:	671a      	str	r2, [r3, #112]	@ 0x70
 8005eec:	183b      	adds	r3, r7, r0
 8005eee:	881a      	ldrh	r2, [r3, #0]
 8005ef0:	687b      	ldr	r3, [r7, #4]
 8005ef2:	0011      	movs	r1, r2
 8005ef4:	0018      	movs	r0, r3
 8005ef6:	f000 f88d 	bl	8006014 <HAL_UARTEx_RxEventCallback>
 8005efa:	e06f      	b.n	8005fdc <HAL_UART_IRQHandler+0x634>
 8005efc:	23a4      	movs	r3, #164	@ 0xa4
 8005efe:	18fb      	adds	r3, r7, r3
 8005f00:	681a      	ldr	r2, [r3, #0]
 8005f02:	2380      	movs	r3, #128	@ 0x80
 8005f04:	035b      	lsls	r3, r3, #13
 8005f06:	4013      	ands	r3, r2
 8005f08:	d010      	beq.n	8005f2c <HAL_UART_IRQHandler+0x584>
 8005f0a:	239c      	movs	r3, #156	@ 0x9c
 8005f0c:	18fb      	adds	r3, r7, r3
 8005f0e:	681a      	ldr	r2, [r3, #0]
 8005f10:	2380      	movs	r3, #128	@ 0x80
 8005f12:	03db      	lsls	r3, r3, #15
 8005f14:	4013      	ands	r3, r2
 8005f16:	d009      	beq.n	8005f2c <HAL_UART_IRQHandler+0x584>
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	681b      	ldr	r3, [r3, #0]
 8005f1c:	2280      	movs	r2, #128	@ 0x80
 8005f1e:	0352      	lsls	r2, r2, #13
 8005f20:	621a      	str	r2, [r3, #32]
 8005f22:	687b      	ldr	r3, [r7, #4]
 8005f24:	0018      	movs	r0, r3
 8005f26:	f001 fc9f 	bl	8007868 <HAL_UARTEx_WakeupCallback>
 8005f2a:	e05a      	b.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005f2c:	23a4      	movs	r3, #164	@ 0xa4
 8005f2e:	18fb      	adds	r3, r7, r3
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	2280      	movs	r2, #128	@ 0x80
 8005f34:	4013      	ands	r3, r2
 8005f36:	d016      	beq.n	8005f66 <HAL_UART_IRQHandler+0x5be>
 8005f38:	23a0      	movs	r3, #160	@ 0xa0
 8005f3a:	18fb      	adds	r3, r7, r3
 8005f3c:	681b      	ldr	r3, [r3, #0]
 8005f3e:	2280      	movs	r2, #128	@ 0x80
 8005f40:	4013      	ands	r3, r2
 8005f42:	d106      	bne.n	8005f52 <HAL_UART_IRQHandler+0x5aa>
 8005f44:	239c      	movs	r3, #156	@ 0x9c
 8005f46:	18fb      	adds	r3, r7, r3
 8005f48:	681a      	ldr	r2, [r3, #0]
 8005f4a:	2380      	movs	r3, #128	@ 0x80
 8005f4c:	041b      	lsls	r3, r3, #16
 8005f4e:	4013      	ands	r3, r2
 8005f50:	d009      	beq.n	8005f66 <HAL_UART_IRQHandler+0x5be>
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8005f56:	2b00      	cmp	r3, #0
 8005f58:	d042      	beq.n	8005fe0 <HAL_UART_IRQHandler+0x638>
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8005f5e:	687a      	ldr	r2, [r7, #4]
 8005f60:	0010      	movs	r0, r2
 8005f62:	4798      	blx	r3
 8005f64:	e03c      	b.n	8005fe0 <HAL_UART_IRQHandler+0x638>
 8005f66:	23a4      	movs	r3, #164	@ 0xa4
 8005f68:	18fb      	adds	r3, r7, r3
 8005f6a:	681b      	ldr	r3, [r3, #0]
 8005f6c:	2240      	movs	r2, #64	@ 0x40
 8005f6e:	4013      	ands	r3, r2
 8005f70:	d00a      	beq.n	8005f88 <HAL_UART_IRQHandler+0x5e0>
 8005f72:	23a0      	movs	r3, #160	@ 0xa0
 8005f74:	18fb      	adds	r3, r7, r3
 8005f76:	681b      	ldr	r3, [r3, #0]
 8005f78:	2240      	movs	r2, #64	@ 0x40
 8005f7a:	4013      	ands	r3, r2
 8005f7c:	d004      	beq.n	8005f88 <HAL_UART_IRQHandler+0x5e0>
 8005f7e:	687b      	ldr	r3, [r7, #4]
 8005f80:	0018      	movs	r0, r3
 8005f82:	f000 ff18 	bl	8006db6 <UART_EndTransmit_IT>
 8005f86:	e02c      	b.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005f88:	23a4      	movs	r3, #164	@ 0xa4
 8005f8a:	18fb      	adds	r3, r7, r3
 8005f8c:	681a      	ldr	r2, [r3, #0]
 8005f8e:	2380      	movs	r3, #128	@ 0x80
 8005f90:	041b      	lsls	r3, r3, #16
 8005f92:	4013      	ands	r3, r2
 8005f94:	d00b      	beq.n	8005fae <HAL_UART_IRQHandler+0x606>
 8005f96:	23a0      	movs	r3, #160	@ 0xa0
 8005f98:	18fb      	adds	r3, r7, r3
 8005f9a:	681a      	ldr	r2, [r3, #0]
 8005f9c:	2380      	movs	r3, #128	@ 0x80
 8005f9e:	05db      	lsls	r3, r3, #23
 8005fa0:	4013      	ands	r3, r2
 8005fa2:	d004      	beq.n	8005fae <HAL_UART_IRQHandler+0x606>
 8005fa4:	687b      	ldr	r3, [r7, #4]
 8005fa6:	0018      	movs	r0, r3
 8005fa8:	f001 fc6e 	bl	8007888 <HAL_UARTEx_TxFifoEmptyCallback>
 8005fac:	e019      	b.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005fae:	23a4      	movs	r3, #164	@ 0xa4
 8005fb0:	18fb      	adds	r3, r7, r3
 8005fb2:	681a      	ldr	r2, [r3, #0]
 8005fb4:	2380      	movs	r3, #128	@ 0x80
 8005fb6:	045b      	lsls	r3, r3, #17
 8005fb8:	4013      	ands	r3, r2
 8005fba:	d012      	beq.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005fbc:	23a0      	movs	r3, #160	@ 0xa0
 8005fbe:	18fb      	adds	r3, r7, r3
 8005fc0:	681b      	ldr	r3, [r3, #0]
 8005fc2:	2b00      	cmp	r3, #0
 8005fc4:	da0d      	bge.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005fc6:	687b      	ldr	r3, [r7, #4]
 8005fc8:	0018      	movs	r0, r3
 8005fca:	f001 fc55 	bl	8007878 <HAL_UARTEx_RxFifoFullCallback>
 8005fce:	e008      	b.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005fd0:	46c0      	nop			@ (mov r8, r8)
 8005fd2:	e006      	b.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005fd4:	46c0      	nop			@ (mov r8, r8)
 8005fd6:	e004      	b.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005fd8:	46c0      	nop			@ (mov r8, r8)
 8005fda:	e002      	b.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005fdc:	46c0      	nop			@ (mov r8, r8)
 8005fde:	e000      	b.n	8005fe2 <HAL_UART_IRQHandler+0x63a>
 8005fe0:	46c0      	nop			@ (mov r8, r8)
 8005fe2:	46bd      	mov	sp, r7
 8005fe4:	b02a      	add	sp, #168	@ 0xa8
 8005fe6:	bdb0      	pop	{r4, r5, r7, pc}
 8005fe8:	fffffeff 	.word	0xfffffeff
 8005fec:	fffffedf 	.word	0xfffffedf
 8005ff0:	effffffe 	.word	0xeffffffe

08005ff4 <HAL_UART_TxCpltCallback>:
 8005ff4:	b580      	push	{r7, lr}
 8005ff6:	b082      	sub	sp, #8
 8005ff8:	af00      	add	r7, sp, #0
 8005ffa:	6078      	str	r0, [r7, #4]
 8005ffc:	46c0      	nop			@ (mov r8, r8)
 8005ffe:	46bd      	mov	sp, r7
 8006000:	b002      	add	sp, #8
 8006002:	bd80      	pop	{r7, pc}

08006004 <HAL_UART_ErrorCallback>:
 8006004:	b580      	push	{r7, lr}
 8006006:	b082      	sub	sp, #8
 8006008:	af00      	add	r7, sp, #0
 800600a:	6078      	str	r0, [r7, #4]
 800600c:	46c0      	nop			@ (mov r8, r8)
 800600e:	46bd      	mov	sp, r7
 8006010:	b002      	add	sp, #8
 8006012:	bd80      	pop	{r7, pc}

08006014 <HAL_UARTEx_RxEventCallback>:
 8006014:	b580      	push	{r7, lr}
 8006016:	b082      	sub	sp, #8
 8006018:	af00      	add	r7, sp, #0
 800601a:	6078      	str	r0, [r7, #4]
 800601c:	000a      	movs	r2, r1
 800601e:	1cbb      	adds	r3, r7, #2
 8006020:	801a      	strh	r2, [r3, #0]
 8006022:	46c0      	nop			@ (mov r8, r8)
 8006024:	46bd      	mov	sp, r7
 8006026:	b002      	add	sp, #8
 8006028:	bd80      	pop	{r7, pc}
	...

0800602c <UART_SetConfig>:
 800602c:	b5b0      	push	{r4, r5, r7, lr}
 800602e:	b090      	sub	sp, #64	@ 0x40
 8006030:	af00      	add	r7, sp, #0
 8006032:	6278      	str	r0, [r7, #36]	@ 0x24
 8006034:	231a      	movs	r3, #26
 8006036:	2220      	movs	r2, #32
 8006038:	189b      	adds	r3, r3, r2
 800603a:	19db      	adds	r3, r3, r7
 800603c:	2200      	movs	r2, #0
 800603e:	701a      	strb	r2, [r3, #0]
 8006040:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006042:	689a      	ldr	r2, [r3, #8]
 8006044:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006046:	691b      	ldr	r3, [r3, #16]
 8006048:	431a      	orrs	r2, r3
 800604a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800604c:	695b      	ldr	r3, [r3, #20]
 800604e:	431a      	orrs	r2, r3
 8006050:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006052:	69db      	ldr	r3, [r3, #28]
 8006054:	4313      	orrs	r3, r2
 8006056:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006058:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	681b      	ldr	r3, [r3, #0]
 800605e:	4ac1      	ldr	r2, [pc, #772]	@ (8006364 <UART_SetConfig+0x338>)
 8006060:	4013      	ands	r3, r2
 8006062:	0019      	movs	r1, r3
 8006064:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006066:	681a      	ldr	r2, [r3, #0]
 8006068:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800606a:	430b      	orrs	r3, r1
 800606c:	6013      	str	r3, [r2, #0]
 800606e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006070:	681b      	ldr	r3, [r3, #0]
 8006072:	685b      	ldr	r3, [r3, #4]
 8006074:	4abc      	ldr	r2, [pc, #752]	@ (8006368 <UART_SetConfig+0x33c>)
 8006076:	4013      	ands	r3, r2
 8006078:	0018      	movs	r0, r3
 800607a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800607c:	68d9      	ldr	r1, [r3, #12]
 800607e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006080:	681a      	ldr	r2, [r3, #0]
 8006082:	0003      	movs	r3, r0
 8006084:	430b      	orrs	r3, r1
 8006086:	6053      	str	r3, [r2, #4]
 8006088:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800608a:	699b      	ldr	r3, [r3, #24]
 800608c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800608e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006090:	681b      	ldr	r3, [r3, #0]
 8006092:	4ab6      	ldr	r2, [pc, #728]	@ (800636c <UART_SetConfig+0x340>)
 8006094:	4293      	cmp	r3, r2
 8006096:	d009      	beq.n	80060ac <UART_SetConfig+0x80>
 8006098:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	4ab4      	ldr	r2, [pc, #720]	@ (8006370 <UART_SetConfig+0x344>)
 800609e:	4293      	cmp	r3, r2
 80060a0:	d004      	beq.n	80060ac <UART_SetConfig+0x80>
 80060a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060a4:	6a1b      	ldr	r3, [r3, #32]
 80060a6:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80060a8:	4313      	orrs	r3, r2
 80060aa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80060ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	689b      	ldr	r3, [r3, #8]
 80060b2:	4ab0      	ldr	r2, [pc, #704]	@ (8006374 <UART_SetConfig+0x348>)
 80060b4:	4013      	ands	r3, r2
 80060b6:	0019      	movs	r1, r3
 80060b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060ba:	681a      	ldr	r2, [r3, #0]
 80060bc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80060be:	430b      	orrs	r3, r1
 80060c0:	6093      	str	r3, [r2, #8]
 80060c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060c4:	681b      	ldr	r3, [r3, #0]
 80060c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80060c8:	220f      	movs	r2, #15
 80060ca:	4393      	bics	r3, r2
 80060cc:	0018      	movs	r0, r3
 80060ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060d0:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80060d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060d4:	681a      	ldr	r2, [r3, #0]
 80060d6:	0003      	movs	r3, r0
 80060d8:	430b      	orrs	r3, r1
 80060da:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80060dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	4aa5      	ldr	r2, [pc, #660]	@ (8006378 <UART_SetConfig+0x34c>)
 80060e2:	4293      	cmp	r3, r2
 80060e4:	d131      	bne.n	800614a <UART_SetConfig+0x11e>
 80060e6:	4ba5      	ldr	r3, [pc, #660]	@ (800637c <UART_SetConfig+0x350>)
 80060e8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80060ea:	2203      	movs	r2, #3
 80060ec:	4013      	ands	r3, r2
 80060ee:	2b03      	cmp	r3, #3
 80060f0:	d01d      	beq.n	800612e <UART_SetConfig+0x102>
 80060f2:	d823      	bhi.n	800613c <UART_SetConfig+0x110>
 80060f4:	2b02      	cmp	r3, #2
 80060f6:	d00c      	beq.n	8006112 <UART_SetConfig+0xe6>
 80060f8:	d820      	bhi.n	800613c <UART_SetConfig+0x110>
 80060fa:	2b00      	cmp	r3, #0
 80060fc:	d002      	beq.n	8006104 <UART_SetConfig+0xd8>
 80060fe:	2b01      	cmp	r3, #1
 8006100:	d00e      	beq.n	8006120 <UART_SetConfig+0xf4>
 8006102:	e01b      	b.n	800613c <UART_SetConfig+0x110>
 8006104:	231b      	movs	r3, #27
 8006106:	2220      	movs	r2, #32
 8006108:	189b      	adds	r3, r3, r2
 800610a:	19db      	adds	r3, r3, r7
 800610c:	2200      	movs	r2, #0
 800610e:	701a      	strb	r2, [r3, #0]
 8006110:	e154      	b.n	80063bc <UART_SetConfig+0x390>
 8006112:	231b      	movs	r3, #27
 8006114:	2220      	movs	r2, #32
 8006116:	189b      	adds	r3, r3, r2
 8006118:	19db      	adds	r3, r3, r7
 800611a:	2202      	movs	r2, #2
 800611c:	701a      	strb	r2, [r3, #0]
 800611e:	e14d      	b.n	80063bc <UART_SetConfig+0x390>
 8006120:	231b      	movs	r3, #27
 8006122:	2220      	movs	r2, #32
 8006124:	189b      	adds	r3, r3, r2
 8006126:	19db      	adds	r3, r3, r7
 8006128:	2204      	movs	r2, #4
 800612a:	701a      	strb	r2, [r3, #0]
 800612c:	e146      	b.n	80063bc <UART_SetConfig+0x390>
 800612e:	231b      	movs	r3, #27
 8006130:	2220      	movs	r2, #32
 8006132:	189b      	adds	r3, r3, r2
 8006134:	19db      	adds	r3, r3, r7
 8006136:	2208      	movs	r2, #8
 8006138:	701a      	strb	r2, [r3, #0]
 800613a:	e13f      	b.n	80063bc <UART_SetConfig+0x390>
 800613c:	231b      	movs	r3, #27
 800613e:	2220      	movs	r2, #32
 8006140:	189b      	adds	r3, r3, r2
 8006142:	19db      	adds	r3, r3, r7
 8006144:	2210      	movs	r2, #16
 8006146:	701a      	strb	r2, [r3, #0]
 8006148:	e138      	b.n	80063bc <UART_SetConfig+0x390>
 800614a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800614c:	681b      	ldr	r3, [r3, #0]
 800614e:	4a8c      	ldr	r2, [pc, #560]	@ (8006380 <UART_SetConfig+0x354>)
 8006150:	4293      	cmp	r3, r2
 8006152:	d131      	bne.n	80061b8 <UART_SetConfig+0x18c>
 8006154:	4b89      	ldr	r3, [pc, #548]	@ (800637c <UART_SetConfig+0x350>)
 8006156:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006158:	220c      	movs	r2, #12
 800615a:	4013      	ands	r3, r2
 800615c:	2b0c      	cmp	r3, #12
 800615e:	d01d      	beq.n	800619c <UART_SetConfig+0x170>
 8006160:	d823      	bhi.n	80061aa <UART_SetConfig+0x17e>
 8006162:	2b08      	cmp	r3, #8
 8006164:	d00c      	beq.n	8006180 <UART_SetConfig+0x154>
 8006166:	d820      	bhi.n	80061aa <UART_SetConfig+0x17e>
 8006168:	2b00      	cmp	r3, #0
 800616a:	d002      	beq.n	8006172 <UART_SetConfig+0x146>
 800616c:	2b04      	cmp	r3, #4
 800616e:	d00e      	beq.n	800618e <UART_SetConfig+0x162>
 8006170:	e01b      	b.n	80061aa <UART_SetConfig+0x17e>
 8006172:	231b      	movs	r3, #27
 8006174:	2220      	movs	r2, #32
 8006176:	189b      	adds	r3, r3, r2
 8006178:	19db      	adds	r3, r3, r7
 800617a:	2200      	movs	r2, #0
 800617c:	701a      	strb	r2, [r3, #0]
 800617e:	e11d      	b.n	80063bc <UART_SetConfig+0x390>
 8006180:	231b      	movs	r3, #27
 8006182:	2220      	movs	r2, #32
 8006184:	189b      	adds	r3, r3, r2
 8006186:	19db      	adds	r3, r3, r7
 8006188:	2202      	movs	r2, #2
 800618a:	701a      	strb	r2, [r3, #0]
 800618c:	e116      	b.n	80063bc <UART_SetConfig+0x390>
 800618e:	231b      	movs	r3, #27
 8006190:	2220      	movs	r2, #32
 8006192:	189b      	adds	r3, r3, r2
 8006194:	19db      	adds	r3, r3, r7
 8006196:	2204      	movs	r2, #4
 8006198:	701a      	strb	r2, [r3, #0]
 800619a:	e10f      	b.n	80063bc <UART_SetConfig+0x390>
 800619c:	231b      	movs	r3, #27
 800619e:	2220      	movs	r2, #32
 80061a0:	189b      	adds	r3, r3, r2
 80061a2:	19db      	adds	r3, r3, r7
 80061a4:	2208      	movs	r2, #8
 80061a6:	701a      	strb	r2, [r3, #0]
 80061a8:	e108      	b.n	80063bc <UART_SetConfig+0x390>
 80061aa:	231b      	movs	r3, #27
 80061ac:	2220      	movs	r2, #32
 80061ae:	189b      	adds	r3, r3, r2
 80061b0:	19db      	adds	r3, r3, r7
 80061b2:	2210      	movs	r2, #16
 80061b4:	701a      	strb	r2, [r3, #0]
 80061b6:	e101      	b.n	80063bc <UART_SetConfig+0x390>
 80061b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80061ba:	681b      	ldr	r3, [r3, #0]
 80061bc:	4a71      	ldr	r2, [pc, #452]	@ (8006384 <UART_SetConfig+0x358>)
 80061be:	4293      	cmp	r3, r2
 80061c0:	d131      	bne.n	8006226 <UART_SetConfig+0x1fa>
 80061c2:	4b6e      	ldr	r3, [pc, #440]	@ (800637c <UART_SetConfig+0x350>)
 80061c4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80061c6:	2230      	movs	r2, #48	@ 0x30
 80061c8:	4013      	ands	r3, r2
 80061ca:	2b30      	cmp	r3, #48	@ 0x30
 80061cc:	d01d      	beq.n	800620a <UART_SetConfig+0x1de>
 80061ce:	d823      	bhi.n	8006218 <UART_SetConfig+0x1ec>
 80061d0:	2b20      	cmp	r3, #32
 80061d2:	d00c      	beq.n	80061ee <UART_SetConfig+0x1c2>
 80061d4:	d820      	bhi.n	8006218 <UART_SetConfig+0x1ec>
 80061d6:	2b00      	cmp	r3, #0
 80061d8:	d002      	beq.n	80061e0 <UART_SetConfig+0x1b4>
 80061da:	2b10      	cmp	r3, #16
 80061dc:	d00e      	beq.n	80061fc <UART_SetConfig+0x1d0>
 80061de:	e01b      	b.n	8006218 <UART_SetConfig+0x1ec>
 80061e0:	231b      	movs	r3, #27
 80061e2:	2220      	movs	r2, #32
 80061e4:	189b      	adds	r3, r3, r2
 80061e6:	19db      	adds	r3, r3, r7
 80061e8:	2200      	movs	r2, #0
 80061ea:	701a      	strb	r2, [r3, #0]
 80061ec:	e0e6      	b.n	80063bc <UART_SetConfig+0x390>
 80061ee:	231b      	movs	r3, #27
 80061f0:	2220      	movs	r2, #32
 80061f2:	189b      	adds	r3, r3, r2
 80061f4:	19db      	adds	r3, r3, r7
 80061f6:	2202      	movs	r2, #2
 80061f8:	701a      	strb	r2, [r3, #0]
 80061fa:	e0df      	b.n	80063bc <UART_SetConfig+0x390>
 80061fc:	231b      	movs	r3, #27
 80061fe:	2220      	movs	r2, #32
 8006200:	189b      	adds	r3, r3, r2
 8006202:	19db      	adds	r3, r3, r7
 8006204:	2204      	movs	r2, #4
 8006206:	701a      	strb	r2, [r3, #0]
 8006208:	e0d8      	b.n	80063bc <UART_SetConfig+0x390>
 800620a:	231b      	movs	r3, #27
 800620c:	2220      	movs	r2, #32
 800620e:	189b      	adds	r3, r3, r2
 8006210:	19db      	adds	r3, r3, r7
 8006212:	2208      	movs	r2, #8
 8006214:	701a      	strb	r2, [r3, #0]
 8006216:	e0d1      	b.n	80063bc <UART_SetConfig+0x390>
 8006218:	231b      	movs	r3, #27
 800621a:	2220      	movs	r2, #32
 800621c:	189b      	adds	r3, r3, r2
 800621e:	19db      	adds	r3, r3, r7
 8006220:	2210      	movs	r2, #16
 8006222:	701a      	strb	r2, [r3, #0]
 8006224:	e0ca      	b.n	80063bc <UART_SetConfig+0x390>
 8006226:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006228:	681b      	ldr	r3, [r3, #0]
 800622a:	4a57      	ldr	r2, [pc, #348]	@ (8006388 <UART_SetConfig+0x35c>)
 800622c:	4293      	cmp	r3, r2
 800622e:	d106      	bne.n	800623e <UART_SetConfig+0x212>
 8006230:	231b      	movs	r3, #27
 8006232:	2220      	movs	r2, #32
 8006234:	189b      	adds	r3, r3, r2
 8006236:	19db      	adds	r3, r3, r7
 8006238:	2200      	movs	r2, #0
 800623a:	701a      	strb	r2, [r3, #0]
 800623c:	e0be      	b.n	80063bc <UART_SetConfig+0x390>
 800623e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006240:	681b      	ldr	r3, [r3, #0]
 8006242:	4a52      	ldr	r2, [pc, #328]	@ (800638c <UART_SetConfig+0x360>)
 8006244:	4293      	cmp	r3, r2
 8006246:	d106      	bne.n	8006256 <UART_SetConfig+0x22a>
 8006248:	231b      	movs	r3, #27
 800624a:	2220      	movs	r2, #32
 800624c:	189b      	adds	r3, r3, r2
 800624e:	19db      	adds	r3, r3, r7
 8006250:	2200      	movs	r2, #0
 8006252:	701a      	strb	r2, [r3, #0]
 8006254:	e0b2      	b.n	80063bc <UART_SetConfig+0x390>
 8006256:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006258:	681b      	ldr	r3, [r3, #0]
 800625a:	4a4d      	ldr	r2, [pc, #308]	@ (8006390 <UART_SetConfig+0x364>)
 800625c:	4293      	cmp	r3, r2
 800625e:	d106      	bne.n	800626e <UART_SetConfig+0x242>
 8006260:	231b      	movs	r3, #27
 8006262:	2220      	movs	r2, #32
 8006264:	189b      	adds	r3, r3, r2
 8006266:	19db      	adds	r3, r3, r7
 8006268:	2200      	movs	r2, #0
 800626a:	701a      	strb	r2, [r3, #0]
 800626c:	e0a6      	b.n	80063bc <UART_SetConfig+0x390>
 800626e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006270:	681b      	ldr	r3, [r3, #0]
 8006272:	4a3e      	ldr	r2, [pc, #248]	@ (800636c <UART_SetConfig+0x340>)
 8006274:	4293      	cmp	r3, r2
 8006276:	d13e      	bne.n	80062f6 <UART_SetConfig+0x2ca>
 8006278:	4b40      	ldr	r3, [pc, #256]	@ (800637c <UART_SetConfig+0x350>)
 800627a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800627c:	23c0      	movs	r3, #192	@ 0xc0
 800627e:	011b      	lsls	r3, r3, #4
 8006280:	4013      	ands	r3, r2
 8006282:	22c0      	movs	r2, #192	@ 0xc0
 8006284:	0112      	lsls	r2, r2, #4
 8006286:	4293      	cmp	r3, r2
 8006288:	d027      	beq.n	80062da <UART_SetConfig+0x2ae>
 800628a:	22c0      	movs	r2, #192	@ 0xc0
 800628c:	0112      	lsls	r2, r2, #4
 800628e:	4293      	cmp	r3, r2
 8006290:	d82a      	bhi.n	80062e8 <UART_SetConfig+0x2bc>
 8006292:	2280      	movs	r2, #128	@ 0x80
 8006294:	0112      	lsls	r2, r2, #4
 8006296:	4293      	cmp	r3, r2
 8006298:	d011      	beq.n	80062be <UART_SetConfig+0x292>
 800629a:	2280      	movs	r2, #128	@ 0x80
 800629c:	0112      	lsls	r2, r2, #4
 800629e:	4293      	cmp	r3, r2
 80062a0:	d822      	bhi.n	80062e8 <UART_SetConfig+0x2bc>
 80062a2:	2b00      	cmp	r3, #0
 80062a4:	d004      	beq.n	80062b0 <UART_SetConfig+0x284>
 80062a6:	2280      	movs	r2, #128	@ 0x80
 80062a8:	00d2      	lsls	r2, r2, #3
 80062aa:	4293      	cmp	r3, r2
 80062ac:	d00e      	beq.n	80062cc <UART_SetConfig+0x2a0>
 80062ae:	e01b      	b.n	80062e8 <UART_SetConfig+0x2bc>
 80062b0:	231b      	movs	r3, #27
 80062b2:	2220      	movs	r2, #32
 80062b4:	189b      	adds	r3, r3, r2
 80062b6:	19db      	adds	r3, r3, r7
 80062b8:	2200      	movs	r2, #0
 80062ba:	701a      	strb	r2, [r3, #0]
 80062bc:	e07e      	b.n	80063bc <UART_SetConfig+0x390>
 80062be:	231b      	movs	r3, #27
 80062c0:	2220      	movs	r2, #32
 80062c2:	189b      	adds	r3, r3, r2
 80062c4:	19db      	adds	r3, r3, r7
 80062c6:	2202      	movs	r2, #2
 80062c8:	701a      	strb	r2, [r3, #0]
 80062ca:	e077      	b.n	80063bc <UART_SetConfig+0x390>
 80062cc:	231b      	movs	r3, #27
 80062ce:	2220      	movs	r2, #32
 80062d0:	189b      	adds	r3, r3, r2
 80062d2:	19db      	adds	r3, r3, r7
 80062d4:	2204      	movs	r2, #4
 80062d6:	701a      	strb	r2, [r3, #0]
 80062d8:	e070      	b.n	80063bc <UART_SetConfig+0x390>
 80062da:	231b      	movs	r3, #27
 80062dc:	2220      	movs	r2, #32
 80062de:	189b      	adds	r3, r3, r2
 80062e0:	19db      	adds	r3, r3, r7
 80062e2:	2208      	movs	r2, #8
 80062e4:	701a      	strb	r2, [r3, #0]
 80062e6:	e069      	b.n	80063bc <UART_SetConfig+0x390>
 80062e8:	231b      	movs	r3, #27
 80062ea:	2220      	movs	r2, #32
 80062ec:	189b      	adds	r3, r3, r2
 80062ee:	19db      	adds	r3, r3, r7
 80062f0:	2210      	movs	r2, #16
 80062f2:	701a      	strb	r2, [r3, #0]
 80062f4:	e062      	b.n	80063bc <UART_SetConfig+0x390>
 80062f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80062f8:	681b      	ldr	r3, [r3, #0]
 80062fa:	4a1d      	ldr	r2, [pc, #116]	@ (8006370 <UART_SetConfig+0x344>)
 80062fc:	4293      	cmp	r3, r2
 80062fe:	d157      	bne.n	80063b0 <UART_SetConfig+0x384>
 8006300:	4b1e      	ldr	r3, [pc, #120]	@ (800637c <UART_SetConfig+0x350>)
 8006302:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8006304:	23c0      	movs	r3, #192	@ 0xc0
 8006306:	009b      	lsls	r3, r3, #2
 8006308:	4013      	ands	r3, r2
 800630a:	22c0      	movs	r2, #192	@ 0xc0
 800630c:	0092      	lsls	r2, r2, #2
 800630e:	4293      	cmp	r3, r2
 8006310:	d040      	beq.n	8006394 <UART_SetConfig+0x368>
 8006312:	22c0      	movs	r2, #192	@ 0xc0
 8006314:	0092      	lsls	r2, r2, #2
 8006316:	4293      	cmp	r3, r2
 8006318:	d843      	bhi.n	80063a2 <UART_SetConfig+0x376>
 800631a:	2280      	movs	r2, #128	@ 0x80
 800631c:	0092      	lsls	r2, r2, #2
 800631e:	4293      	cmp	r3, r2
 8006320:	d011      	beq.n	8006346 <UART_SetConfig+0x31a>
 8006322:	2280      	movs	r2, #128	@ 0x80
 8006324:	0092      	lsls	r2, r2, #2
 8006326:	4293      	cmp	r3, r2
 8006328:	d83b      	bhi.n	80063a2 <UART_SetConfig+0x376>
 800632a:	2b00      	cmp	r3, #0
 800632c:	d004      	beq.n	8006338 <UART_SetConfig+0x30c>
 800632e:	2280      	movs	r2, #128	@ 0x80
 8006330:	0052      	lsls	r2, r2, #1
 8006332:	4293      	cmp	r3, r2
 8006334:	d00e      	beq.n	8006354 <UART_SetConfig+0x328>
 8006336:	e034      	b.n	80063a2 <UART_SetConfig+0x376>
 8006338:	231b      	movs	r3, #27
 800633a:	2220      	movs	r2, #32
 800633c:	189b      	adds	r3, r3, r2
 800633e:	19db      	adds	r3, r3, r7
 8006340:	2200      	movs	r2, #0
 8006342:	701a      	strb	r2, [r3, #0]
 8006344:	e03a      	b.n	80063bc <UART_SetConfig+0x390>
 8006346:	231b      	movs	r3, #27
 8006348:	2220      	movs	r2, #32
 800634a:	189b      	adds	r3, r3, r2
 800634c:	19db      	adds	r3, r3, r7
 800634e:	2202      	movs	r2, #2
 8006350:	701a      	strb	r2, [r3, #0]
 8006352:	e033      	b.n	80063bc <UART_SetConfig+0x390>
 8006354:	231b      	movs	r3, #27
 8006356:	2220      	movs	r2, #32
 8006358:	189b      	adds	r3, r3, r2
 800635a:	19db      	adds	r3, r3, r7
 800635c:	2204      	movs	r2, #4
 800635e:	701a      	strb	r2, [r3, #0]
 8006360:	e02c      	b.n	80063bc <UART_SetConfig+0x390>
 8006362:	46c0      	nop			@ (mov r8, r8)
 8006364:	cfff69f3 	.word	0xcfff69f3
 8006368:	ffffcfff 	.word	0xffffcfff
 800636c:	40008000 	.word	0x40008000
 8006370:	40008400 	.word	0x40008400
 8006374:	11fff4ff 	.word	0x11fff4ff
 8006378:	40013800 	.word	0x40013800
 800637c:	40021000 	.word	0x40021000
 8006380:	40004400 	.word	0x40004400
 8006384:	40004800 	.word	0x40004800
 8006388:	40004c00 	.word	0x40004c00
 800638c:	40005000 	.word	0x40005000
 8006390:	40013c00 	.word	0x40013c00
 8006394:	231b      	movs	r3, #27
 8006396:	2220      	movs	r2, #32
 8006398:	189b      	adds	r3, r3, r2
 800639a:	19db      	adds	r3, r3, r7
 800639c:	2208      	movs	r2, #8
 800639e:	701a      	strb	r2, [r3, #0]
 80063a0:	e00c      	b.n	80063bc <UART_SetConfig+0x390>
 80063a2:	231b      	movs	r3, #27
 80063a4:	2220      	movs	r2, #32
 80063a6:	189b      	adds	r3, r3, r2
 80063a8:	19db      	adds	r3, r3, r7
 80063aa:	2210      	movs	r2, #16
 80063ac:	701a      	strb	r2, [r3, #0]
 80063ae:	e005      	b.n	80063bc <UART_SetConfig+0x390>
 80063b0:	231b      	movs	r3, #27
 80063b2:	2220      	movs	r2, #32
 80063b4:	189b      	adds	r3, r3, r2
 80063b6:	19db      	adds	r3, r3, r7
 80063b8:	2210      	movs	r2, #16
 80063ba:	701a      	strb	r2, [r3, #0]
 80063bc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80063be:	681b      	ldr	r3, [r3, #0]
 80063c0:	4ac1      	ldr	r2, [pc, #772]	@ (80066c8 <UART_SetConfig+0x69c>)
 80063c2:	4293      	cmp	r3, r2
 80063c4:	d005      	beq.n	80063d2 <UART_SetConfig+0x3a6>
 80063c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80063c8:	681b      	ldr	r3, [r3, #0]
 80063ca:	4ac0      	ldr	r2, [pc, #768]	@ (80066cc <UART_SetConfig+0x6a0>)
 80063cc:	4293      	cmp	r3, r2
 80063ce:	d000      	beq.n	80063d2 <UART_SetConfig+0x3a6>
 80063d0:	e093      	b.n	80064fa <UART_SetConfig+0x4ce>
 80063d2:	231b      	movs	r3, #27
 80063d4:	2220      	movs	r2, #32
 80063d6:	189b      	adds	r3, r3, r2
 80063d8:	19db      	adds	r3, r3, r7
 80063da:	781b      	ldrb	r3, [r3, #0]
 80063dc:	2b08      	cmp	r3, #8
 80063de:	d015      	beq.n	800640c <UART_SetConfig+0x3e0>
 80063e0:	dc18      	bgt.n	8006414 <UART_SetConfig+0x3e8>
 80063e2:	2b04      	cmp	r3, #4
 80063e4:	d00d      	beq.n	8006402 <UART_SetConfig+0x3d6>
 80063e6:	dc15      	bgt.n	8006414 <UART_SetConfig+0x3e8>
 80063e8:	2b00      	cmp	r3, #0
 80063ea:	d002      	beq.n	80063f2 <UART_SetConfig+0x3c6>
 80063ec:	2b02      	cmp	r3, #2
 80063ee:	d005      	beq.n	80063fc <UART_SetConfig+0x3d0>
 80063f0:	e010      	b.n	8006414 <UART_SetConfig+0x3e8>
 80063f2:	f7fe fb97 	bl	8004b24 <HAL_RCC_GetPCLK1Freq>
 80063f6:	0003      	movs	r3, r0
 80063f8:	637b      	str	r3, [r7, #52]	@ 0x34
 80063fa:	e014      	b.n	8006426 <UART_SetConfig+0x3fa>
 80063fc:	4bb4      	ldr	r3, [pc, #720]	@ (80066d0 <UART_SetConfig+0x6a4>)
 80063fe:	637b      	str	r3, [r7, #52]	@ 0x34
 8006400:	e011      	b.n	8006426 <UART_SetConfig+0x3fa>
 8006402:	f7fe fb03 	bl	8004a0c <HAL_RCC_GetSysClockFreq>
 8006406:	0003      	movs	r3, r0
 8006408:	637b      	str	r3, [r7, #52]	@ 0x34
 800640a:	e00c      	b.n	8006426 <UART_SetConfig+0x3fa>
 800640c:	2380      	movs	r3, #128	@ 0x80
 800640e:	021b      	lsls	r3, r3, #8
 8006410:	637b      	str	r3, [r7, #52]	@ 0x34
 8006412:	e008      	b.n	8006426 <UART_SetConfig+0x3fa>
 8006414:	2300      	movs	r3, #0
 8006416:	637b      	str	r3, [r7, #52]	@ 0x34
 8006418:	231a      	movs	r3, #26
 800641a:	2220      	movs	r2, #32
 800641c:	189b      	adds	r3, r3, r2
 800641e:	19db      	adds	r3, r3, r7
 8006420:	2201      	movs	r2, #1
 8006422:	701a      	strb	r2, [r3, #0]
 8006424:	46c0      	nop			@ (mov r8, r8)
 8006426:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006428:	2b00      	cmp	r3, #0
 800642a:	d100      	bne.n	800642e <UART_SetConfig+0x402>
 800642c:	e135      	b.n	800669a <UART_SetConfig+0x66e>
 800642e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006430:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8006432:	4ba8      	ldr	r3, [pc, #672]	@ (80066d4 <UART_SetConfig+0x6a8>)
 8006434:	0052      	lsls	r2, r2, #1
 8006436:	5ad3      	ldrh	r3, [r2, r3]
 8006438:	0019      	movs	r1, r3
 800643a:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 800643c:	f7f9 fe6a 	bl	8000114 <__udivsi3>
 8006440:	0003      	movs	r3, r0
 8006442:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006444:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006446:	685a      	ldr	r2, [r3, #4]
 8006448:	0013      	movs	r3, r2
 800644a:	005b      	lsls	r3, r3, #1
 800644c:	189b      	adds	r3, r3, r2
 800644e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006450:	429a      	cmp	r2, r3
 8006452:	d305      	bcc.n	8006460 <UART_SetConfig+0x434>
 8006454:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006456:	685b      	ldr	r3, [r3, #4]
 8006458:	031b      	lsls	r3, r3, #12
 800645a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800645c:	429a      	cmp	r2, r3
 800645e:	d906      	bls.n	800646e <UART_SetConfig+0x442>
 8006460:	231a      	movs	r3, #26
 8006462:	2220      	movs	r2, #32
 8006464:	189b      	adds	r3, r3, r2
 8006466:	19db      	adds	r3, r3, r7
 8006468:	2201      	movs	r2, #1
 800646a:	701a      	strb	r2, [r3, #0]
 800646c:	e044      	b.n	80064f8 <UART_SetConfig+0x4cc>
 800646e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006470:	61bb      	str	r3, [r7, #24]
 8006472:	2300      	movs	r3, #0
 8006474:	61fb      	str	r3, [r7, #28]
 8006476:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006478:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800647a:	4b96      	ldr	r3, [pc, #600]	@ (80066d4 <UART_SetConfig+0x6a8>)
 800647c:	0052      	lsls	r2, r2, #1
 800647e:	5ad3      	ldrh	r3, [r2, r3]
 8006480:	613b      	str	r3, [r7, #16]
 8006482:	2300      	movs	r3, #0
 8006484:	617b      	str	r3, [r7, #20]
 8006486:	693a      	ldr	r2, [r7, #16]
 8006488:	697b      	ldr	r3, [r7, #20]
 800648a:	69b8      	ldr	r0, [r7, #24]
 800648c:	69f9      	ldr	r1, [r7, #28]
 800648e:	f7f9 ffb7 	bl	8000400 <__aeabi_uldivmod>
 8006492:	0002      	movs	r2, r0
 8006494:	000b      	movs	r3, r1
 8006496:	0e11      	lsrs	r1, r2, #24
 8006498:	021d      	lsls	r5, r3, #8
 800649a:	430d      	orrs	r5, r1
 800649c:	0214      	lsls	r4, r2, #8
 800649e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80064a0:	685b      	ldr	r3, [r3, #4]
 80064a2:	085b      	lsrs	r3, r3, #1
 80064a4:	60bb      	str	r3, [r7, #8]
 80064a6:	2300      	movs	r3, #0
 80064a8:	60fb      	str	r3, [r7, #12]
 80064aa:	68b8      	ldr	r0, [r7, #8]
 80064ac:	68f9      	ldr	r1, [r7, #12]
 80064ae:	1900      	adds	r0, r0, r4
 80064b0:	4169      	adcs	r1, r5
 80064b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80064b4:	685b      	ldr	r3, [r3, #4]
 80064b6:	603b      	str	r3, [r7, #0]
 80064b8:	2300      	movs	r3, #0
 80064ba:	607b      	str	r3, [r7, #4]
 80064bc:	683a      	ldr	r2, [r7, #0]
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	f7f9 ff9e 	bl	8000400 <__aeabi_uldivmod>
 80064c4:	0002      	movs	r2, r0
 80064c6:	000b      	movs	r3, r1
 80064c8:	0013      	movs	r3, r2
 80064ca:	633b      	str	r3, [r7, #48]	@ 0x30
 80064cc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80064ce:	23c0      	movs	r3, #192	@ 0xc0
 80064d0:	009b      	lsls	r3, r3, #2
 80064d2:	429a      	cmp	r2, r3
 80064d4:	d309      	bcc.n	80064ea <UART_SetConfig+0x4be>
 80064d6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80064d8:	2380      	movs	r3, #128	@ 0x80
 80064da:	035b      	lsls	r3, r3, #13
 80064dc:	429a      	cmp	r2, r3
 80064de:	d204      	bcs.n	80064ea <UART_SetConfig+0x4be>
 80064e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80064e2:	681b      	ldr	r3, [r3, #0]
 80064e4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80064e6:	60da      	str	r2, [r3, #12]
 80064e8:	e006      	b.n	80064f8 <UART_SetConfig+0x4cc>
 80064ea:	231a      	movs	r3, #26
 80064ec:	2220      	movs	r2, #32
 80064ee:	189b      	adds	r3, r3, r2
 80064f0:	19db      	adds	r3, r3, r7
 80064f2:	2201      	movs	r2, #1
 80064f4:	701a      	strb	r2, [r3, #0]
 80064f6:	e0d0      	b.n	800669a <UART_SetConfig+0x66e>
 80064f8:	e0cf      	b.n	800669a <UART_SetConfig+0x66e>
 80064fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80064fc:	69da      	ldr	r2, [r3, #28]
 80064fe:	2380      	movs	r3, #128	@ 0x80
 8006500:	021b      	lsls	r3, r3, #8
 8006502:	429a      	cmp	r2, r3
 8006504:	d000      	beq.n	8006508 <UART_SetConfig+0x4dc>
 8006506:	e070      	b.n	80065ea <UART_SetConfig+0x5be>
 8006508:	231b      	movs	r3, #27
 800650a:	2220      	movs	r2, #32
 800650c:	189b      	adds	r3, r3, r2
 800650e:	19db      	adds	r3, r3, r7
 8006510:	781b      	ldrb	r3, [r3, #0]
 8006512:	2b08      	cmp	r3, #8
 8006514:	d015      	beq.n	8006542 <UART_SetConfig+0x516>
 8006516:	dc18      	bgt.n	800654a <UART_SetConfig+0x51e>
 8006518:	2b04      	cmp	r3, #4
 800651a:	d00d      	beq.n	8006538 <UART_SetConfig+0x50c>
 800651c:	dc15      	bgt.n	800654a <UART_SetConfig+0x51e>
 800651e:	2b00      	cmp	r3, #0
 8006520:	d002      	beq.n	8006528 <UART_SetConfig+0x4fc>
 8006522:	2b02      	cmp	r3, #2
 8006524:	d005      	beq.n	8006532 <UART_SetConfig+0x506>
 8006526:	e010      	b.n	800654a <UART_SetConfig+0x51e>
 8006528:	f7fe fafc 	bl	8004b24 <HAL_RCC_GetPCLK1Freq>
 800652c:	0003      	movs	r3, r0
 800652e:	637b      	str	r3, [r7, #52]	@ 0x34
 8006530:	e014      	b.n	800655c <UART_SetConfig+0x530>
 8006532:	4b67      	ldr	r3, [pc, #412]	@ (80066d0 <UART_SetConfig+0x6a4>)
 8006534:	637b      	str	r3, [r7, #52]	@ 0x34
 8006536:	e011      	b.n	800655c <UART_SetConfig+0x530>
 8006538:	f7fe fa68 	bl	8004a0c <HAL_RCC_GetSysClockFreq>
 800653c:	0003      	movs	r3, r0
 800653e:	637b      	str	r3, [r7, #52]	@ 0x34
 8006540:	e00c      	b.n	800655c <UART_SetConfig+0x530>
 8006542:	2380      	movs	r3, #128	@ 0x80
 8006544:	021b      	lsls	r3, r3, #8
 8006546:	637b      	str	r3, [r7, #52]	@ 0x34
 8006548:	e008      	b.n	800655c <UART_SetConfig+0x530>
 800654a:	2300      	movs	r3, #0
 800654c:	637b      	str	r3, [r7, #52]	@ 0x34
 800654e:	231a      	movs	r3, #26
 8006550:	2220      	movs	r2, #32
 8006552:	189b      	adds	r3, r3, r2
 8006554:	19db      	adds	r3, r3, r7
 8006556:	2201      	movs	r2, #1
 8006558:	701a      	strb	r2, [r3, #0]
 800655a:	46c0      	nop			@ (mov r8, r8)
 800655c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800655e:	2b00      	cmp	r3, #0
 8006560:	d100      	bne.n	8006564 <UART_SetConfig+0x538>
 8006562:	e09a      	b.n	800669a <UART_SetConfig+0x66e>
 8006564:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006566:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8006568:	4b5a      	ldr	r3, [pc, #360]	@ (80066d4 <UART_SetConfig+0x6a8>)
 800656a:	0052      	lsls	r2, r2, #1
 800656c:	5ad3      	ldrh	r3, [r2, r3]
 800656e:	0019      	movs	r1, r3
 8006570:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8006572:	f7f9 fdcf 	bl	8000114 <__udivsi3>
 8006576:	0003      	movs	r3, r0
 8006578:	005a      	lsls	r2, r3, #1
 800657a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800657c:	685b      	ldr	r3, [r3, #4]
 800657e:	085b      	lsrs	r3, r3, #1
 8006580:	18d2      	adds	r2, r2, r3
 8006582:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006584:	685b      	ldr	r3, [r3, #4]
 8006586:	0019      	movs	r1, r3
 8006588:	0010      	movs	r0, r2
 800658a:	f7f9 fdc3 	bl	8000114 <__udivsi3>
 800658e:	0003      	movs	r3, r0
 8006590:	633b      	str	r3, [r7, #48]	@ 0x30
 8006592:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006594:	2b0f      	cmp	r3, #15
 8006596:	d921      	bls.n	80065dc <UART_SetConfig+0x5b0>
 8006598:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800659a:	2380      	movs	r3, #128	@ 0x80
 800659c:	025b      	lsls	r3, r3, #9
 800659e:	429a      	cmp	r2, r3
 80065a0:	d21c      	bcs.n	80065dc <UART_SetConfig+0x5b0>
 80065a2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80065a4:	b29a      	uxth	r2, r3
 80065a6:	200e      	movs	r0, #14
 80065a8:	2420      	movs	r4, #32
 80065aa:	1903      	adds	r3, r0, r4
 80065ac:	19db      	adds	r3, r3, r7
 80065ae:	210f      	movs	r1, #15
 80065b0:	438a      	bics	r2, r1
 80065b2:	801a      	strh	r2, [r3, #0]
 80065b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80065b6:	085b      	lsrs	r3, r3, #1
 80065b8:	b29b      	uxth	r3, r3
 80065ba:	2207      	movs	r2, #7
 80065bc:	4013      	ands	r3, r2
 80065be:	b299      	uxth	r1, r3
 80065c0:	1903      	adds	r3, r0, r4
 80065c2:	19db      	adds	r3, r3, r7
 80065c4:	1902      	adds	r2, r0, r4
 80065c6:	19d2      	adds	r2, r2, r7
 80065c8:	8812      	ldrh	r2, [r2, #0]
 80065ca:	430a      	orrs	r2, r1
 80065cc:	801a      	strh	r2, [r3, #0]
 80065ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80065d0:	681b      	ldr	r3, [r3, #0]
 80065d2:	1902      	adds	r2, r0, r4
 80065d4:	19d2      	adds	r2, r2, r7
 80065d6:	8812      	ldrh	r2, [r2, #0]
 80065d8:	60da      	str	r2, [r3, #12]
 80065da:	e05e      	b.n	800669a <UART_SetConfig+0x66e>
 80065dc:	231a      	movs	r3, #26
 80065de:	2220      	movs	r2, #32
 80065e0:	189b      	adds	r3, r3, r2
 80065e2:	19db      	adds	r3, r3, r7
 80065e4:	2201      	movs	r2, #1
 80065e6:	701a      	strb	r2, [r3, #0]
 80065e8:	e057      	b.n	800669a <UART_SetConfig+0x66e>
 80065ea:	231b      	movs	r3, #27
 80065ec:	2220      	movs	r2, #32
 80065ee:	189b      	adds	r3, r3, r2
 80065f0:	19db      	adds	r3, r3, r7
 80065f2:	781b      	ldrb	r3, [r3, #0]
 80065f4:	2b08      	cmp	r3, #8
 80065f6:	d015      	beq.n	8006624 <UART_SetConfig+0x5f8>
 80065f8:	dc18      	bgt.n	800662c <UART_SetConfig+0x600>
 80065fa:	2b04      	cmp	r3, #4
 80065fc:	d00d      	beq.n	800661a <UART_SetConfig+0x5ee>
 80065fe:	dc15      	bgt.n	800662c <UART_SetConfig+0x600>
 8006600:	2b00      	cmp	r3, #0
 8006602:	d002      	beq.n	800660a <UART_SetConfig+0x5de>
 8006604:	2b02      	cmp	r3, #2
 8006606:	d005      	beq.n	8006614 <UART_SetConfig+0x5e8>
 8006608:	e010      	b.n	800662c <UART_SetConfig+0x600>
 800660a:	f7fe fa8b 	bl	8004b24 <HAL_RCC_GetPCLK1Freq>
 800660e:	0003      	movs	r3, r0
 8006610:	637b      	str	r3, [r7, #52]	@ 0x34
 8006612:	e014      	b.n	800663e <UART_SetConfig+0x612>
 8006614:	4b2e      	ldr	r3, [pc, #184]	@ (80066d0 <UART_SetConfig+0x6a4>)
 8006616:	637b      	str	r3, [r7, #52]	@ 0x34
 8006618:	e011      	b.n	800663e <UART_SetConfig+0x612>
 800661a:	f7fe f9f7 	bl	8004a0c <HAL_RCC_GetSysClockFreq>
 800661e:	0003      	movs	r3, r0
 8006620:	637b      	str	r3, [r7, #52]	@ 0x34
 8006622:	e00c      	b.n	800663e <UART_SetConfig+0x612>
 8006624:	2380      	movs	r3, #128	@ 0x80
 8006626:	021b      	lsls	r3, r3, #8
 8006628:	637b      	str	r3, [r7, #52]	@ 0x34
 800662a:	e008      	b.n	800663e <UART_SetConfig+0x612>
 800662c:	2300      	movs	r3, #0
 800662e:	637b      	str	r3, [r7, #52]	@ 0x34
 8006630:	231a      	movs	r3, #26
 8006632:	2220      	movs	r2, #32
 8006634:	189b      	adds	r3, r3, r2
 8006636:	19db      	adds	r3, r3, r7
 8006638:	2201      	movs	r2, #1
 800663a:	701a      	strb	r2, [r3, #0]
 800663c:	46c0      	nop			@ (mov r8, r8)
 800663e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006640:	2b00      	cmp	r3, #0
 8006642:	d02a      	beq.n	800669a <UART_SetConfig+0x66e>
 8006644:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006646:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8006648:	4b22      	ldr	r3, [pc, #136]	@ (80066d4 <UART_SetConfig+0x6a8>)
 800664a:	0052      	lsls	r2, r2, #1
 800664c:	5ad3      	ldrh	r3, [r2, r3]
 800664e:	0019      	movs	r1, r3
 8006650:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8006652:	f7f9 fd5f 	bl	8000114 <__udivsi3>
 8006656:	0003      	movs	r3, r0
 8006658:	001a      	movs	r2, r3
 800665a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800665c:	685b      	ldr	r3, [r3, #4]
 800665e:	085b      	lsrs	r3, r3, #1
 8006660:	18d2      	adds	r2, r2, r3
 8006662:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006664:	685b      	ldr	r3, [r3, #4]
 8006666:	0019      	movs	r1, r3
 8006668:	0010      	movs	r0, r2
 800666a:	f7f9 fd53 	bl	8000114 <__udivsi3>
 800666e:	0003      	movs	r3, r0
 8006670:	633b      	str	r3, [r7, #48]	@ 0x30
 8006672:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006674:	2b0f      	cmp	r3, #15
 8006676:	d90a      	bls.n	800668e <UART_SetConfig+0x662>
 8006678:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800667a:	2380      	movs	r3, #128	@ 0x80
 800667c:	025b      	lsls	r3, r3, #9
 800667e:	429a      	cmp	r2, r3
 8006680:	d205      	bcs.n	800668e <UART_SetConfig+0x662>
 8006682:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006684:	b29a      	uxth	r2, r3
 8006686:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	60da      	str	r2, [r3, #12]
 800668c:	e005      	b.n	800669a <UART_SetConfig+0x66e>
 800668e:	231a      	movs	r3, #26
 8006690:	2220      	movs	r2, #32
 8006692:	189b      	adds	r3, r3, r2
 8006694:	19db      	adds	r3, r3, r7
 8006696:	2201      	movs	r2, #1
 8006698:	701a      	strb	r2, [r3, #0]
 800669a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800669c:	226a      	movs	r2, #106	@ 0x6a
 800669e:	2101      	movs	r1, #1
 80066a0:	5299      	strh	r1, [r3, r2]
 80066a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80066a4:	2268      	movs	r2, #104	@ 0x68
 80066a6:	2101      	movs	r1, #1
 80066a8:	5299      	strh	r1, [r3, r2]
 80066aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80066ac:	2200      	movs	r2, #0
 80066ae:	675a      	str	r2, [r3, #116]	@ 0x74
 80066b0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80066b2:	2200      	movs	r2, #0
 80066b4:	679a      	str	r2, [r3, #120]	@ 0x78
 80066b6:	231a      	movs	r3, #26
 80066b8:	2220      	movs	r2, #32
 80066ba:	189b      	adds	r3, r3, r2
 80066bc:	19db      	adds	r3, r3, r7
 80066be:	781b      	ldrb	r3, [r3, #0]
 80066c0:	0018      	movs	r0, r3
 80066c2:	46bd      	mov	sp, r7
 80066c4:	b010      	add	sp, #64	@ 0x40
 80066c6:	bdb0      	pop	{r4, r5, r7, pc}
 80066c8:	40008000 	.word	0x40008000
 80066cc:	40008400 	.word	0x40008400
 80066d0:	00f42400 	.word	0x00f42400
 80066d4:	080081d8 	.word	0x080081d8

080066d8 <UART_AdvFeatureConfig>:
 80066d8:	b580      	push	{r7, lr}
 80066da:	b082      	sub	sp, #8
 80066dc:	af00      	add	r7, sp, #0
 80066de:	6078      	str	r0, [r7, #4]
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80066e4:	2208      	movs	r2, #8
 80066e6:	4013      	ands	r3, r2
 80066e8:	d00b      	beq.n	8006702 <UART_AdvFeatureConfig+0x2a>
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	681b      	ldr	r3, [r3, #0]
 80066ee:	685b      	ldr	r3, [r3, #4]
 80066f0:	4a4a      	ldr	r2, [pc, #296]	@ (800681c <UART_AdvFeatureConfig+0x144>)
 80066f2:	4013      	ands	r3, r2
 80066f4:	0019      	movs	r1, r3
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	430a      	orrs	r2, r1
 8006700:	605a      	str	r2, [r3, #4]
 8006702:	687b      	ldr	r3, [r7, #4]
 8006704:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006706:	2201      	movs	r2, #1
 8006708:	4013      	ands	r3, r2
 800670a:	d00b      	beq.n	8006724 <UART_AdvFeatureConfig+0x4c>
 800670c:	687b      	ldr	r3, [r7, #4]
 800670e:	681b      	ldr	r3, [r3, #0]
 8006710:	685b      	ldr	r3, [r3, #4]
 8006712:	4a43      	ldr	r2, [pc, #268]	@ (8006820 <UART_AdvFeatureConfig+0x148>)
 8006714:	4013      	ands	r3, r2
 8006716:	0019      	movs	r1, r3
 8006718:	687b      	ldr	r3, [r7, #4]
 800671a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	681b      	ldr	r3, [r3, #0]
 8006720:	430a      	orrs	r2, r1
 8006722:	605a      	str	r2, [r3, #4]
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006728:	2202      	movs	r2, #2
 800672a:	4013      	ands	r3, r2
 800672c:	d00b      	beq.n	8006746 <UART_AdvFeatureConfig+0x6e>
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	681b      	ldr	r3, [r3, #0]
 8006732:	685b      	ldr	r3, [r3, #4]
 8006734:	4a3b      	ldr	r2, [pc, #236]	@ (8006824 <UART_AdvFeatureConfig+0x14c>)
 8006736:	4013      	ands	r3, r2
 8006738:	0019      	movs	r1, r3
 800673a:	687b      	ldr	r3, [r7, #4]
 800673c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800673e:	687b      	ldr	r3, [r7, #4]
 8006740:	681b      	ldr	r3, [r3, #0]
 8006742:	430a      	orrs	r2, r1
 8006744:	605a      	str	r2, [r3, #4]
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800674a:	2204      	movs	r2, #4
 800674c:	4013      	ands	r3, r2
 800674e:	d00b      	beq.n	8006768 <UART_AdvFeatureConfig+0x90>
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	681b      	ldr	r3, [r3, #0]
 8006754:	685b      	ldr	r3, [r3, #4]
 8006756:	4a34      	ldr	r2, [pc, #208]	@ (8006828 <UART_AdvFeatureConfig+0x150>)
 8006758:	4013      	ands	r3, r2
 800675a:	0019      	movs	r1, r3
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006760:	687b      	ldr	r3, [r7, #4]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	430a      	orrs	r2, r1
 8006766:	605a      	str	r2, [r3, #4]
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800676c:	2210      	movs	r2, #16
 800676e:	4013      	ands	r3, r2
 8006770:	d00b      	beq.n	800678a <UART_AdvFeatureConfig+0xb2>
 8006772:	687b      	ldr	r3, [r7, #4]
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	689b      	ldr	r3, [r3, #8]
 8006778:	4a2c      	ldr	r2, [pc, #176]	@ (800682c <UART_AdvFeatureConfig+0x154>)
 800677a:	4013      	ands	r3, r2
 800677c:	0019      	movs	r1, r3
 800677e:	687b      	ldr	r3, [r7, #4]
 8006780:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	430a      	orrs	r2, r1
 8006788:	609a      	str	r2, [r3, #8]
 800678a:	687b      	ldr	r3, [r7, #4]
 800678c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800678e:	2220      	movs	r2, #32
 8006790:	4013      	ands	r3, r2
 8006792:	d00b      	beq.n	80067ac <UART_AdvFeatureConfig+0xd4>
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	681b      	ldr	r3, [r3, #0]
 8006798:	689b      	ldr	r3, [r3, #8]
 800679a:	4a25      	ldr	r2, [pc, #148]	@ (8006830 <UART_AdvFeatureConfig+0x158>)
 800679c:	4013      	ands	r3, r2
 800679e:	0019      	movs	r1, r3
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80067a4:	687b      	ldr	r3, [r7, #4]
 80067a6:	681b      	ldr	r3, [r3, #0]
 80067a8:	430a      	orrs	r2, r1
 80067aa:	609a      	str	r2, [r3, #8]
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80067b0:	2240      	movs	r2, #64	@ 0x40
 80067b2:	4013      	ands	r3, r2
 80067b4:	d01d      	beq.n	80067f2 <UART_AdvFeatureConfig+0x11a>
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	685b      	ldr	r3, [r3, #4]
 80067bc:	4a1d      	ldr	r2, [pc, #116]	@ (8006834 <UART_AdvFeatureConfig+0x15c>)
 80067be:	4013      	ands	r3, r2
 80067c0:	0019      	movs	r1, r3
 80067c2:	687b      	ldr	r3, [r7, #4]
 80067c4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	430a      	orrs	r2, r1
 80067cc:	605a      	str	r2, [r3, #4]
 80067ce:	687b      	ldr	r3, [r7, #4]
 80067d0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80067d2:	2380      	movs	r3, #128	@ 0x80
 80067d4:	035b      	lsls	r3, r3, #13
 80067d6:	429a      	cmp	r2, r3
 80067d8:	d10b      	bne.n	80067f2 <UART_AdvFeatureConfig+0x11a>
 80067da:	687b      	ldr	r3, [r7, #4]
 80067dc:	681b      	ldr	r3, [r3, #0]
 80067de:	685b      	ldr	r3, [r3, #4]
 80067e0:	4a15      	ldr	r2, [pc, #84]	@ (8006838 <UART_AdvFeatureConfig+0x160>)
 80067e2:	4013      	ands	r3, r2
 80067e4:	0019      	movs	r1, r3
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	681b      	ldr	r3, [r3, #0]
 80067ee:	430a      	orrs	r2, r1
 80067f0:	605a      	str	r2, [r3, #4]
 80067f2:	687b      	ldr	r3, [r7, #4]
 80067f4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80067f6:	2280      	movs	r2, #128	@ 0x80
 80067f8:	4013      	ands	r3, r2
 80067fa:	d00b      	beq.n	8006814 <UART_AdvFeatureConfig+0x13c>
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	681b      	ldr	r3, [r3, #0]
 8006800:	685b      	ldr	r3, [r3, #4]
 8006802:	4a0e      	ldr	r2, [pc, #56]	@ (800683c <UART_AdvFeatureConfig+0x164>)
 8006804:	4013      	ands	r3, r2
 8006806:	0019      	movs	r1, r3
 8006808:	687b      	ldr	r3, [r7, #4]
 800680a:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	681b      	ldr	r3, [r3, #0]
 8006810:	430a      	orrs	r2, r1
 8006812:	605a      	str	r2, [r3, #4]
 8006814:	46c0      	nop			@ (mov r8, r8)
 8006816:	46bd      	mov	sp, r7
 8006818:	b002      	add	sp, #8
 800681a:	bd80      	pop	{r7, pc}
 800681c:	ffff7fff 	.word	0xffff7fff
 8006820:	fffdffff 	.word	0xfffdffff
 8006824:	fffeffff 	.word	0xfffeffff
 8006828:	fffbffff 	.word	0xfffbffff
 800682c:	ffffefff 	.word	0xffffefff
 8006830:	ffffdfff 	.word	0xffffdfff
 8006834:	ffefffff 	.word	0xffefffff
 8006838:	ff9fffff 	.word	0xff9fffff
 800683c:	fff7ffff 	.word	0xfff7ffff

08006840 <UART_CheckIdleState>:
 8006840:	b580      	push	{r7, lr}
 8006842:	b092      	sub	sp, #72	@ 0x48
 8006844:	af02      	add	r7, sp, #8
 8006846:	6078      	str	r0, [r7, #4]
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	2290      	movs	r2, #144	@ 0x90
 800684c:	2100      	movs	r1, #0
 800684e:	5099      	str	r1, [r3, r2]
 8006850:	f7fc fa14 	bl	8002c7c <HAL_GetTick>
 8006854:	0003      	movs	r3, r0
 8006856:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006858:	687b      	ldr	r3, [r7, #4]
 800685a:	681b      	ldr	r3, [r3, #0]
 800685c:	681b      	ldr	r3, [r3, #0]
 800685e:	2208      	movs	r2, #8
 8006860:	4013      	ands	r3, r2
 8006862:	2b08      	cmp	r3, #8
 8006864:	d12d      	bne.n	80068c2 <UART_CheckIdleState+0x82>
 8006866:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006868:	2280      	movs	r2, #128	@ 0x80
 800686a:	0391      	lsls	r1, r2, #14
 800686c:	6878      	ldr	r0, [r7, #4]
 800686e:	4a47      	ldr	r2, [pc, #284]	@ (800698c <UART_CheckIdleState+0x14c>)
 8006870:	9200      	str	r2, [sp, #0]
 8006872:	2200      	movs	r2, #0
 8006874:	f000 f88e 	bl	8006994 <UART_WaitOnFlagUntilTimeout>
 8006878:	1e03      	subs	r3, r0, #0
 800687a:	d022      	beq.n	80068c2 <UART_CheckIdleState+0x82>
 800687c:	f3ef 8310 	mrs	r3, PRIMASK
 8006880:	627b      	str	r3, [r7, #36]	@ 0x24
 8006882:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006884:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006886:	2301      	movs	r3, #1
 8006888:	62bb      	str	r3, [r7, #40]	@ 0x28
 800688a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800688c:	f383 8810 	msr	PRIMASK, r3
 8006890:	46c0      	nop			@ (mov r8, r8)
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	681b      	ldr	r3, [r3, #0]
 8006896:	681a      	ldr	r2, [r3, #0]
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	681b      	ldr	r3, [r3, #0]
 800689c:	2180      	movs	r1, #128	@ 0x80
 800689e:	438a      	bics	r2, r1
 80068a0:	601a      	str	r2, [r3, #0]
 80068a2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80068a4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80068a6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80068a8:	f383 8810 	msr	PRIMASK, r3
 80068ac:	46c0      	nop			@ (mov r8, r8)
 80068ae:	687b      	ldr	r3, [r7, #4]
 80068b0:	2288      	movs	r2, #136	@ 0x88
 80068b2:	2120      	movs	r1, #32
 80068b4:	5099      	str	r1, [r3, r2]
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	2284      	movs	r2, #132	@ 0x84
 80068ba:	2100      	movs	r1, #0
 80068bc:	5499      	strb	r1, [r3, r2]
 80068be:	2303      	movs	r3, #3
 80068c0:	e060      	b.n	8006984 <UART_CheckIdleState+0x144>
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	681b      	ldr	r3, [r3, #0]
 80068c8:	2204      	movs	r2, #4
 80068ca:	4013      	ands	r3, r2
 80068cc:	2b04      	cmp	r3, #4
 80068ce:	d146      	bne.n	800695e <UART_CheckIdleState+0x11e>
 80068d0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80068d2:	2280      	movs	r2, #128	@ 0x80
 80068d4:	03d1      	lsls	r1, r2, #15
 80068d6:	6878      	ldr	r0, [r7, #4]
 80068d8:	4a2c      	ldr	r2, [pc, #176]	@ (800698c <UART_CheckIdleState+0x14c>)
 80068da:	9200      	str	r2, [sp, #0]
 80068dc:	2200      	movs	r2, #0
 80068de:	f000 f859 	bl	8006994 <UART_WaitOnFlagUntilTimeout>
 80068e2:	1e03      	subs	r3, r0, #0
 80068e4:	d03b      	beq.n	800695e <UART_CheckIdleState+0x11e>
 80068e6:	f3ef 8310 	mrs	r3, PRIMASK
 80068ea:	60fb      	str	r3, [r7, #12]
 80068ec:	68fb      	ldr	r3, [r7, #12]
 80068ee:	637b      	str	r3, [r7, #52]	@ 0x34
 80068f0:	2301      	movs	r3, #1
 80068f2:	613b      	str	r3, [r7, #16]
 80068f4:	693b      	ldr	r3, [r7, #16]
 80068f6:	f383 8810 	msr	PRIMASK, r3
 80068fa:	46c0      	nop			@ (mov r8, r8)
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	681b      	ldr	r3, [r3, #0]
 8006900:	681a      	ldr	r2, [r3, #0]
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	681b      	ldr	r3, [r3, #0]
 8006906:	4922      	ldr	r1, [pc, #136]	@ (8006990 <UART_CheckIdleState+0x150>)
 8006908:	400a      	ands	r2, r1
 800690a:	601a      	str	r2, [r3, #0]
 800690c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800690e:	617b      	str	r3, [r7, #20]
 8006910:	697b      	ldr	r3, [r7, #20]
 8006912:	f383 8810 	msr	PRIMASK, r3
 8006916:	46c0      	nop			@ (mov r8, r8)
 8006918:	f3ef 8310 	mrs	r3, PRIMASK
 800691c:	61bb      	str	r3, [r7, #24]
 800691e:	69bb      	ldr	r3, [r7, #24]
 8006920:	633b      	str	r3, [r7, #48]	@ 0x30
 8006922:	2301      	movs	r3, #1
 8006924:	61fb      	str	r3, [r7, #28]
 8006926:	69fb      	ldr	r3, [r7, #28]
 8006928:	f383 8810 	msr	PRIMASK, r3
 800692c:	46c0      	nop			@ (mov r8, r8)
 800692e:	687b      	ldr	r3, [r7, #4]
 8006930:	681b      	ldr	r3, [r3, #0]
 8006932:	689a      	ldr	r2, [r3, #8]
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	681b      	ldr	r3, [r3, #0]
 8006938:	2101      	movs	r1, #1
 800693a:	438a      	bics	r2, r1
 800693c:	609a      	str	r2, [r3, #8]
 800693e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006940:	623b      	str	r3, [r7, #32]
 8006942:	6a3b      	ldr	r3, [r7, #32]
 8006944:	f383 8810 	msr	PRIMASK, r3
 8006948:	46c0      	nop			@ (mov r8, r8)
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	228c      	movs	r2, #140	@ 0x8c
 800694e:	2120      	movs	r1, #32
 8006950:	5099      	str	r1, [r3, r2]
 8006952:	687b      	ldr	r3, [r7, #4]
 8006954:	2284      	movs	r2, #132	@ 0x84
 8006956:	2100      	movs	r1, #0
 8006958:	5499      	strb	r1, [r3, r2]
 800695a:	2303      	movs	r3, #3
 800695c:	e012      	b.n	8006984 <UART_CheckIdleState+0x144>
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	2288      	movs	r2, #136	@ 0x88
 8006962:	2120      	movs	r1, #32
 8006964:	5099      	str	r1, [r3, r2]
 8006966:	687b      	ldr	r3, [r7, #4]
 8006968:	228c      	movs	r2, #140	@ 0x8c
 800696a:	2120      	movs	r1, #32
 800696c:	5099      	str	r1, [r3, r2]
 800696e:	687b      	ldr	r3, [r7, #4]
 8006970:	2200      	movs	r2, #0
 8006972:	66da      	str	r2, [r3, #108]	@ 0x6c
 8006974:	687b      	ldr	r3, [r7, #4]
 8006976:	2200      	movs	r2, #0
 8006978:	671a      	str	r2, [r3, #112]	@ 0x70
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	2284      	movs	r2, #132	@ 0x84
 800697e:	2100      	movs	r1, #0
 8006980:	5499      	strb	r1, [r3, r2]
 8006982:	2300      	movs	r3, #0
 8006984:	0018      	movs	r0, r3
 8006986:	46bd      	mov	sp, r7
 8006988:	b010      	add	sp, #64	@ 0x40
 800698a:	bd80      	pop	{r7, pc}
 800698c:	01ffffff 	.word	0x01ffffff
 8006990:	fffffedf 	.word	0xfffffedf

08006994 <UART_WaitOnFlagUntilTimeout>:
 8006994:	b580      	push	{r7, lr}
 8006996:	b084      	sub	sp, #16
 8006998:	af00      	add	r7, sp, #0
 800699a:	60f8      	str	r0, [r7, #12]
 800699c:	60b9      	str	r1, [r7, #8]
 800699e:	603b      	str	r3, [r7, #0]
 80069a0:	1dfb      	adds	r3, r7, #7
 80069a2:	701a      	strb	r2, [r3, #0]
 80069a4:	e051      	b.n	8006a4a <UART_WaitOnFlagUntilTimeout+0xb6>
 80069a6:	69bb      	ldr	r3, [r7, #24]
 80069a8:	3301      	adds	r3, #1
 80069aa:	d04e      	beq.n	8006a4a <UART_WaitOnFlagUntilTimeout+0xb6>
 80069ac:	f7fc f966 	bl	8002c7c <HAL_GetTick>
 80069b0:	0002      	movs	r2, r0
 80069b2:	683b      	ldr	r3, [r7, #0]
 80069b4:	1ad3      	subs	r3, r2, r3
 80069b6:	69ba      	ldr	r2, [r7, #24]
 80069b8:	429a      	cmp	r2, r3
 80069ba:	d302      	bcc.n	80069c2 <UART_WaitOnFlagUntilTimeout+0x2e>
 80069bc:	69bb      	ldr	r3, [r7, #24]
 80069be:	2b00      	cmp	r3, #0
 80069c0:	d101      	bne.n	80069c6 <UART_WaitOnFlagUntilTimeout+0x32>
 80069c2:	2303      	movs	r3, #3
 80069c4:	e051      	b.n	8006a6a <UART_WaitOnFlagUntilTimeout+0xd6>
 80069c6:	68fb      	ldr	r3, [r7, #12]
 80069c8:	681b      	ldr	r3, [r3, #0]
 80069ca:	681b      	ldr	r3, [r3, #0]
 80069cc:	2204      	movs	r2, #4
 80069ce:	4013      	ands	r3, r2
 80069d0:	d03b      	beq.n	8006a4a <UART_WaitOnFlagUntilTimeout+0xb6>
 80069d2:	68bb      	ldr	r3, [r7, #8]
 80069d4:	2b80      	cmp	r3, #128	@ 0x80
 80069d6:	d038      	beq.n	8006a4a <UART_WaitOnFlagUntilTimeout+0xb6>
 80069d8:	68bb      	ldr	r3, [r7, #8]
 80069da:	2b40      	cmp	r3, #64	@ 0x40
 80069dc:	d035      	beq.n	8006a4a <UART_WaitOnFlagUntilTimeout+0xb6>
 80069de:	68fb      	ldr	r3, [r7, #12]
 80069e0:	681b      	ldr	r3, [r3, #0]
 80069e2:	69db      	ldr	r3, [r3, #28]
 80069e4:	2208      	movs	r2, #8
 80069e6:	4013      	ands	r3, r2
 80069e8:	2b08      	cmp	r3, #8
 80069ea:	d111      	bne.n	8006a10 <UART_WaitOnFlagUntilTimeout+0x7c>
 80069ec:	68fb      	ldr	r3, [r7, #12]
 80069ee:	681b      	ldr	r3, [r3, #0]
 80069f0:	2208      	movs	r2, #8
 80069f2:	621a      	str	r2, [r3, #32]
 80069f4:	68fb      	ldr	r3, [r7, #12]
 80069f6:	0018      	movs	r0, r3
 80069f8:	f000 f960 	bl	8006cbc <UART_EndRxTransfer>
 80069fc:	68fb      	ldr	r3, [r7, #12]
 80069fe:	2290      	movs	r2, #144	@ 0x90
 8006a00:	2108      	movs	r1, #8
 8006a02:	5099      	str	r1, [r3, r2]
 8006a04:	68fb      	ldr	r3, [r7, #12]
 8006a06:	2284      	movs	r2, #132	@ 0x84
 8006a08:	2100      	movs	r1, #0
 8006a0a:	5499      	strb	r1, [r3, r2]
 8006a0c:	2301      	movs	r3, #1
 8006a0e:	e02c      	b.n	8006a6a <UART_WaitOnFlagUntilTimeout+0xd6>
 8006a10:	68fb      	ldr	r3, [r7, #12]
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	69da      	ldr	r2, [r3, #28]
 8006a16:	2380      	movs	r3, #128	@ 0x80
 8006a18:	011b      	lsls	r3, r3, #4
 8006a1a:	401a      	ands	r2, r3
 8006a1c:	2380      	movs	r3, #128	@ 0x80
 8006a1e:	011b      	lsls	r3, r3, #4
 8006a20:	429a      	cmp	r2, r3
 8006a22:	d112      	bne.n	8006a4a <UART_WaitOnFlagUntilTimeout+0xb6>
 8006a24:	68fb      	ldr	r3, [r7, #12]
 8006a26:	681b      	ldr	r3, [r3, #0]
 8006a28:	2280      	movs	r2, #128	@ 0x80
 8006a2a:	0112      	lsls	r2, r2, #4
 8006a2c:	621a      	str	r2, [r3, #32]
 8006a2e:	68fb      	ldr	r3, [r7, #12]
 8006a30:	0018      	movs	r0, r3
 8006a32:	f000 f943 	bl	8006cbc <UART_EndRxTransfer>
 8006a36:	68fb      	ldr	r3, [r7, #12]
 8006a38:	2290      	movs	r2, #144	@ 0x90
 8006a3a:	2120      	movs	r1, #32
 8006a3c:	5099      	str	r1, [r3, r2]
 8006a3e:	68fb      	ldr	r3, [r7, #12]
 8006a40:	2284      	movs	r2, #132	@ 0x84
 8006a42:	2100      	movs	r1, #0
 8006a44:	5499      	strb	r1, [r3, r2]
 8006a46:	2303      	movs	r3, #3
 8006a48:	e00f      	b.n	8006a6a <UART_WaitOnFlagUntilTimeout+0xd6>
 8006a4a:	68fb      	ldr	r3, [r7, #12]
 8006a4c:	681b      	ldr	r3, [r3, #0]
 8006a4e:	69db      	ldr	r3, [r3, #28]
 8006a50:	68ba      	ldr	r2, [r7, #8]
 8006a52:	4013      	ands	r3, r2
 8006a54:	68ba      	ldr	r2, [r7, #8]
 8006a56:	1ad3      	subs	r3, r2, r3
 8006a58:	425a      	negs	r2, r3
 8006a5a:	4153      	adcs	r3, r2
 8006a5c:	b2db      	uxtb	r3, r3
 8006a5e:	001a      	movs	r2, r3
 8006a60:	1dfb      	adds	r3, r7, #7
 8006a62:	781b      	ldrb	r3, [r3, #0]
 8006a64:	429a      	cmp	r2, r3
 8006a66:	d09e      	beq.n	80069a6 <UART_WaitOnFlagUntilTimeout+0x12>
 8006a68:	2300      	movs	r3, #0
 8006a6a:	0018      	movs	r0, r3
 8006a6c:	46bd      	mov	sp, r7
 8006a6e:	b004      	add	sp, #16
 8006a70:	bd80      	pop	{r7, pc}
	...

08006a74 <UART_Start_Receive_IT>:
 8006a74:	b580      	push	{r7, lr}
 8006a76:	b098      	sub	sp, #96	@ 0x60
 8006a78:	af00      	add	r7, sp, #0
 8006a7a:	60f8      	str	r0, [r7, #12]
 8006a7c:	60b9      	str	r1, [r7, #8]
 8006a7e:	1dbb      	adds	r3, r7, #6
 8006a80:	801a      	strh	r2, [r3, #0]
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	68ba      	ldr	r2, [r7, #8]
 8006a86:	659a      	str	r2, [r3, #88]	@ 0x58
 8006a88:	68fb      	ldr	r3, [r7, #12]
 8006a8a:	1dba      	adds	r2, r7, #6
 8006a8c:	215c      	movs	r1, #92	@ 0x5c
 8006a8e:	8812      	ldrh	r2, [r2, #0]
 8006a90:	525a      	strh	r2, [r3, r1]
 8006a92:	68fb      	ldr	r3, [r7, #12]
 8006a94:	1dba      	adds	r2, r7, #6
 8006a96:	215e      	movs	r1, #94	@ 0x5e
 8006a98:	8812      	ldrh	r2, [r2, #0]
 8006a9a:	525a      	strh	r2, [r3, r1]
 8006a9c:	68fb      	ldr	r3, [r7, #12]
 8006a9e:	2200      	movs	r2, #0
 8006aa0:	675a      	str	r2, [r3, #116]	@ 0x74
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	689a      	ldr	r2, [r3, #8]
 8006aa6:	2380      	movs	r3, #128	@ 0x80
 8006aa8:	015b      	lsls	r3, r3, #5
 8006aaa:	429a      	cmp	r2, r3
 8006aac:	d10d      	bne.n	8006aca <UART_Start_Receive_IT+0x56>
 8006aae:	68fb      	ldr	r3, [r7, #12]
 8006ab0:	691b      	ldr	r3, [r3, #16]
 8006ab2:	2b00      	cmp	r3, #0
 8006ab4:	d104      	bne.n	8006ac0 <UART_Start_Receive_IT+0x4c>
 8006ab6:	68fb      	ldr	r3, [r7, #12]
 8006ab8:	2260      	movs	r2, #96	@ 0x60
 8006aba:	497b      	ldr	r1, [pc, #492]	@ (8006ca8 <UART_Start_Receive_IT+0x234>)
 8006abc:	5299      	strh	r1, [r3, r2]
 8006abe:	e02e      	b.n	8006b1e <UART_Start_Receive_IT+0xaa>
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	2260      	movs	r2, #96	@ 0x60
 8006ac4:	21ff      	movs	r1, #255	@ 0xff
 8006ac6:	5299      	strh	r1, [r3, r2]
 8006ac8:	e029      	b.n	8006b1e <UART_Start_Receive_IT+0xaa>
 8006aca:	68fb      	ldr	r3, [r7, #12]
 8006acc:	689b      	ldr	r3, [r3, #8]
 8006ace:	2b00      	cmp	r3, #0
 8006ad0:	d10d      	bne.n	8006aee <UART_Start_Receive_IT+0x7a>
 8006ad2:	68fb      	ldr	r3, [r7, #12]
 8006ad4:	691b      	ldr	r3, [r3, #16]
 8006ad6:	2b00      	cmp	r3, #0
 8006ad8:	d104      	bne.n	8006ae4 <UART_Start_Receive_IT+0x70>
 8006ada:	68fb      	ldr	r3, [r7, #12]
 8006adc:	2260      	movs	r2, #96	@ 0x60
 8006ade:	21ff      	movs	r1, #255	@ 0xff
 8006ae0:	5299      	strh	r1, [r3, r2]
 8006ae2:	e01c      	b.n	8006b1e <UART_Start_Receive_IT+0xaa>
 8006ae4:	68fb      	ldr	r3, [r7, #12]
 8006ae6:	2260      	movs	r2, #96	@ 0x60
 8006ae8:	217f      	movs	r1, #127	@ 0x7f
 8006aea:	5299      	strh	r1, [r3, r2]
 8006aec:	e017      	b.n	8006b1e <UART_Start_Receive_IT+0xaa>
 8006aee:	68fb      	ldr	r3, [r7, #12]
 8006af0:	689a      	ldr	r2, [r3, #8]
 8006af2:	2380      	movs	r3, #128	@ 0x80
 8006af4:	055b      	lsls	r3, r3, #21
 8006af6:	429a      	cmp	r2, r3
 8006af8:	d10d      	bne.n	8006b16 <UART_Start_Receive_IT+0xa2>
 8006afa:	68fb      	ldr	r3, [r7, #12]
 8006afc:	691b      	ldr	r3, [r3, #16]
 8006afe:	2b00      	cmp	r3, #0
 8006b00:	d104      	bne.n	8006b0c <UART_Start_Receive_IT+0x98>
 8006b02:	68fb      	ldr	r3, [r7, #12]
 8006b04:	2260      	movs	r2, #96	@ 0x60
 8006b06:	217f      	movs	r1, #127	@ 0x7f
 8006b08:	5299      	strh	r1, [r3, r2]
 8006b0a:	e008      	b.n	8006b1e <UART_Start_Receive_IT+0xaa>
 8006b0c:	68fb      	ldr	r3, [r7, #12]
 8006b0e:	2260      	movs	r2, #96	@ 0x60
 8006b10:	213f      	movs	r1, #63	@ 0x3f
 8006b12:	5299      	strh	r1, [r3, r2]
 8006b14:	e003      	b.n	8006b1e <UART_Start_Receive_IT+0xaa>
 8006b16:	68fb      	ldr	r3, [r7, #12]
 8006b18:	2260      	movs	r2, #96	@ 0x60
 8006b1a:	2100      	movs	r1, #0
 8006b1c:	5299      	strh	r1, [r3, r2]
 8006b1e:	68fb      	ldr	r3, [r7, #12]
 8006b20:	2290      	movs	r2, #144	@ 0x90
 8006b22:	2100      	movs	r1, #0
 8006b24:	5099      	str	r1, [r3, r2]
 8006b26:	68fb      	ldr	r3, [r7, #12]
 8006b28:	228c      	movs	r2, #140	@ 0x8c
 8006b2a:	2122      	movs	r1, #34	@ 0x22
 8006b2c:	5099      	str	r1, [r3, r2]
 8006b2e:	f3ef 8310 	mrs	r3, PRIMASK
 8006b32:	643b      	str	r3, [r7, #64]	@ 0x40
 8006b34:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8006b36:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006b38:	2301      	movs	r3, #1
 8006b3a:	647b      	str	r3, [r7, #68]	@ 0x44
 8006b3c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8006b3e:	f383 8810 	msr	PRIMASK, r3
 8006b42:	46c0      	nop			@ (mov r8, r8)
 8006b44:	68fb      	ldr	r3, [r7, #12]
 8006b46:	681b      	ldr	r3, [r3, #0]
 8006b48:	689a      	ldr	r2, [r3, #8]
 8006b4a:	68fb      	ldr	r3, [r7, #12]
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	2101      	movs	r1, #1
 8006b50:	430a      	orrs	r2, r1
 8006b52:	609a      	str	r2, [r3, #8]
 8006b54:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006b56:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006b58:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006b5a:	f383 8810 	msr	PRIMASK, r3
 8006b5e:	46c0      	nop			@ (mov r8, r8)
 8006b60:	68fb      	ldr	r3, [r7, #12]
 8006b62:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8006b64:	2380      	movs	r3, #128	@ 0x80
 8006b66:	059b      	lsls	r3, r3, #22
 8006b68:	429a      	cmp	r2, r3
 8006b6a:	d150      	bne.n	8006c0e <UART_Start_Receive_IT+0x19a>
 8006b6c:	68fb      	ldr	r3, [r7, #12]
 8006b6e:	2268      	movs	r2, #104	@ 0x68
 8006b70:	5a9b      	ldrh	r3, [r3, r2]
 8006b72:	1dba      	adds	r2, r7, #6
 8006b74:	8812      	ldrh	r2, [r2, #0]
 8006b76:	429a      	cmp	r2, r3
 8006b78:	d349      	bcc.n	8006c0e <UART_Start_Receive_IT+0x19a>
 8006b7a:	68fb      	ldr	r3, [r7, #12]
 8006b7c:	689a      	ldr	r2, [r3, #8]
 8006b7e:	2380      	movs	r3, #128	@ 0x80
 8006b80:	015b      	lsls	r3, r3, #5
 8006b82:	429a      	cmp	r2, r3
 8006b84:	d107      	bne.n	8006b96 <UART_Start_Receive_IT+0x122>
 8006b86:	68fb      	ldr	r3, [r7, #12]
 8006b88:	691b      	ldr	r3, [r3, #16]
 8006b8a:	2b00      	cmp	r3, #0
 8006b8c:	d103      	bne.n	8006b96 <UART_Start_Receive_IT+0x122>
 8006b8e:	68fb      	ldr	r3, [r7, #12]
 8006b90:	4a46      	ldr	r2, [pc, #280]	@ (8006cac <UART_Start_Receive_IT+0x238>)
 8006b92:	675a      	str	r2, [r3, #116]	@ 0x74
 8006b94:	e002      	b.n	8006b9c <UART_Start_Receive_IT+0x128>
 8006b96:	68fb      	ldr	r3, [r7, #12]
 8006b98:	4a45      	ldr	r2, [pc, #276]	@ (8006cb0 <UART_Start_Receive_IT+0x23c>)
 8006b9a:	675a      	str	r2, [r3, #116]	@ 0x74
 8006b9c:	68fb      	ldr	r3, [r7, #12]
 8006b9e:	691b      	ldr	r3, [r3, #16]
 8006ba0:	2b00      	cmp	r3, #0
 8006ba2:	d019      	beq.n	8006bd8 <UART_Start_Receive_IT+0x164>
 8006ba4:	f3ef 8310 	mrs	r3, PRIMASK
 8006ba8:	637b      	str	r3, [r7, #52]	@ 0x34
 8006baa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006bac:	65bb      	str	r3, [r7, #88]	@ 0x58
 8006bae:	2301      	movs	r3, #1
 8006bb0:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006bb2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006bb4:	f383 8810 	msr	PRIMASK, r3
 8006bb8:	46c0      	nop			@ (mov r8, r8)
 8006bba:	68fb      	ldr	r3, [r7, #12]
 8006bbc:	681b      	ldr	r3, [r3, #0]
 8006bbe:	681a      	ldr	r2, [r3, #0]
 8006bc0:	68fb      	ldr	r3, [r7, #12]
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	2180      	movs	r1, #128	@ 0x80
 8006bc6:	0049      	lsls	r1, r1, #1
 8006bc8:	430a      	orrs	r2, r1
 8006bca:	601a      	str	r2, [r3, #0]
 8006bcc:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8006bce:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006bd0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006bd2:	f383 8810 	msr	PRIMASK, r3
 8006bd6:	46c0      	nop			@ (mov r8, r8)
 8006bd8:	f3ef 8310 	mrs	r3, PRIMASK
 8006bdc:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006bde:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006be0:	657b      	str	r3, [r7, #84]	@ 0x54
 8006be2:	2301      	movs	r3, #1
 8006be4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006be6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006be8:	f383 8810 	msr	PRIMASK, r3
 8006bec:	46c0      	nop			@ (mov r8, r8)
 8006bee:	68fb      	ldr	r3, [r7, #12]
 8006bf0:	681b      	ldr	r3, [r3, #0]
 8006bf2:	689a      	ldr	r2, [r3, #8]
 8006bf4:	68fb      	ldr	r3, [r7, #12]
 8006bf6:	681b      	ldr	r3, [r3, #0]
 8006bf8:	2180      	movs	r1, #128	@ 0x80
 8006bfa:	0549      	lsls	r1, r1, #21
 8006bfc:	430a      	orrs	r2, r1
 8006bfe:	609a      	str	r2, [r3, #8]
 8006c00:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8006c02:	633b      	str	r3, [r7, #48]	@ 0x30
 8006c04:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006c06:	f383 8810 	msr	PRIMASK, r3
 8006c0a:	46c0      	nop			@ (mov r8, r8)
 8006c0c:	e047      	b.n	8006c9e <UART_Start_Receive_IT+0x22a>
 8006c0e:	68fb      	ldr	r3, [r7, #12]
 8006c10:	689a      	ldr	r2, [r3, #8]
 8006c12:	2380      	movs	r3, #128	@ 0x80
 8006c14:	015b      	lsls	r3, r3, #5
 8006c16:	429a      	cmp	r2, r3
 8006c18:	d107      	bne.n	8006c2a <UART_Start_Receive_IT+0x1b6>
 8006c1a:	68fb      	ldr	r3, [r7, #12]
 8006c1c:	691b      	ldr	r3, [r3, #16]
 8006c1e:	2b00      	cmp	r3, #0
 8006c20:	d103      	bne.n	8006c2a <UART_Start_Receive_IT+0x1b6>
 8006c22:	68fb      	ldr	r3, [r7, #12]
 8006c24:	4a23      	ldr	r2, [pc, #140]	@ (8006cb4 <UART_Start_Receive_IT+0x240>)
 8006c26:	675a      	str	r2, [r3, #116]	@ 0x74
 8006c28:	e002      	b.n	8006c30 <UART_Start_Receive_IT+0x1bc>
 8006c2a:	68fb      	ldr	r3, [r7, #12]
 8006c2c:	4a22      	ldr	r2, [pc, #136]	@ (8006cb8 <UART_Start_Receive_IT+0x244>)
 8006c2e:	675a      	str	r2, [r3, #116]	@ 0x74
 8006c30:	68fb      	ldr	r3, [r7, #12]
 8006c32:	691b      	ldr	r3, [r3, #16]
 8006c34:	2b00      	cmp	r3, #0
 8006c36:	d019      	beq.n	8006c6c <UART_Start_Receive_IT+0x1f8>
 8006c38:	f3ef 8310 	mrs	r3, PRIMASK
 8006c3c:	61fb      	str	r3, [r7, #28]
 8006c3e:	69fb      	ldr	r3, [r7, #28]
 8006c40:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006c42:	2301      	movs	r3, #1
 8006c44:	623b      	str	r3, [r7, #32]
 8006c46:	6a3b      	ldr	r3, [r7, #32]
 8006c48:	f383 8810 	msr	PRIMASK, r3
 8006c4c:	46c0      	nop			@ (mov r8, r8)
 8006c4e:	68fb      	ldr	r3, [r7, #12]
 8006c50:	681b      	ldr	r3, [r3, #0]
 8006c52:	681a      	ldr	r2, [r3, #0]
 8006c54:	68fb      	ldr	r3, [r7, #12]
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	2190      	movs	r1, #144	@ 0x90
 8006c5a:	0049      	lsls	r1, r1, #1
 8006c5c:	430a      	orrs	r2, r1
 8006c5e:	601a      	str	r2, [r3, #0]
 8006c60:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006c62:	627b      	str	r3, [r7, #36]	@ 0x24
 8006c64:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006c66:	f383 8810 	msr	PRIMASK, r3
 8006c6a:	e018      	b.n	8006c9e <UART_Start_Receive_IT+0x22a>
 8006c6c:	f3ef 8310 	mrs	r3, PRIMASK
 8006c70:	613b      	str	r3, [r7, #16]
 8006c72:	693b      	ldr	r3, [r7, #16]
 8006c74:	653b      	str	r3, [r7, #80]	@ 0x50
 8006c76:	2301      	movs	r3, #1
 8006c78:	617b      	str	r3, [r7, #20]
 8006c7a:	697b      	ldr	r3, [r7, #20]
 8006c7c:	f383 8810 	msr	PRIMASK, r3
 8006c80:	46c0      	nop			@ (mov r8, r8)
 8006c82:	68fb      	ldr	r3, [r7, #12]
 8006c84:	681b      	ldr	r3, [r3, #0]
 8006c86:	681a      	ldr	r2, [r3, #0]
 8006c88:	68fb      	ldr	r3, [r7, #12]
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	2120      	movs	r1, #32
 8006c8e:	430a      	orrs	r2, r1
 8006c90:	601a      	str	r2, [r3, #0]
 8006c92:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006c94:	61bb      	str	r3, [r7, #24]
 8006c96:	69bb      	ldr	r3, [r7, #24]
 8006c98:	f383 8810 	msr	PRIMASK, r3
 8006c9c:	46c0      	nop			@ (mov r8, r8)
 8006c9e:	2300      	movs	r3, #0
 8006ca0:	0018      	movs	r0, r3
 8006ca2:	46bd      	mov	sp, r7
 8006ca4:	b018      	add	sp, #96	@ 0x60
 8006ca6:	bd80      	pop	{r7, pc}
 8006ca8:	000001ff 	.word	0x000001ff
 8006cac:	08007505 	.word	0x08007505
 8006cb0:	080071b9 	.word	0x080071b9
 8006cb4:	08006fe5 	.word	0x08006fe5
 8006cb8:	08006e11 	.word	0x08006e11

08006cbc <UART_EndRxTransfer>:
 8006cbc:	b580      	push	{r7, lr}
 8006cbe:	b08e      	sub	sp, #56	@ 0x38
 8006cc0:	af00      	add	r7, sp, #0
 8006cc2:	6078      	str	r0, [r7, #4]
 8006cc4:	f3ef 8310 	mrs	r3, PRIMASK
 8006cc8:	617b      	str	r3, [r7, #20]
 8006cca:	697b      	ldr	r3, [r7, #20]
 8006ccc:	637b      	str	r3, [r7, #52]	@ 0x34
 8006cce:	2301      	movs	r3, #1
 8006cd0:	61bb      	str	r3, [r7, #24]
 8006cd2:	69bb      	ldr	r3, [r7, #24]
 8006cd4:	f383 8810 	msr	PRIMASK, r3
 8006cd8:	46c0      	nop			@ (mov r8, r8)
 8006cda:	687b      	ldr	r3, [r7, #4]
 8006cdc:	681b      	ldr	r3, [r3, #0]
 8006cde:	681a      	ldr	r2, [r3, #0]
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	681b      	ldr	r3, [r3, #0]
 8006ce4:	4926      	ldr	r1, [pc, #152]	@ (8006d80 <UART_EndRxTransfer+0xc4>)
 8006ce6:	400a      	ands	r2, r1
 8006ce8:	601a      	str	r2, [r3, #0]
 8006cea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006cec:	61fb      	str	r3, [r7, #28]
 8006cee:	69fb      	ldr	r3, [r7, #28]
 8006cf0:	f383 8810 	msr	PRIMASK, r3
 8006cf4:	46c0      	nop			@ (mov r8, r8)
 8006cf6:	f3ef 8310 	mrs	r3, PRIMASK
 8006cfa:	623b      	str	r3, [r7, #32]
 8006cfc:	6a3b      	ldr	r3, [r7, #32]
 8006cfe:	633b      	str	r3, [r7, #48]	@ 0x30
 8006d00:	2301      	movs	r3, #1
 8006d02:	627b      	str	r3, [r7, #36]	@ 0x24
 8006d04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006d06:	f383 8810 	msr	PRIMASK, r3
 8006d0a:	46c0      	nop			@ (mov r8, r8)
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	681b      	ldr	r3, [r3, #0]
 8006d10:	689a      	ldr	r2, [r3, #8]
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	681b      	ldr	r3, [r3, #0]
 8006d16:	491b      	ldr	r1, [pc, #108]	@ (8006d84 <UART_EndRxTransfer+0xc8>)
 8006d18:	400a      	ands	r2, r1
 8006d1a:	609a      	str	r2, [r3, #8]
 8006d1c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006d1e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006d20:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006d22:	f383 8810 	msr	PRIMASK, r3
 8006d26:	46c0      	nop			@ (mov r8, r8)
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006d2c:	2b01      	cmp	r3, #1
 8006d2e:	d118      	bne.n	8006d62 <UART_EndRxTransfer+0xa6>
 8006d30:	f3ef 8310 	mrs	r3, PRIMASK
 8006d34:	60bb      	str	r3, [r7, #8]
 8006d36:	68bb      	ldr	r3, [r7, #8]
 8006d38:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006d3a:	2301      	movs	r3, #1
 8006d3c:	60fb      	str	r3, [r7, #12]
 8006d3e:	68fb      	ldr	r3, [r7, #12]
 8006d40:	f383 8810 	msr	PRIMASK, r3
 8006d44:	46c0      	nop			@ (mov r8, r8)
 8006d46:	687b      	ldr	r3, [r7, #4]
 8006d48:	681b      	ldr	r3, [r3, #0]
 8006d4a:	681a      	ldr	r2, [r3, #0]
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	681b      	ldr	r3, [r3, #0]
 8006d50:	2110      	movs	r1, #16
 8006d52:	438a      	bics	r2, r1
 8006d54:	601a      	str	r2, [r3, #0]
 8006d56:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006d58:	613b      	str	r3, [r7, #16]
 8006d5a:	693b      	ldr	r3, [r7, #16]
 8006d5c:	f383 8810 	msr	PRIMASK, r3
 8006d60:	46c0      	nop			@ (mov r8, r8)
 8006d62:	687b      	ldr	r3, [r7, #4]
 8006d64:	228c      	movs	r2, #140	@ 0x8c
 8006d66:	2120      	movs	r1, #32
 8006d68:	5099      	str	r1, [r3, r2]
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	2200      	movs	r2, #0
 8006d6e:	66da      	str	r2, [r3, #108]	@ 0x6c
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	2200      	movs	r2, #0
 8006d74:	675a      	str	r2, [r3, #116]	@ 0x74
 8006d76:	46c0      	nop			@ (mov r8, r8)
 8006d78:	46bd      	mov	sp, r7
 8006d7a:	b00e      	add	sp, #56	@ 0x38
 8006d7c:	bd80      	pop	{r7, pc}
 8006d7e:	46c0      	nop			@ (mov r8, r8)
 8006d80:	fffffedf 	.word	0xfffffedf
 8006d84:	effffffe 	.word	0xeffffffe

08006d88 <UART_DMAAbortOnError>:
 8006d88:	b580      	push	{r7, lr}
 8006d8a:	b084      	sub	sp, #16
 8006d8c:	af00      	add	r7, sp, #0
 8006d8e:	6078      	str	r0, [r7, #4]
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006d94:	60fb      	str	r3, [r7, #12]
 8006d96:	68fb      	ldr	r3, [r7, #12]
 8006d98:	225e      	movs	r2, #94	@ 0x5e
 8006d9a:	2100      	movs	r1, #0
 8006d9c:	5299      	strh	r1, [r3, r2]
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	2256      	movs	r2, #86	@ 0x56
 8006da2:	2100      	movs	r1, #0
 8006da4:	5299      	strh	r1, [r3, r2]
 8006da6:	68fb      	ldr	r3, [r7, #12]
 8006da8:	0018      	movs	r0, r3
 8006daa:	f7ff f92b 	bl	8006004 <HAL_UART_ErrorCallback>
 8006dae:	46c0      	nop			@ (mov r8, r8)
 8006db0:	46bd      	mov	sp, r7
 8006db2:	b004      	add	sp, #16
 8006db4:	bd80      	pop	{r7, pc}

08006db6 <UART_EndTransmit_IT>:
 8006db6:	b580      	push	{r7, lr}
 8006db8:	b086      	sub	sp, #24
 8006dba:	af00      	add	r7, sp, #0
 8006dbc:	6078      	str	r0, [r7, #4]
 8006dbe:	f3ef 8310 	mrs	r3, PRIMASK
 8006dc2:	60bb      	str	r3, [r7, #8]
 8006dc4:	68bb      	ldr	r3, [r7, #8]
 8006dc6:	617b      	str	r3, [r7, #20]
 8006dc8:	2301      	movs	r3, #1
 8006dca:	60fb      	str	r3, [r7, #12]
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	f383 8810 	msr	PRIMASK, r3
 8006dd2:	46c0      	nop			@ (mov r8, r8)
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	681b      	ldr	r3, [r3, #0]
 8006dd8:	681a      	ldr	r2, [r3, #0]
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	681b      	ldr	r3, [r3, #0]
 8006dde:	2140      	movs	r1, #64	@ 0x40
 8006de0:	438a      	bics	r2, r1
 8006de2:	601a      	str	r2, [r3, #0]
 8006de4:	697b      	ldr	r3, [r7, #20]
 8006de6:	613b      	str	r3, [r7, #16]
 8006de8:	693b      	ldr	r3, [r7, #16]
 8006dea:	f383 8810 	msr	PRIMASK, r3
 8006dee:	46c0      	nop			@ (mov r8, r8)
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	2288      	movs	r2, #136	@ 0x88
 8006df4:	2120      	movs	r1, #32
 8006df6:	5099      	str	r1, [r3, r2]
 8006df8:	687b      	ldr	r3, [r7, #4]
 8006dfa:	2200      	movs	r2, #0
 8006dfc:	679a      	str	r2, [r3, #120]	@ 0x78
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	0018      	movs	r0, r3
 8006e02:	f7ff f8f7 	bl	8005ff4 <HAL_UART_TxCpltCallback>
 8006e06:	46c0      	nop			@ (mov r8, r8)
 8006e08:	46bd      	mov	sp, r7
 8006e0a:	b006      	add	sp, #24
 8006e0c:	bd80      	pop	{r7, pc}
	...

08006e10 <UART_RxISR_8BIT>:
 8006e10:	b580      	push	{r7, lr}
 8006e12:	b094      	sub	sp, #80	@ 0x50
 8006e14:	af00      	add	r7, sp, #0
 8006e16:	6078      	str	r0, [r7, #4]
 8006e18:	204e      	movs	r0, #78	@ 0x4e
 8006e1a:	183b      	adds	r3, r7, r0
 8006e1c:	687a      	ldr	r2, [r7, #4]
 8006e1e:	2160      	movs	r1, #96	@ 0x60
 8006e20:	5a52      	ldrh	r2, [r2, r1]
 8006e22:	801a      	strh	r2, [r3, #0]
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	228c      	movs	r2, #140	@ 0x8c
 8006e28:	589b      	ldr	r3, [r3, r2]
 8006e2a:	2b22      	cmp	r3, #34	@ 0x22
 8006e2c:	d000      	beq.n	8006e30 <UART_RxISR_8BIT+0x20>
 8006e2e:	e0c4      	b.n	8006fba <UART_RxISR_8BIT+0x1aa>
 8006e30:	687b      	ldr	r3, [r7, #4]
 8006e32:	681b      	ldr	r3, [r3, #0]
 8006e34:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8006e36:	214c      	movs	r1, #76	@ 0x4c
 8006e38:	187b      	adds	r3, r7, r1
 8006e3a:	801a      	strh	r2, [r3, #0]
 8006e3c:	187b      	adds	r3, r7, r1
 8006e3e:	881b      	ldrh	r3, [r3, #0]
 8006e40:	b2da      	uxtb	r2, r3
 8006e42:	183b      	adds	r3, r7, r0
 8006e44:	881b      	ldrh	r3, [r3, #0]
 8006e46:	b2d9      	uxtb	r1, r3
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006e4c:	400a      	ands	r2, r1
 8006e4e:	b2d2      	uxtb	r2, r2
 8006e50:	701a      	strb	r2, [r3, #0]
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006e56:	1c5a      	adds	r2, r3, #1
 8006e58:	687b      	ldr	r3, [r7, #4]
 8006e5a:	659a      	str	r2, [r3, #88]	@ 0x58
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	225e      	movs	r2, #94	@ 0x5e
 8006e60:	5a9b      	ldrh	r3, [r3, r2]
 8006e62:	b29b      	uxth	r3, r3
 8006e64:	3b01      	subs	r3, #1
 8006e66:	b299      	uxth	r1, r3
 8006e68:	687b      	ldr	r3, [r7, #4]
 8006e6a:	225e      	movs	r2, #94	@ 0x5e
 8006e6c:	5299      	strh	r1, [r3, r2]
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	225e      	movs	r2, #94	@ 0x5e
 8006e72:	5a9b      	ldrh	r3, [r3, r2]
 8006e74:	b29b      	uxth	r3, r3
 8006e76:	2b00      	cmp	r3, #0
 8006e78:	d000      	beq.n	8006e7c <UART_RxISR_8BIT+0x6c>
 8006e7a:	e0a6      	b.n	8006fca <UART_RxISR_8BIT+0x1ba>
 8006e7c:	f3ef 8310 	mrs	r3, PRIMASK
 8006e80:	627b      	str	r3, [r7, #36]	@ 0x24
 8006e82:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e84:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006e86:	2301      	movs	r3, #1
 8006e88:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006e8a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006e8c:	f383 8810 	msr	PRIMASK, r3
 8006e90:	46c0      	nop			@ (mov r8, r8)
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	681b      	ldr	r3, [r3, #0]
 8006e96:	681a      	ldr	r2, [r3, #0]
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	681b      	ldr	r3, [r3, #0]
 8006e9c:	494d      	ldr	r1, [pc, #308]	@ (8006fd4 <UART_RxISR_8BIT+0x1c4>)
 8006e9e:	400a      	ands	r2, r1
 8006ea0:	601a      	str	r2, [r3, #0]
 8006ea2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006ea4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006ea6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006ea8:	f383 8810 	msr	PRIMASK, r3
 8006eac:	46c0      	nop			@ (mov r8, r8)
 8006eae:	f3ef 8310 	mrs	r3, PRIMASK
 8006eb2:	633b      	str	r3, [r7, #48]	@ 0x30
 8006eb4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006eb6:	647b      	str	r3, [r7, #68]	@ 0x44
 8006eb8:	2301      	movs	r3, #1
 8006eba:	637b      	str	r3, [r7, #52]	@ 0x34
 8006ebc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006ebe:	f383 8810 	msr	PRIMASK, r3
 8006ec2:	46c0      	nop			@ (mov r8, r8)
 8006ec4:	687b      	ldr	r3, [r7, #4]
 8006ec6:	681b      	ldr	r3, [r3, #0]
 8006ec8:	689a      	ldr	r2, [r3, #8]
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	681b      	ldr	r3, [r3, #0]
 8006ece:	2101      	movs	r1, #1
 8006ed0:	438a      	bics	r2, r1
 8006ed2:	609a      	str	r2, [r3, #8]
 8006ed4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8006ed6:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006ed8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006eda:	f383 8810 	msr	PRIMASK, r3
 8006ede:	46c0      	nop			@ (mov r8, r8)
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	228c      	movs	r2, #140	@ 0x8c
 8006ee4:	2120      	movs	r1, #32
 8006ee6:	5099      	str	r1, [r3, r2]
 8006ee8:	687b      	ldr	r3, [r7, #4]
 8006eea:	2200      	movs	r2, #0
 8006eec:	675a      	str	r2, [r3, #116]	@ 0x74
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	2200      	movs	r2, #0
 8006ef2:	671a      	str	r2, [r3, #112]	@ 0x70
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	681b      	ldr	r3, [r3, #0]
 8006ef8:	4a37      	ldr	r2, [pc, #220]	@ (8006fd8 <UART_RxISR_8BIT+0x1c8>)
 8006efa:	4293      	cmp	r3, r2
 8006efc:	d024      	beq.n	8006f48 <UART_RxISR_8BIT+0x138>
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	681b      	ldr	r3, [r3, #0]
 8006f02:	4a36      	ldr	r2, [pc, #216]	@ (8006fdc <UART_RxISR_8BIT+0x1cc>)
 8006f04:	4293      	cmp	r3, r2
 8006f06:	d01f      	beq.n	8006f48 <UART_RxISR_8BIT+0x138>
 8006f08:	687b      	ldr	r3, [r7, #4]
 8006f0a:	681b      	ldr	r3, [r3, #0]
 8006f0c:	685a      	ldr	r2, [r3, #4]
 8006f0e:	2380      	movs	r3, #128	@ 0x80
 8006f10:	041b      	lsls	r3, r3, #16
 8006f12:	4013      	ands	r3, r2
 8006f14:	d018      	beq.n	8006f48 <UART_RxISR_8BIT+0x138>
 8006f16:	f3ef 8310 	mrs	r3, PRIMASK
 8006f1a:	61bb      	str	r3, [r7, #24]
 8006f1c:	69bb      	ldr	r3, [r7, #24]
 8006f1e:	643b      	str	r3, [r7, #64]	@ 0x40
 8006f20:	2301      	movs	r3, #1
 8006f22:	61fb      	str	r3, [r7, #28]
 8006f24:	69fb      	ldr	r3, [r7, #28]
 8006f26:	f383 8810 	msr	PRIMASK, r3
 8006f2a:	46c0      	nop			@ (mov r8, r8)
 8006f2c:	687b      	ldr	r3, [r7, #4]
 8006f2e:	681b      	ldr	r3, [r3, #0]
 8006f30:	681a      	ldr	r2, [r3, #0]
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	681b      	ldr	r3, [r3, #0]
 8006f36:	492a      	ldr	r1, [pc, #168]	@ (8006fe0 <UART_RxISR_8BIT+0x1d0>)
 8006f38:	400a      	ands	r2, r1
 8006f3a:	601a      	str	r2, [r3, #0]
 8006f3c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8006f3e:	623b      	str	r3, [r7, #32]
 8006f40:	6a3b      	ldr	r3, [r7, #32]
 8006f42:	f383 8810 	msr	PRIMASK, r3
 8006f46:	46c0      	nop			@ (mov r8, r8)
 8006f48:	687b      	ldr	r3, [r7, #4]
 8006f4a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006f4c:	2b01      	cmp	r3, #1
 8006f4e:	d12f      	bne.n	8006fb0 <UART_RxISR_8BIT+0x1a0>
 8006f50:	687b      	ldr	r3, [r7, #4]
 8006f52:	2200      	movs	r2, #0
 8006f54:	66da      	str	r2, [r3, #108]	@ 0x6c
 8006f56:	f3ef 8310 	mrs	r3, PRIMASK
 8006f5a:	60fb      	str	r3, [r7, #12]
 8006f5c:	68fb      	ldr	r3, [r7, #12]
 8006f5e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006f60:	2301      	movs	r3, #1
 8006f62:	613b      	str	r3, [r7, #16]
 8006f64:	693b      	ldr	r3, [r7, #16]
 8006f66:	f383 8810 	msr	PRIMASK, r3
 8006f6a:	46c0      	nop			@ (mov r8, r8)
 8006f6c:	687b      	ldr	r3, [r7, #4]
 8006f6e:	681b      	ldr	r3, [r3, #0]
 8006f70:	681a      	ldr	r2, [r3, #0]
 8006f72:	687b      	ldr	r3, [r7, #4]
 8006f74:	681b      	ldr	r3, [r3, #0]
 8006f76:	2110      	movs	r1, #16
 8006f78:	438a      	bics	r2, r1
 8006f7a:	601a      	str	r2, [r3, #0]
 8006f7c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006f7e:	617b      	str	r3, [r7, #20]
 8006f80:	697b      	ldr	r3, [r7, #20]
 8006f82:	f383 8810 	msr	PRIMASK, r3
 8006f86:	46c0      	nop			@ (mov r8, r8)
 8006f88:	687b      	ldr	r3, [r7, #4]
 8006f8a:	681b      	ldr	r3, [r3, #0]
 8006f8c:	69db      	ldr	r3, [r3, #28]
 8006f8e:	2210      	movs	r2, #16
 8006f90:	4013      	ands	r3, r2
 8006f92:	2b10      	cmp	r3, #16
 8006f94:	d103      	bne.n	8006f9e <UART_RxISR_8BIT+0x18e>
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	681b      	ldr	r3, [r3, #0]
 8006f9a:	2210      	movs	r2, #16
 8006f9c:	621a      	str	r2, [r3, #32]
 8006f9e:	687b      	ldr	r3, [r7, #4]
 8006fa0:	225c      	movs	r2, #92	@ 0x5c
 8006fa2:	5a9a      	ldrh	r2, [r3, r2]
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	0011      	movs	r1, r2
 8006fa8:	0018      	movs	r0, r3
 8006faa:	f7ff f833 	bl	8006014 <HAL_UARTEx_RxEventCallback>
 8006fae:	e00c      	b.n	8006fca <UART_RxISR_8BIT+0x1ba>
 8006fb0:	687b      	ldr	r3, [r7, #4]
 8006fb2:	0018      	movs	r0, r3
 8006fb4:	f7fa ff3e 	bl	8001e34 <HAL_UART_RxCpltCallback>
 8006fb8:	e007      	b.n	8006fca <UART_RxISR_8BIT+0x1ba>
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	681b      	ldr	r3, [r3, #0]
 8006fbe:	699a      	ldr	r2, [r3, #24]
 8006fc0:	687b      	ldr	r3, [r7, #4]
 8006fc2:	681b      	ldr	r3, [r3, #0]
 8006fc4:	2108      	movs	r1, #8
 8006fc6:	430a      	orrs	r2, r1
 8006fc8:	619a      	str	r2, [r3, #24]
 8006fca:	46c0      	nop			@ (mov r8, r8)
 8006fcc:	46bd      	mov	sp, r7
 8006fce:	b014      	add	sp, #80	@ 0x50
 8006fd0:	bd80      	pop	{r7, pc}
 8006fd2:	46c0      	nop			@ (mov r8, r8)
 8006fd4:	fffffedf 	.word	0xfffffedf
 8006fd8:	40008000 	.word	0x40008000
 8006fdc:	40008400 	.word	0x40008400
 8006fe0:	fbffffff 	.word	0xfbffffff

08006fe4 <UART_RxISR_16BIT>:
 8006fe4:	b580      	push	{r7, lr}
 8006fe6:	b094      	sub	sp, #80	@ 0x50
 8006fe8:	af00      	add	r7, sp, #0
 8006fea:	6078      	str	r0, [r7, #4]
 8006fec:	204e      	movs	r0, #78	@ 0x4e
 8006fee:	183b      	adds	r3, r7, r0
 8006ff0:	687a      	ldr	r2, [r7, #4]
 8006ff2:	2160      	movs	r1, #96	@ 0x60
 8006ff4:	5a52      	ldrh	r2, [r2, r1]
 8006ff6:	801a      	strh	r2, [r3, #0]
 8006ff8:	687b      	ldr	r3, [r7, #4]
 8006ffa:	228c      	movs	r2, #140	@ 0x8c
 8006ffc:	589b      	ldr	r3, [r3, r2]
 8006ffe:	2b22      	cmp	r3, #34	@ 0x22
 8007000:	d000      	beq.n	8007004 <UART_RxISR_16BIT+0x20>
 8007002:	e0c4      	b.n	800718e <UART_RxISR_16BIT+0x1aa>
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	681b      	ldr	r3, [r3, #0]
 8007008:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800700a:	214c      	movs	r1, #76	@ 0x4c
 800700c:	187b      	adds	r3, r7, r1
 800700e:	801a      	strh	r2, [r3, #0]
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007014:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007016:	187b      	adds	r3, r7, r1
 8007018:	183a      	adds	r2, r7, r0
 800701a:	881b      	ldrh	r3, [r3, #0]
 800701c:	8812      	ldrh	r2, [r2, #0]
 800701e:	4013      	ands	r3, r2
 8007020:	b29a      	uxth	r2, r3
 8007022:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007024:	801a      	strh	r2, [r3, #0]
 8007026:	687b      	ldr	r3, [r7, #4]
 8007028:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800702a:	1c9a      	adds	r2, r3, #2
 800702c:	687b      	ldr	r3, [r7, #4]
 800702e:	659a      	str	r2, [r3, #88]	@ 0x58
 8007030:	687b      	ldr	r3, [r7, #4]
 8007032:	225e      	movs	r2, #94	@ 0x5e
 8007034:	5a9b      	ldrh	r3, [r3, r2]
 8007036:	b29b      	uxth	r3, r3
 8007038:	3b01      	subs	r3, #1
 800703a:	b299      	uxth	r1, r3
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	225e      	movs	r2, #94	@ 0x5e
 8007040:	5299      	strh	r1, [r3, r2]
 8007042:	687b      	ldr	r3, [r7, #4]
 8007044:	225e      	movs	r2, #94	@ 0x5e
 8007046:	5a9b      	ldrh	r3, [r3, r2]
 8007048:	b29b      	uxth	r3, r3
 800704a:	2b00      	cmp	r3, #0
 800704c:	d000      	beq.n	8007050 <UART_RxISR_16BIT+0x6c>
 800704e:	e0a6      	b.n	800719e <UART_RxISR_16BIT+0x1ba>
 8007050:	f3ef 8310 	mrs	r3, PRIMASK
 8007054:	623b      	str	r3, [r7, #32]
 8007056:	6a3b      	ldr	r3, [r7, #32]
 8007058:	647b      	str	r3, [r7, #68]	@ 0x44
 800705a:	2301      	movs	r3, #1
 800705c:	627b      	str	r3, [r7, #36]	@ 0x24
 800705e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007060:	f383 8810 	msr	PRIMASK, r3
 8007064:	46c0      	nop			@ (mov r8, r8)
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	681a      	ldr	r2, [r3, #0]
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	681b      	ldr	r3, [r3, #0]
 8007070:	494d      	ldr	r1, [pc, #308]	@ (80071a8 <UART_RxISR_16BIT+0x1c4>)
 8007072:	400a      	ands	r2, r1
 8007074:	601a      	str	r2, [r3, #0]
 8007076:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007078:	62bb      	str	r3, [r7, #40]	@ 0x28
 800707a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800707c:	f383 8810 	msr	PRIMASK, r3
 8007080:	46c0      	nop			@ (mov r8, r8)
 8007082:	f3ef 8310 	mrs	r3, PRIMASK
 8007086:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007088:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800708a:	643b      	str	r3, [r7, #64]	@ 0x40
 800708c:	2301      	movs	r3, #1
 800708e:	633b      	str	r3, [r7, #48]	@ 0x30
 8007090:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007092:	f383 8810 	msr	PRIMASK, r3
 8007096:	46c0      	nop			@ (mov r8, r8)
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	681b      	ldr	r3, [r3, #0]
 800709c:	689a      	ldr	r2, [r3, #8]
 800709e:	687b      	ldr	r3, [r7, #4]
 80070a0:	681b      	ldr	r3, [r3, #0]
 80070a2:	2101      	movs	r1, #1
 80070a4:	438a      	bics	r2, r1
 80070a6:	609a      	str	r2, [r3, #8]
 80070a8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80070aa:	637b      	str	r3, [r7, #52]	@ 0x34
 80070ac:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80070ae:	f383 8810 	msr	PRIMASK, r3
 80070b2:	46c0      	nop			@ (mov r8, r8)
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	228c      	movs	r2, #140	@ 0x8c
 80070b8:	2120      	movs	r1, #32
 80070ba:	5099      	str	r1, [r3, r2]
 80070bc:	687b      	ldr	r3, [r7, #4]
 80070be:	2200      	movs	r2, #0
 80070c0:	675a      	str	r2, [r3, #116]	@ 0x74
 80070c2:	687b      	ldr	r3, [r7, #4]
 80070c4:	2200      	movs	r2, #0
 80070c6:	671a      	str	r2, [r3, #112]	@ 0x70
 80070c8:	687b      	ldr	r3, [r7, #4]
 80070ca:	681b      	ldr	r3, [r3, #0]
 80070cc:	4a37      	ldr	r2, [pc, #220]	@ (80071ac <UART_RxISR_16BIT+0x1c8>)
 80070ce:	4293      	cmp	r3, r2
 80070d0:	d024      	beq.n	800711c <UART_RxISR_16BIT+0x138>
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	4a36      	ldr	r2, [pc, #216]	@ (80071b0 <UART_RxISR_16BIT+0x1cc>)
 80070d8:	4293      	cmp	r3, r2
 80070da:	d01f      	beq.n	800711c <UART_RxISR_16BIT+0x138>
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	681b      	ldr	r3, [r3, #0]
 80070e0:	685a      	ldr	r2, [r3, #4]
 80070e2:	2380      	movs	r3, #128	@ 0x80
 80070e4:	041b      	lsls	r3, r3, #16
 80070e6:	4013      	ands	r3, r2
 80070e8:	d018      	beq.n	800711c <UART_RxISR_16BIT+0x138>
 80070ea:	f3ef 8310 	mrs	r3, PRIMASK
 80070ee:	617b      	str	r3, [r7, #20]
 80070f0:	697b      	ldr	r3, [r7, #20]
 80070f2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80070f4:	2301      	movs	r3, #1
 80070f6:	61bb      	str	r3, [r7, #24]
 80070f8:	69bb      	ldr	r3, [r7, #24]
 80070fa:	f383 8810 	msr	PRIMASK, r3
 80070fe:	46c0      	nop			@ (mov r8, r8)
 8007100:	687b      	ldr	r3, [r7, #4]
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	681a      	ldr	r2, [r3, #0]
 8007106:	687b      	ldr	r3, [r7, #4]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	492a      	ldr	r1, [pc, #168]	@ (80071b4 <UART_RxISR_16BIT+0x1d0>)
 800710c:	400a      	ands	r2, r1
 800710e:	601a      	str	r2, [r3, #0]
 8007110:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007112:	61fb      	str	r3, [r7, #28]
 8007114:	69fb      	ldr	r3, [r7, #28]
 8007116:	f383 8810 	msr	PRIMASK, r3
 800711a:	46c0      	nop			@ (mov r8, r8)
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007120:	2b01      	cmp	r3, #1
 8007122:	d12f      	bne.n	8007184 <UART_RxISR_16BIT+0x1a0>
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	2200      	movs	r2, #0
 8007128:	66da      	str	r2, [r3, #108]	@ 0x6c
 800712a:	f3ef 8310 	mrs	r3, PRIMASK
 800712e:	60bb      	str	r3, [r7, #8]
 8007130:	68bb      	ldr	r3, [r7, #8]
 8007132:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007134:	2301      	movs	r3, #1
 8007136:	60fb      	str	r3, [r7, #12]
 8007138:	68fb      	ldr	r3, [r7, #12]
 800713a:	f383 8810 	msr	PRIMASK, r3
 800713e:	46c0      	nop			@ (mov r8, r8)
 8007140:	687b      	ldr	r3, [r7, #4]
 8007142:	681b      	ldr	r3, [r3, #0]
 8007144:	681a      	ldr	r2, [r3, #0]
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	2110      	movs	r1, #16
 800714c:	438a      	bics	r2, r1
 800714e:	601a      	str	r2, [r3, #0]
 8007150:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007152:	613b      	str	r3, [r7, #16]
 8007154:	693b      	ldr	r3, [r7, #16]
 8007156:	f383 8810 	msr	PRIMASK, r3
 800715a:	46c0      	nop			@ (mov r8, r8)
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	681b      	ldr	r3, [r3, #0]
 8007160:	69db      	ldr	r3, [r3, #28]
 8007162:	2210      	movs	r2, #16
 8007164:	4013      	ands	r3, r2
 8007166:	2b10      	cmp	r3, #16
 8007168:	d103      	bne.n	8007172 <UART_RxISR_16BIT+0x18e>
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	2210      	movs	r2, #16
 8007170:	621a      	str	r2, [r3, #32]
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	225c      	movs	r2, #92	@ 0x5c
 8007176:	5a9a      	ldrh	r2, [r3, r2]
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	0011      	movs	r1, r2
 800717c:	0018      	movs	r0, r3
 800717e:	f7fe ff49 	bl	8006014 <HAL_UARTEx_RxEventCallback>
 8007182:	e00c      	b.n	800719e <UART_RxISR_16BIT+0x1ba>
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	0018      	movs	r0, r3
 8007188:	f7fa fe54 	bl	8001e34 <HAL_UART_RxCpltCallback>
 800718c:	e007      	b.n	800719e <UART_RxISR_16BIT+0x1ba>
 800718e:	687b      	ldr	r3, [r7, #4]
 8007190:	681b      	ldr	r3, [r3, #0]
 8007192:	699a      	ldr	r2, [r3, #24]
 8007194:	687b      	ldr	r3, [r7, #4]
 8007196:	681b      	ldr	r3, [r3, #0]
 8007198:	2108      	movs	r1, #8
 800719a:	430a      	orrs	r2, r1
 800719c:	619a      	str	r2, [r3, #24]
 800719e:	46c0      	nop			@ (mov r8, r8)
 80071a0:	46bd      	mov	sp, r7
 80071a2:	b014      	add	sp, #80	@ 0x50
 80071a4:	bd80      	pop	{r7, pc}
 80071a6:	46c0      	nop			@ (mov r8, r8)
 80071a8:	fffffedf 	.word	0xfffffedf
 80071ac:	40008000 	.word	0x40008000
 80071b0:	40008400 	.word	0x40008400
 80071b4:	fbffffff 	.word	0xfbffffff

080071b8 <UART_RxISR_8BIT_FIFOEN>:
 80071b8:	b580      	push	{r7, lr}
 80071ba:	b0a0      	sub	sp, #128	@ 0x80
 80071bc:	af00      	add	r7, sp, #0
 80071be:	6078      	str	r0, [r7, #4]
 80071c0:	237a      	movs	r3, #122	@ 0x7a
 80071c2:	18fb      	adds	r3, r7, r3
 80071c4:	687a      	ldr	r2, [r7, #4]
 80071c6:	2160      	movs	r1, #96	@ 0x60
 80071c8:	5a52      	ldrh	r2, [r2, r1]
 80071ca:	801a      	strh	r2, [r3, #0]
 80071cc:	687b      	ldr	r3, [r7, #4]
 80071ce:	681b      	ldr	r3, [r3, #0]
 80071d0:	69db      	ldr	r3, [r3, #28]
 80071d2:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80071d4:	687b      	ldr	r3, [r7, #4]
 80071d6:	681b      	ldr	r3, [r3, #0]
 80071d8:	681b      	ldr	r3, [r3, #0]
 80071da:	677b      	str	r3, [r7, #116]	@ 0x74
 80071dc:	687b      	ldr	r3, [r7, #4]
 80071de:	681b      	ldr	r3, [r3, #0]
 80071e0:	689b      	ldr	r3, [r3, #8]
 80071e2:	673b      	str	r3, [r7, #112]	@ 0x70
 80071e4:	687b      	ldr	r3, [r7, #4]
 80071e6:	228c      	movs	r2, #140	@ 0x8c
 80071e8:	589b      	ldr	r3, [r3, r2]
 80071ea:	2b22      	cmp	r3, #34	@ 0x22
 80071ec:	d000      	beq.n	80071f0 <UART_RxISR_8BIT_FIFOEN+0x38>
 80071ee:	e16f      	b.n	80074d0 <UART_RxISR_8BIT_FIFOEN+0x318>
 80071f0:	236e      	movs	r3, #110	@ 0x6e
 80071f2:	18fb      	adds	r3, r7, r3
 80071f4:	687a      	ldr	r2, [r7, #4]
 80071f6:	2168      	movs	r1, #104	@ 0x68
 80071f8:	5a52      	ldrh	r2, [r2, r1]
 80071fa:	801a      	strh	r2, [r3, #0]
 80071fc:	e116      	b.n	800742c <UART_RxISR_8BIT_FIFOEN+0x274>
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	681b      	ldr	r3, [r3, #0]
 8007202:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8007204:	216c      	movs	r1, #108	@ 0x6c
 8007206:	187b      	adds	r3, r7, r1
 8007208:	801a      	strh	r2, [r3, #0]
 800720a:	187b      	adds	r3, r7, r1
 800720c:	881b      	ldrh	r3, [r3, #0]
 800720e:	b2da      	uxtb	r2, r3
 8007210:	237a      	movs	r3, #122	@ 0x7a
 8007212:	18fb      	adds	r3, r7, r3
 8007214:	881b      	ldrh	r3, [r3, #0]
 8007216:	b2d9      	uxtb	r1, r3
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800721c:	400a      	ands	r2, r1
 800721e:	b2d2      	uxtb	r2, r2
 8007220:	701a      	strb	r2, [r3, #0]
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007226:	1c5a      	adds	r2, r3, #1
 8007228:	687b      	ldr	r3, [r7, #4]
 800722a:	659a      	str	r2, [r3, #88]	@ 0x58
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	225e      	movs	r2, #94	@ 0x5e
 8007230:	5a9b      	ldrh	r3, [r3, r2]
 8007232:	b29b      	uxth	r3, r3
 8007234:	3b01      	subs	r3, #1
 8007236:	b299      	uxth	r1, r3
 8007238:	687b      	ldr	r3, [r7, #4]
 800723a:	225e      	movs	r2, #94	@ 0x5e
 800723c:	5299      	strh	r1, [r3, r2]
 800723e:	687b      	ldr	r3, [r7, #4]
 8007240:	681b      	ldr	r3, [r3, #0]
 8007242:	69db      	ldr	r3, [r3, #28]
 8007244:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8007246:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8007248:	2207      	movs	r2, #7
 800724a:	4013      	ands	r3, r2
 800724c:	d049      	beq.n	80072e2 <UART_RxISR_8BIT_FIFOEN+0x12a>
 800724e:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8007250:	2201      	movs	r2, #1
 8007252:	4013      	ands	r3, r2
 8007254:	d010      	beq.n	8007278 <UART_RxISR_8BIT_FIFOEN+0xc0>
 8007256:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8007258:	2380      	movs	r3, #128	@ 0x80
 800725a:	005b      	lsls	r3, r3, #1
 800725c:	4013      	ands	r3, r2
 800725e:	d00b      	beq.n	8007278 <UART_RxISR_8BIT_FIFOEN+0xc0>
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	681b      	ldr	r3, [r3, #0]
 8007264:	2201      	movs	r2, #1
 8007266:	621a      	str	r2, [r3, #32]
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	2290      	movs	r2, #144	@ 0x90
 800726c:	589b      	ldr	r3, [r3, r2]
 800726e:	2201      	movs	r2, #1
 8007270:	431a      	orrs	r2, r3
 8007272:	687b      	ldr	r3, [r7, #4]
 8007274:	2190      	movs	r1, #144	@ 0x90
 8007276:	505a      	str	r2, [r3, r1]
 8007278:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800727a:	2202      	movs	r2, #2
 800727c:	4013      	ands	r3, r2
 800727e:	d00f      	beq.n	80072a0 <UART_RxISR_8BIT_FIFOEN+0xe8>
 8007280:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8007282:	2201      	movs	r2, #1
 8007284:	4013      	ands	r3, r2
 8007286:	d00b      	beq.n	80072a0 <UART_RxISR_8BIT_FIFOEN+0xe8>
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	681b      	ldr	r3, [r3, #0]
 800728c:	2202      	movs	r2, #2
 800728e:	621a      	str	r2, [r3, #32]
 8007290:	687b      	ldr	r3, [r7, #4]
 8007292:	2290      	movs	r2, #144	@ 0x90
 8007294:	589b      	ldr	r3, [r3, r2]
 8007296:	2204      	movs	r2, #4
 8007298:	431a      	orrs	r2, r3
 800729a:	687b      	ldr	r3, [r7, #4]
 800729c:	2190      	movs	r1, #144	@ 0x90
 800729e:	505a      	str	r2, [r3, r1]
 80072a0:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 80072a2:	2204      	movs	r2, #4
 80072a4:	4013      	ands	r3, r2
 80072a6:	d00f      	beq.n	80072c8 <UART_RxISR_8BIT_FIFOEN+0x110>
 80072a8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80072aa:	2201      	movs	r2, #1
 80072ac:	4013      	ands	r3, r2
 80072ae:	d00b      	beq.n	80072c8 <UART_RxISR_8BIT_FIFOEN+0x110>
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	2204      	movs	r2, #4
 80072b6:	621a      	str	r2, [r3, #32]
 80072b8:	687b      	ldr	r3, [r7, #4]
 80072ba:	2290      	movs	r2, #144	@ 0x90
 80072bc:	589b      	ldr	r3, [r3, r2]
 80072be:	2202      	movs	r2, #2
 80072c0:	431a      	orrs	r2, r3
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	2190      	movs	r1, #144	@ 0x90
 80072c6:	505a      	str	r2, [r3, r1]
 80072c8:	687b      	ldr	r3, [r7, #4]
 80072ca:	2290      	movs	r2, #144	@ 0x90
 80072cc:	589b      	ldr	r3, [r3, r2]
 80072ce:	2b00      	cmp	r3, #0
 80072d0:	d007      	beq.n	80072e2 <UART_RxISR_8BIT_FIFOEN+0x12a>
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	0018      	movs	r0, r3
 80072d6:	f7fe fe95 	bl	8006004 <HAL_UART_ErrorCallback>
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	2290      	movs	r2, #144	@ 0x90
 80072de:	2100      	movs	r1, #0
 80072e0:	5099      	str	r1, [r3, r2]
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	225e      	movs	r2, #94	@ 0x5e
 80072e6:	5a9b      	ldrh	r3, [r3, r2]
 80072e8:	b29b      	uxth	r3, r3
 80072ea:	2b00      	cmp	r3, #0
 80072ec:	d000      	beq.n	80072f0 <UART_RxISR_8BIT_FIFOEN+0x138>
 80072ee:	e09d      	b.n	800742c <UART_RxISR_8BIT_FIFOEN+0x274>
 80072f0:	f3ef 8310 	mrs	r3, PRIMASK
 80072f4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80072f6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80072f8:	66bb      	str	r3, [r7, #104]	@ 0x68
 80072fa:	2301      	movs	r3, #1
 80072fc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80072fe:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007300:	f383 8810 	msr	PRIMASK, r3
 8007304:	46c0      	nop			@ (mov r8, r8)
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	681b      	ldr	r3, [r3, #0]
 800730a:	681a      	ldr	r2, [r3, #0]
 800730c:	687b      	ldr	r3, [r7, #4]
 800730e:	681b      	ldr	r3, [r3, #0]
 8007310:	4975      	ldr	r1, [pc, #468]	@ (80074e8 <UART_RxISR_8BIT_FIFOEN+0x330>)
 8007312:	400a      	ands	r2, r1
 8007314:	601a      	str	r2, [r3, #0]
 8007316:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8007318:	643b      	str	r3, [r7, #64]	@ 0x40
 800731a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800731c:	f383 8810 	msr	PRIMASK, r3
 8007320:	46c0      	nop			@ (mov r8, r8)
 8007322:	f3ef 8310 	mrs	r3, PRIMASK
 8007326:	647b      	str	r3, [r7, #68]	@ 0x44
 8007328:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800732a:	667b      	str	r3, [r7, #100]	@ 0x64
 800732c:	2301      	movs	r3, #1
 800732e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007330:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007332:	f383 8810 	msr	PRIMASK, r3
 8007336:	46c0      	nop			@ (mov r8, r8)
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	681b      	ldr	r3, [r3, #0]
 800733c:	689a      	ldr	r2, [r3, #8]
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	681b      	ldr	r3, [r3, #0]
 8007342:	496a      	ldr	r1, [pc, #424]	@ (80074ec <UART_RxISR_8BIT_FIFOEN+0x334>)
 8007344:	400a      	ands	r2, r1
 8007346:	609a      	str	r2, [r3, #8]
 8007348:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800734a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800734c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800734e:	f383 8810 	msr	PRIMASK, r3
 8007352:	46c0      	nop			@ (mov r8, r8)
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	228c      	movs	r2, #140	@ 0x8c
 8007358:	2120      	movs	r1, #32
 800735a:	5099      	str	r1, [r3, r2]
 800735c:	687b      	ldr	r3, [r7, #4]
 800735e:	2200      	movs	r2, #0
 8007360:	675a      	str	r2, [r3, #116]	@ 0x74
 8007362:	687b      	ldr	r3, [r7, #4]
 8007364:	2200      	movs	r2, #0
 8007366:	671a      	str	r2, [r3, #112]	@ 0x70
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	681b      	ldr	r3, [r3, #0]
 800736c:	4a60      	ldr	r2, [pc, #384]	@ (80074f0 <UART_RxISR_8BIT_FIFOEN+0x338>)
 800736e:	4293      	cmp	r3, r2
 8007370:	d024      	beq.n	80073bc <UART_RxISR_8BIT_FIFOEN+0x204>
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	681b      	ldr	r3, [r3, #0]
 8007376:	4a5f      	ldr	r2, [pc, #380]	@ (80074f4 <UART_RxISR_8BIT_FIFOEN+0x33c>)
 8007378:	4293      	cmp	r3, r2
 800737a:	d01f      	beq.n	80073bc <UART_RxISR_8BIT_FIFOEN+0x204>
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	681b      	ldr	r3, [r3, #0]
 8007380:	685a      	ldr	r2, [r3, #4]
 8007382:	2380      	movs	r3, #128	@ 0x80
 8007384:	041b      	lsls	r3, r3, #16
 8007386:	4013      	ands	r3, r2
 8007388:	d018      	beq.n	80073bc <UART_RxISR_8BIT_FIFOEN+0x204>
 800738a:	f3ef 8310 	mrs	r3, PRIMASK
 800738e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007390:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007392:	663b      	str	r3, [r7, #96]	@ 0x60
 8007394:	2301      	movs	r3, #1
 8007396:	633b      	str	r3, [r7, #48]	@ 0x30
 8007398:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800739a:	f383 8810 	msr	PRIMASK, r3
 800739e:	46c0      	nop			@ (mov r8, r8)
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	681a      	ldr	r2, [r3, #0]
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	681b      	ldr	r3, [r3, #0]
 80073aa:	4953      	ldr	r1, [pc, #332]	@ (80074f8 <UART_RxISR_8BIT_FIFOEN+0x340>)
 80073ac:	400a      	ands	r2, r1
 80073ae:	601a      	str	r2, [r3, #0]
 80073b0:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80073b2:	637b      	str	r3, [r7, #52]	@ 0x34
 80073b4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80073b6:	f383 8810 	msr	PRIMASK, r3
 80073ba:	46c0      	nop			@ (mov r8, r8)
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80073c0:	2b01      	cmp	r3, #1
 80073c2:	d12f      	bne.n	8007424 <UART_RxISR_8BIT_FIFOEN+0x26c>
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	2200      	movs	r2, #0
 80073c8:	66da      	str	r2, [r3, #108]	@ 0x6c
 80073ca:	f3ef 8310 	mrs	r3, PRIMASK
 80073ce:	623b      	str	r3, [r7, #32]
 80073d0:	6a3b      	ldr	r3, [r7, #32]
 80073d2:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80073d4:	2301      	movs	r3, #1
 80073d6:	627b      	str	r3, [r7, #36]	@ 0x24
 80073d8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80073da:	f383 8810 	msr	PRIMASK, r3
 80073de:	46c0      	nop			@ (mov r8, r8)
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	681b      	ldr	r3, [r3, #0]
 80073e4:	681a      	ldr	r2, [r3, #0]
 80073e6:	687b      	ldr	r3, [r7, #4]
 80073e8:	681b      	ldr	r3, [r3, #0]
 80073ea:	2110      	movs	r1, #16
 80073ec:	438a      	bics	r2, r1
 80073ee:	601a      	str	r2, [r3, #0]
 80073f0:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80073f2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80073f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80073f6:	f383 8810 	msr	PRIMASK, r3
 80073fa:	46c0      	nop			@ (mov r8, r8)
 80073fc:	687b      	ldr	r3, [r7, #4]
 80073fe:	681b      	ldr	r3, [r3, #0]
 8007400:	69db      	ldr	r3, [r3, #28]
 8007402:	2210      	movs	r2, #16
 8007404:	4013      	ands	r3, r2
 8007406:	2b10      	cmp	r3, #16
 8007408:	d103      	bne.n	8007412 <UART_RxISR_8BIT_FIFOEN+0x25a>
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	681b      	ldr	r3, [r3, #0]
 800740e:	2210      	movs	r2, #16
 8007410:	621a      	str	r2, [r3, #32]
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	225c      	movs	r2, #92	@ 0x5c
 8007416:	5a9a      	ldrh	r2, [r3, r2]
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	0011      	movs	r1, r2
 800741c:	0018      	movs	r0, r3
 800741e:	f7fe fdf9 	bl	8006014 <HAL_UARTEx_RxEventCallback>
 8007422:	e003      	b.n	800742c <UART_RxISR_8BIT_FIFOEN+0x274>
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	0018      	movs	r0, r3
 8007428:	f7fa fd04 	bl	8001e34 <HAL_UART_RxCpltCallback>
 800742c:	236e      	movs	r3, #110	@ 0x6e
 800742e:	18fb      	adds	r3, r7, r3
 8007430:	881b      	ldrh	r3, [r3, #0]
 8007432:	2b00      	cmp	r3, #0
 8007434:	d004      	beq.n	8007440 <UART_RxISR_8BIT_FIFOEN+0x288>
 8007436:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8007438:	2220      	movs	r2, #32
 800743a:	4013      	ands	r3, r2
 800743c:	d000      	beq.n	8007440 <UART_RxISR_8BIT_FIFOEN+0x288>
 800743e:	e6de      	b.n	80071fe <UART_RxISR_8BIT_FIFOEN+0x46>
 8007440:	205a      	movs	r0, #90	@ 0x5a
 8007442:	183b      	adds	r3, r7, r0
 8007444:	687a      	ldr	r2, [r7, #4]
 8007446:	215e      	movs	r1, #94	@ 0x5e
 8007448:	5a52      	ldrh	r2, [r2, r1]
 800744a:	801a      	strh	r2, [r3, #0]
 800744c:	0001      	movs	r1, r0
 800744e:	187b      	adds	r3, r7, r1
 8007450:	881b      	ldrh	r3, [r3, #0]
 8007452:	2b00      	cmp	r3, #0
 8007454:	d044      	beq.n	80074e0 <UART_RxISR_8BIT_FIFOEN+0x328>
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	2268      	movs	r2, #104	@ 0x68
 800745a:	5a9b      	ldrh	r3, [r3, r2]
 800745c:	187a      	adds	r2, r7, r1
 800745e:	8812      	ldrh	r2, [r2, #0]
 8007460:	429a      	cmp	r2, r3
 8007462:	d23d      	bcs.n	80074e0 <UART_RxISR_8BIT_FIFOEN+0x328>
 8007464:	f3ef 8310 	mrs	r3, PRIMASK
 8007468:	60bb      	str	r3, [r7, #8]
 800746a:	68bb      	ldr	r3, [r7, #8]
 800746c:	657b      	str	r3, [r7, #84]	@ 0x54
 800746e:	2301      	movs	r3, #1
 8007470:	60fb      	str	r3, [r7, #12]
 8007472:	68fb      	ldr	r3, [r7, #12]
 8007474:	f383 8810 	msr	PRIMASK, r3
 8007478:	46c0      	nop			@ (mov r8, r8)
 800747a:	687b      	ldr	r3, [r7, #4]
 800747c:	681b      	ldr	r3, [r3, #0]
 800747e:	689a      	ldr	r2, [r3, #8]
 8007480:	687b      	ldr	r3, [r7, #4]
 8007482:	681b      	ldr	r3, [r3, #0]
 8007484:	491d      	ldr	r1, [pc, #116]	@ (80074fc <UART_RxISR_8BIT_FIFOEN+0x344>)
 8007486:	400a      	ands	r2, r1
 8007488:	609a      	str	r2, [r3, #8]
 800748a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800748c:	613b      	str	r3, [r7, #16]
 800748e:	693b      	ldr	r3, [r7, #16]
 8007490:	f383 8810 	msr	PRIMASK, r3
 8007494:	46c0      	nop			@ (mov r8, r8)
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	4a19      	ldr	r2, [pc, #100]	@ (8007500 <UART_RxISR_8BIT_FIFOEN+0x348>)
 800749a:	675a      	str	r2, [r3, #116]	@ 0x74
 800749c:	f3ef 8310 	mrs	r3, PRIMASK
 80074a0:	617b      	str	r3, [r7, #20]
 80074a2:	697b      	ldr	r3, [r7, #20]
 80074a4:	653b      	str	r3, [r7, #80]	@ 0x50
 80074a6:	2301      	movs	r3, #1
 80074a8:	61bb      	str	r3, [r7, #24]
 80074aa:	69bb      	ldr	r3, [r7, #24]
 80074ac:	f383 8810 	msr	PRIMASK, r3
 80074b0:	46c0      	nop			@ (mov r8, r8)
 80074b2:	687b      	ldr	r3, [r7, #4]
 80074b4:	681b      	ldr	r3, [r3, #0]
 80074b6:	681a      	ldr	r2, [r3, #0]
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	681b      	ldr	r3, [r3, #0]
 80074bc:	2120      	movs	r1, #32
 80074be:	430a      	orrs	r2, r1
 80074c0:	601a      	str	r2, [r3, #0]
 80074c2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80074c4:	61fb      	str	r3, [r7, #28]
 80074c6:	69fb      	ldr	r3, [r7, #28]
 80074c8:	f383 8810 	msr	PRIMASK, r3
 80074cc:	46c0      	nop			@ (mov r8, r8)
 80074ce:	e007      	b.n	80074e0 <UART_RxISR_8BIT_FIFOEN+0x328>
 80074d0:	687b      	ldr	r3, [r7, #4]
 80074d2:	681b      	ldr	r3, [r3, #0]
 80074d4:	699a      	ldr	r2, [r3, #24]
 80074d6:	687b      	ldr	r3, [r7, #4]
 80074d8:	681b      	ldr	r3, [r3, #0]
 80074da:	2108      	movs	r1, #8
 80074dc:	430a      	orrs	r2, r1
 80074de:	619a      	str	r2, [r3, #24]
 80074e0:	46c0      	nop			@ (mov r8, r8)
 80074e2:	46bd      	mov	sp, r7
 80074e4:	b020      	add	sp, #128	@ 0x80
 80074e6:	bd80      	pop	{r7, pc}
 80074e8:	fffffeff 	.word	0xfffffeff
 80074ec:	effffffe 	.word	0xeffffffe
 80074f0:	40008000 	.word	0x40008000
 80074f4:	40008400 	.word	0x40008400
 80074f8:	fbffffff 	.word	0xfbffffff
 80074fc:	efffffff 	.word	0xefffffff
 8007500:	08006e11 	.word	0x08006e11

08007504 <UART_RxISR_16BIT_FIFOEN>:
 8007504:	b580      	push	{r7, lr}
 8007506:	b0a2      	sub	sp, #136	@ 0x88
 8007508:	af00      	add	r7, sp, #0
 800750a:	6078      	str	r0, [r7, #4]
 800750c:	2382      	movs	r3, #130	@ 0x82
 800750e:	18fb      	adds	r3, r7, r3
 8007510:	687a      	ldr	r2, [r7, #4]
 8007512:	2160      	movs	r1, #96	@ 0x60
 8007514:	5a52      	ldrh	r2, [r2, r1]
 8007516:	801a      	strh	r2, [r3, #0]
 8007518:	687b      	ldr	r3, [r7, #4]
 800751a:	681b      	ldr	r3, [r3, #0]
 800751c:	69db      	ldr	r3, [r3, #28]
 800751e:	2284      	movs	r2, #132	@ 0x84
 8007520:	18ba      	adds	r2, r7, r2
 8007522:	6013      	str	r3, [r2, #0]
 8007524:	687b      	ldr	r3, [r7, #4]
 8007526:	681b      	ldr	r3, [r3, #0]
 8007528:	681b      	ldr	r3, [r3, #0]
 800752a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	681b      	ldr	r3, [r3, #0]
 8007530:	689b      	ldr	r3, [r3, #8]
 8007532:	67bb      	str	r3, [r7, #120]	@ 0x78
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	228c      	movs	r2, #140	@ 0x8c
 8007538:	589b      	ldr	r3, [r3, r2]
 800753a:	2b22      	cmp	r3, #34	@ 0x22
 800753c:	d000      	beq.n	8007540 <UART_RxISR_16BIT_FIFOEN+0x3c>
 800753e:	e179      	b.n	8007834 <UART_RxISR_16BIT_FIFOEN+0x330>
 8007540:	2376      	movs	r3, #118	@ 0x76
 8007542:	18fb      	adds	r3, r7, r3
 8007544:	687a      	ldr	r2, [r7, #4]
 8007546:	2168      	movs	r1, #104	@ 0x68
 8007548:	5a52      	ldrh	r2, [r2, r1]
 800754a:	801a      	strh	r2, [r3, #0]
 800754c:	e11e      	b.n	800778c <UART_RxISR_16BIT_FIFOEN+0x288>
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	681b      	ldr	r3, [r3, #0]
 8007552:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8007554:	2174      	movs	r1, #116	@ 0x74
 8007556:	187b      	adds	r3, r7, r1
 8007558:	801a      	strh	r2, [r3, #0]
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800755e:	673b      	str	r3, [r7, #112]	@ 0x70
 8007560:	187b      	adds	r3, r7, r1
 8007562:	2282      	movs	r2, #130	@ 0x82
 8007564:	18ba      	adds	r2, r7, r2
 8007566:	881b      	ldrh	r3, [r3, #0]
 8007568:	8812      	ldrh	r2, [r2, #0]
 800756a:	4013      	ands	r3, r2
 800756c:	b29a      	uxth	r2, r3
 800756e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8007570:	801a      	strh	r2, [r3, #0]
 8007572:	687b      	ldr	r3, [r7, #4]
 8007574:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007576:	1c9a      	adds	r2, r3, #2
 8007578:	687b      	ldr	r3, [r7, #4]
 800757a:	659a      	str	r2, [r3, #88]	@ 0x58
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	225e      	movs	r2, #94	@ 0x5e
 8007580:	5a9b      	ldrh	r3, [r3, r2]
 8007582:	b29b      	uxth	r3, r3
 8007584:	3b01      	subs	r3, #1
 8007586:	b299      	uxth	r1, r3
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	225e      	movs	r2, #94	@ 0x5e
 800758c:	5299      	strh	r1, [r3, r2]
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	681b      	ldr	r3, [r3, #0]
 8007592:	69db      	ldr	r3, [r3, #28]
 8007594:	2184      	movs	r1, #132	@ 0x84
 8007596:	187a      	adds	r2, r7, r1
 8007598:	6013      	str	r3, [r2, #0]
 800759a:	187b      	adds	r3, r7, r1
 800759c:	681b      	ldr	r3, [r3, #0]
 800759e:	2207      	movs	r2, #7
 80075a0:	4013      	ands	r3, r2
 80075a2:	d04e      	beq.n	8007642 <UART_RxISR_16BIT_FIFOEN+0x13e>
 80075a4:	187b      	adds	r3, r7, r1
 80075a6:	681b      	ldr	r3, [r3, #0]
 80075a8:	2201      	movs	r2, #1
 80075aa:	4013      	ands	r3, r2
 80075ac:	d010      	beq.n	80075d0 <UART_RxISR_16BIT_FIFOEN+0xcc>
 80075ae:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 80075b0:	2380      	movs	r3, #128	@ 0x80
 80075b2:	005b      	lsls	r3, r3, #1
 80075b4:	4013      	ands	r3, r2
 80075b6:	d00b      	beq.n	80075d0 <UART_RxISR_16BIT_FIFOEN+0xcc>
 80075b8:	687b      	ldr	r3, [r7, #4]
 80075ba:	681b      	ldr	r3, [r3, #0]
 80075bc:	2201      	movs	r2, #1
 80075be:	621a      	str	r2, [r3, #32]
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	2290      	movs	r2, #144	@ 0x90
 80075c4:	589b      	ldr	r3, [r3, r2]
 80075c6:	2201      	movs	r2, #1
 80075c8:	431a      	orrs	r2, r3
 80075ca:	687b      	ldr	r3, [r7, #4]
 80075cc:	2190      	movs	r1, #144	@ 0x90
 80075ce:	505a      	str	r2, [r3, r1]
 80075d0:	2384      	movs	r3, #132	@ 0x84
 80075d2:	18fb      	adds	r3, r7, r3
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	2202      	movs	r2, #2
 80075d8:	4013      	ands	r3, r2
 80075da:	d00f      	beq.n	80075fc <UART_RxISR_16BIT_FIFOEN+0xf8>
 80075dc:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80075de:	2201      	movs	r2, #1
 80075e0:	4013      	ands	r3, r2
 80075e2:	d00b      	beq.n	80075fc <UART_RxISR_16BIT_FIFOEN+0xf8>
 80075e4:	687b      	ldr	r3, [r7, #4]
 80075e6:	681b      	ldr	r3, [r3, #0]
 80075e8:	2202      	movs	r2, #2
 80075ea:	621a      	str	r2, [r3, #32]
 80075ec:	687b      	ldr	r3, [r7, #4]
 80075ee:	2290      	movs	r2, #144	@ 0x90
 80075f0:	589b      	ldr	r3, [r3, r2]
 80075f2:	2204      	movs	r2, #4
 80075f4:	431a      	orrs	r2, r3
 80075f6:	687b      	ldr	r3, [r7, #4]
 80075f8:	2190      	movs	r1, #144	@ 0x90
 80075fa:	505a      	str	r2, [r3, r1]
 80075fc:	2384      	movs	r3, #132	@ 0x84
 80075fe:	18fb      	adds	r3, r7, r3
 8007600:	681b      	ldr	r3, [r3, #0]
 8007602:	2204      	movs	r2, #4
 8007604:	4013      	ands	r3, r2
 8007606:	d00f      	beq.n	8007628 <UART_RxISR_16BIT_FIFOEN+0x124>
 8007608:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800760a:	2201      	movs	r2, #1
 800760c:	4013      	ands	r3, r2
 800760e:	d00b      	beq.n	8007628 <UART_RxISR_16BIT_FIFOEN+0x124>
 8007610:	687b      	ldr	r3, [r7, #4]
 8007612:	681b      	ldr	r3, [r3, #0]
 8007614:	2204      	movs	r2, #4
 8007616:	621a      	str	r2, [r3, #32]
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	2290      	movs	r2, #144	@ 0x90
 800761c:	589b      	ldr	r3, [r3, r2]
 800761e:	2202      	movs	r2, #2
 8007620:	431a      	orrs	r2, r3
 8007622:	687b      	ldr	r3, [r7, #4]
 8007624:	2190      	movs	r1, #144	@ 0x90
 8007626:	505a      	str	r2, [r3, r1]
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	2290      	movs	r2, #144	@ 0x90
 800762c:	589b      	ldr	r3, [r3, r2]
 800762e:	2b00      	cmp	r3, #0
 8007630:	d007      	beq.n	8007642 <UART_RxISR_16BIT_FIFOEN+0x13e>
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	0018      	movs	r0, r3
 8007636:	f7fe fce5 	bl	8006004 <HAL_UART_ErrorCallback>
 800763a:	687b      	ldr	r3, [r7, #4]
 800763c:	2290      	movs	r2, #144	@ 0x90
 800763e:	2100      	movs	r1, #0
 8007640:	5099      	str	r1, [r3, r2]
 8007642:	687b      	ldr	r3, [r7, #4]
 8007644:	225e      	movs	r2, #94	@ 0x5e
 8007646:	5a9b      	ldrh	r3, [r3, r2]
 8007648:	b29b      	uxth	r3, r3
 800764a:	2b00      	cmp	r3, #0
 800764c:	d000      	beq.n	8007650 <UART_RxISR_16BIT_FIFOEN+0x14c>
 800764e:	e09d      	b.n	800778c <UART_RxISR_16BIT_FIFOEN+0x288>
 8007650:	f3ef 8310 	mrs	r3, PRIMASK
 8007654:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007656:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007658:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800765a:	2301      	movs	r3, #1
 800765c:	643b      	str	r3, [r7, #64]	@ 0x40
 800765e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8007660:	f383 8810 	msr	PRIMASK, r3
 8007664:	46c0      	nop			@ (mov r8, r8)
 8007666:	687b      	ldr	r3, [r7, #4]
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	681a      	ldr	r2, [r3, #0]
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	681b      	ldr	r3, [r3, #0]
 8007670:	4976      	ldr	r1, [pc, #472]	@ (800784c <UART_RxISR_16BIT_FIFOEN+0x348>)
 8007672:	400a      	ands	r2, r1
 8007674:	601a      	str	r2, [r3, #0]
 8007676:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007678:	647b      	str	r3, [r7, #68]	@ 0x44
 800767a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800767c:	f383 8810 	msr	PRIMASK, r3
 8007680:	46c0      	nop			@ (mov r8, r8)
 8007682:	f3ef 8310 	mrs	r3, PRIMASK
 8007686:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007688:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800768a:	66bb      	str	r3, [r7, #104]	@ 0x68
 800768c:	2301      	movs	r3, #1
 800768e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007690:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007692:	f383 8810 	msr	PRIMASK, r3
 8007696:	46c0      	nop			@ (mov r8, r8)
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	681b      	ldr	r3, [r3, #0]
 800769c:	689a      	ldr	r2, [r3, #8]
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	496b      	ldr	r1, [pc, #428]	@ (8007850 <UART_RxISR_16BIT_FIFOEN+0x34c>)
 80076a4:	400a      	ands	r2, r1
 80076a6:	609a      	str	r2, [r3, #8]
 80076a8:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80076aa:	653b      	str	r3, [r7, #80]	@ 0x50
 80076ac:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80076ae:	f383 8810 	msr	PRIMASK, r3
 80076b2:	46c0      	nop			@ (mov r8, r8)
 80076b4:	687b      	ldr	r3, [r7, #4]
 80076b6:	228c      	movs	r2, #140	@ 0x8c
 80076b8:	2120      	movs	r1, #32
 80076ba:	5099      	str	r1, [r3, r2]
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	2200      	movs	r2, #0
 80076c0:	675a      	str	r2, [r3, #116]	@ 0x74
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	2200      	movs	r2, #0
 80076c6:	671a      	str	r2, [r3, #112]	@ 0x70
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	681b      	ldr	r3, [r3, #0]
 80076cc:	4a61      	ldr	r2, [pc, #388]	@ (8007854 <UART_RxISR_16BIT_FIFOEN+0x350>)
 80076ce:	4293      	cmp	r3, r2
 80076d0:	d024      	beq.n	800771c <UART_RxISR_16BIT_FIFOEN+0x218>
 80076d2:	687b      	ldr	r3, [r7, #4]
 80076d4:	681b      	ldr	r3, [r3, #0]
 80076d6:	4a60      	ldr	r2, [pc, #384]	@ (8007858 <UART_RxISR_16BIT_FIFOEN+0x354>)
 80076d8:	4293      	cmp	r3, r2
 80076da:	d01f      	beq.n	800771c <UART_RxISR_16BIT_FIFOEN+0x218>
 80076dc:	687b      	ldr	r3, [r7, #4]
 80076de:	681b      	ldr	r3, [r3, #0]
 80076e0:	685a      	ldr	r2, [r3, #4]
 80076e2:	2380      	movs	r3, #128	@ 0x80
 80076e4:	041b      	lsls	r3, r3, #16
 80076e6:	4013      	ands	r3, r2
 80076e8:	d018      	beq.n	800771c <UART_RxISR_16BIT_FIFOEN+0x218>
 80076ea:	f3ef 8310 	mrs	r3, PRIMASK
 80076ee:	633b      	str	r3, [r7, #48]	@ 0x30
 80076f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80076f2:	667b      	str	r3, [r7, #100]	@ 0x64
 80076f4:	2301      	movs	r3, #1
 80076f6:	637b      	str	r3, [r7, #52]	@ 0x34
 80076f8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80076fa:	f383 8810 	msr	PRIMASK, r3
 80076fe:	46c0      	nop			@ (mov r8, r8)
 8007700:	687b      	ldr	r3, [r7, #4]
 8007702:	681b      	ldr	r3, [r3, #0]
 8007704:	681a      	ldr	r2, [r3, #0]
 8007706:	687b      	ldr	r3, [r7, #4]
 8007708:	681b      	ldr	r3, [r3, #0]
 800770a:	4954      	ldr	r1, [pc, #336]	@ (800785c <UART_RxISR_16BIT_FIFOEN+0x358>)
 800770c:	400a      	ands	r2, r1
 800770e:	601a      	str	r2, [r3, #0]
 8007710:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8007712:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007714:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007716:	f383 8810 	msr	PRIMASK, r3
 800771a:	46c0      	nop			@ (mov r8, r8)
 800771c:	687b      	ldr	r3, [r7, #4]
 800771e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007720:	2b01      	cmp	r3, #1
 8007722:	d12f      	bne.n	8007784 <UART_RxISR_16BIT_FIFOEN+0x280>
 8007724:	687b      	ldr	r3, [r7, #4]
 8007726:	2200      	movs	r2, #0
 8007728:	66da      	str	r2, [r3, #108]	@ 0x6c
 800772a:	f3ef 8310 	mrs	r3, PRIMASK
 800772e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007730:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007732:	663b      	str	r3, [r7, #96]	@ 0x60
 8007734:	2301      	movs	r3, #1
 8007736:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007738:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800773a:	f383 8810 	msr	PRIMASK, r3
 800773e:	46c0      	nop			@ (mov r8, r8)
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	681a      	ldr	r2, [r3, #0]
 8007746:	687b      	ldr	r3, [r7, #4]
 8007748:	681b      	ldr	r3, [r3, #0]
 800774a:	2110      	movs	r1, #16
 800774c:	438a      	bics	r2, r1
 800774e:	601a      	str	r2, [r3, #0]
 8007750:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8007752:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007754:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007756:	f383 8810 	msr	PRIMASK, r3
 800775a:	46c0      	nop			@ (mov r8, r8)
 800775c:	687b      	ldr	r3, [r7, #4]
 800775e:	681b      	ldr	r3, [r3, #0]
 8007760:	69db      	ldr	r3, [r3, #28]
 8007762:	2210      	movs	r2, #16
 8007764:	4013      	ands	r3, r2
 8007766:	2b10      	cmp	r3, #16
 8007768:	d103      	bne.n	8007772 <UART_RxISR_16BIT_FIFOEN+0x26e>
 800776a:	687b      	ldr	r3, [r7, #4]
 800776c:	681b      	ldr	r3, [r3, #0]
 800776e:	2210      	movs	r2, #16
 8007770:	621a      	str	r2, [r3, #32]
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	225c      	movs	r2, #92	@ 0x5c
 8007776:	5a9a      	ldrh	r2, [r3, r2]
 8007778:	687b      	ldr	r3, [r7, #4]
 800777a:	0011      	movs	r1, r2
 800777c:	0018      	movs	r0, r3
 800777e:	f7fe fc49 	bl	8006014 <HAL_UARTEx_RxEventCallback>
 8007782:	e003      	b.n	800778c <UART_RxISR_16BIT_FIFOEN+0x288>
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	0018      	movs	r0, r3
 8007788:	f7fa fb54 	bl	8001e34 <HAL_UART_RxCpltCallback>
 800778c:	2376      	movs	r3, #118	@ 0x76
 800778e:	18fb      	adds	r3, r7, r3
 8007790:	881b      	ldrh	r3, [r3, #0]
 8007792:	2b00      	cmp	r3, #0
 8007794:	d006      	beq.n	80077a4 <UART_RxISR_16BIT_FIFOEN+0x2a0>
 8007796:	2384      	movs	r3, #132	@ 0x84
 8007798:	18fb      	adds	r3, r7, r3
 800779a:	681b      	ldr	r3, [r3, #0]
 800779c:	2220      	movs	r2, #32
 800779e:	4013      	ands	r3, r2
 80077a0:	d000      	beq.n	80077a4 <UART_RxISR_16BIT_FIFOEN+0x2a0>
 80077a2:	e6d4      	b.n	800754e <UART_RxISR_16BIT_FIFOEN+0x4a>
 80077a4:	205e      	movs	r0, #94	@ 0x5e
 80077a6:	183b      	adds	r3, r7, r0
 80077a8:	687a      	ldr	r2, [r7, #4]
 80077aa:	215e      	movs	r1, #94	@ 0x5e
 80077ac:	5a52      	ldrh	r2, [r2, r1]
 80077ae:	801a      	strh	r2, [r3, #0]
 80077b0:	0001      	movs	r1, r0
 80077b2:	187b      	adds	r3, r7, r1
 80077b4:	881b      	ldrh	r3, [r3, #0]
 80077b6:	2b00      	cmp	r3, #0
 80077b8:	d044      	beq.n	8007844 <UART_RxISR_16BIT_FIFOEN+0x340>
 80077ba:	687b      	ldr	r3, [r7, #4]
 80077bc:	2268      	movs	r2, #104	@ 0x68
 80077be:	5a9b      	ldrh	r3, [r3, r2]
 80077c0:	187a      	adds	r2, r7, r1
 80077c2:	8812      	ldrh	r2, [r2, #0]
 80077c4:	429a      	cmp	r2, r3
 80077c6:	d23d      	bcs.n	8007844 <UART_RxISR_16BIT_FIFOEN+0x340>
 80077c8:	f3ef 8310 	mrs	r3, PRIMASK
 80077cc:	60fb      	str	r3, [r7, #12]
 80077ce:	68fb      	ldr	r3, [r7, #12]
 80077d0:	65bb      	str	r3, [r7, #88]	@ 0x58
 80077d2:	2301      	movs	r3, #1
 80077d4:	613b      	str	r3, [r7, #16]
 80077d6:	693b      	ldr	r3, [r7, #16]
 80077d8:	f383 8810 	msr	PRIMASK, r3
 80077dc:	46c0      	nop			@ (mov r8, r8)
 80077de:	687b      	ldr	r3, [r7, #4]
 80077e0:	681b      	ldr	r3, [r3, #0]
 80077e2:	689a      	ldr	r2, [r3, #8]
 80077e4:	687b      	ldr	r3, [r7, #4]
 80077e6:	681b      	ldr	r3, [r3, #0]
 80077e8:	491d      	ldr	r1, [pc, #116]	@ (8007860 <UART_RxISR_16BIT_FIFOEN+0x35c>)
 80077ea:	400a      	ands	r2, r1
 80077ec:	609a      	str	r2, [r3, #8]
 80077ee:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80077f0:	617b      	str	r3, [r7, #20]
 80077f2:	697b      	ldr	r3, [r7, #20]
 80077f4:	f383 8810 	msr	PRIMASK, r3
 80077f8:	46c0      	nop			@ (mov r8, r8)
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	4a19      	ldr	r2, [pc, #100]	@ (8007864 <UART_RxISR_16BIT_FIFOEN+0x360>)
 80077fe:	675a      	str	r2, [r3, #116]	@ 0x74
 8007800:	f3ef 8310 	mrs	r3, PRIMASK
 8007804:	61bb      	str	r3, [r7, #24]
 8007806:	69bb      	ldr	r3, [r7, #24]
 8007808:	657b      	str	r3, [r7, #84]	@ 0x54
 800780a:	2301      	movs	r3, #1
 800780c:	61fb      	str	r3, [r7, #28]
 800780e:	69fb      	ldr	r3, [r7, #28]
 8007810:	f383 8810 	msr	PRIMASK, r3
 8007814:	46c0      	nop			@ (mov r8, r8)
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	681b      	ldr	r3, [r3, #0]
 800781a:	681a      	ldr	r2, [r3, #0]
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	2120      	movs	r1, #32
 8007822:	430a      	orrs	r2, r1
 8007824:	601a      	str	r2, [r3, #0]
 8007826:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8007828:	623b      	str	r3, [r7, #32]
 800782a:	6a3b      	ldr	r3, [r7, #32]
 800782c:	f383 8810 	msr	PRIMASK, r3
 8007830:	46c0      	nop			@ (mov r8, r8)
 8007832:	e007      	b.n	8007844 <UART_RxISR_16BIT_FIFOEN+0x340>
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	681b      	ldr	r3, [r3, #0]
 8007838:	699a      	ldr	r2, [r3, #24]
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	681b      	ldr	r3, [r3, #0]
 800783e:	2108      	movs	r1, #8
 8007840:	430a      	orrs	r2, r1
 8007842:	619a      	str	r2, [r3, #24]
 8007844:	46c0      	nop			@ (mov r8, r8)
 8007846:	46bd      	mov	sp, r7
 8007848:	b022      	add	sp, #136	@ 0x88
 800784a:	bd80      	pop	{r7, pc}
 800784c:	fffffeff 	.word	0xfffffeff
 8007850:	effffffe 	.word	0xeffffffe
 8007854:	40008000 	.word	0x40008000
 8007858:	40008400 	.word	0x40008400
 800785c:	fbffffff 	.word	0xfbffffff
 8007860:	efffffff 	.word	0xefffffff
 8007864:	08006fe5 	.word	0x08006fe5

08007868 <HAL_UARTEx_WakeupCallback>:
 8007868:	b580      	push	{r7, lr}
 800786a:	b082      	sub	sp, #8
 800786c:	af00      	add	r7, sp, #0
 800786e:	6078      	str	r0, [r7, #4]
 8007870:	46c0      	nop			@ (mov r8, r8)
 8007872:	46bd      	mov	sp, r7
 8007874:	b002      	add	sp, #8
 8007876:	bd80      	pop	{r7, pc}

08007878 <HAL_UARTEx_RxFifoFullCallback>:
 8007878:	b580      	push	{r7, lr}
 800787a:	b082      	sub	sp, #8
 800787c:	af00      	add	r7, sp, #0
 800787e:	6078      	str	r0, [r7, #4]
 8007880:	46c0      	nop			@ (mov r8, r8)
 8007882:	46bd      	mov	sp, r7
 8007884:	b002      	add	sp, #8
 8007886:	bd80      	pop	{r7, pc}

08007888 <HAL_UARTEx_TxFifoEmptyCallback>:
 8007888:	b580      	push	{r7, lr}
 800788a:	b082      	sub	sp, #8
 800788c:	af00      	add	r7, sp, #0
 800788e:	6078      	str	r0, [r7, #4]
 8007890:	46c0      	nop			@ (mov r8, r8)
 8007892:	46bd      	mov	sp, r7
 8007894:	b002      	add	sp, #8
 8007896:	bd80      	pop	{r7, pc}

08007898 <HAL_UARTEx_DisableFifoMode>:
 8007898:	b580      	push	{r7, lr}
 800789a:	b084      	sub	sp, #16
 800789c:	af00      	add	r7, sp, #0
 800789e:	6078      	str	r0, [r7, #4]
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	2284      	movs	r2, #132	@ 0x84
 80078a4:	5c9b      	ldrb	r3, [r3, r2]
 80078a6:	2b01      	cmp	r3, #1
 80078a8:	d101      	bne.n	80078ae <HAL_UARTEx_DisableFifoMode+0x16>
 80078aa:	2302      	movs	r3, #2
 80078ac:	e027      	b.n	80078fe <HAL_UARTEx_DisableFifoMode+0x66>
 80078ae:	687b      	ldr	r3, [r7, #4]
 80078b0:	2284      	movs	r2, #132	@ 0x84
 80078b2:	2101      	movs	r1, #1
 80078b4:	5499      	strb	r1, [r3, r2]
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	2288      	movs	r2, #136	@ 0x88
 80078ba:	2124      	movs	r1, #36	@ 0x24
 80078bc:	5099      	str	r1, [r3, r2]
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	681b      	ldr	r3, [r3, #0]
 80078c2:	681b      	ldr	r3, [r3, #0]
 80078c4:	60fb      	str	r3, [r7, #12]
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	681b      	ldr	r3, [r3, #0]
 80078ca:	681a      	ldr	r2, [r3, #0]
 80078cc:	687b      	ldr	r3, [r7, #4]
 80078ce:	681b      	ldr	r3, [r3, #0]
 80078d0:	2101      	movs	r1, #1
 80078d2:	438a      	bics	r2, r1
 80078d4:	601a      	str	r2, [r3, #0]
 80078d6:	68fb      	ldr	r3, [r7, #12]
 80078d8:	4a0b      	ldr	r2, [pc, #44]	@ (8007908 <HAL_UARTEx_DisableFifoMode+0x70>)
 80078da:	4013      	ands	r3, r2
 80078dc:	60fb      	str	r3, [r7, #12]
 80078de:	687b      	ldr	r3, [r7, #4]
 80078e0:	2200      	movs	r2, #0
 80078e2:	665a      	str	r2, [r3, #100]	@ 0x64
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	681b      	ldr	r3, [r3, #0]
 80078e8:	68fa      	ldr	r2, [r7, #12]
 80078ea:	601a      	str	r2, [r3, #0]
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	2288      	movs	r2, #136	@ 0x88
 80078f0:	2120      	movs	r1, #32
 80078f2:	5099      	str	r1, [r3, r2]
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	2284      	movs	r2, #132	@ 0x84
 80078f8:	2100      	movs	r1, #0
 80078fa:	5499      	strb	r1, [r3, r2]
 80078fc:	2300      	movs	r3, #0
 80078fe:	0018      	movs	r0, r3
 8007900:	46bd      	mov	sp, r7
 8007902:	b004      	add	sp, #16
 8007904:	bd80      	pop	{r7, pc}
 8007906:	46c0      	nop			@ (mov r8, r8)
 8007908:	dfffffff 	.word	0xdfffffff

0800790c <HAL_UARTEx_SetTxFifoThreshold>:
 800790c:	b580      	push	{r7, lr}
 800790e:	b084      	sub	sp, #16
 8007910:	af00      	add	r7, sp, #0
 8007912:	6078      	str	r0, [r7, #4]
 8007914:	6039      	str	r1, [r7, #0]
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	2284      	movs	r2, #132	@ 0x84
 800791a:	5c9b      	ldrb	r3, [r3, r2]
 800791c:	2b01      	cmp	r3, #1
 800791e:	d101      	bne.n	8007924 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 8007920:	2302      	movs	r3, #2
 8007922:	e02e      	b.n	8007982 <HAL_UARTEx_SetTxFifoThreshold+0x76>
 8007924:	687b      	ldr	r3, [r7, #4]
 8007926:	2284      	movs	r2, #132	@ 0x84
 8007928:	2101      	movs	r1, #1
 800792a:	5499      	strb	r1, [r3, r2]
 800792c:	687b      	ldr	r3, [r7, #4]
 800792e:	2288      	movs	r2, #136	@ 0x88
 8007930:	2124      	movs	r1, #36	@ 0x24
 8007932:	5099      	str	r1, [r3, r2]
 8007934:	687b      	ldr	r3, [r7, #4]
 8007936:	681b      	ldr	r3, [r3, #0]
 8007938:	681b      	ldr	r3, [r3, #0]
 800793a:	60fb      	str	r3, [r7, #12]
 800793c:	687b      	ldr	r3, [r7, #4]
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	681a      	ldr	r2, [r3, #0]
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	2101      	movs	r1, #1
 8007948:	438a      	bics	r2, r1
 800794a:	601a      	str	r2, [r3, #0]
 800794c:	687b      	ldr	r3, [r7, #4]
 800794e:	681b      	ldr	r3, [r3, #0]
 8007950:	689b      	ldr	r3, [r3, #8]
 8007952:	00db      	lsls	r3, r3, #3
 8007954:	08d9      	lsrs	r1, r3, #3
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	681b      	ldr	r3, [r3, #0]
 800795a:	683a      	ldr	r2, [r7, #0]
 800795c:	430a      	orrs	r2, r1
 800795e:	609a      	str	r2, [r3, #8]
 8007960:	687b      	ldr	r3, [r7, #4]
 8007962:	0018      	movs	r0, r3
 8007964:	f000 f854 	bl	8007a10 <UARTEx_SetNbDataToProcess>
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	681b      	ldr	r3, [r3, #0]
 800796c:	68fa      	ldr	r2, [r7, #12]
 800796e:	601a      	str	r2, [r3, #0]
 8007970:	687b      	ldr	r3, [r7, #4]
 8007972:	2288      	movs	r2, #136	@ 0x88
 8007974:	2120      	movs	r1, #32
 8007976:	5099      	str	r1, [r3, r2]
 8007978:	687b      	ldr	r3, [r7, #4]
 800797a:	2284      	movs	r2, #132	@ 0x84
 800797c:	2100      	movs	r1, #0
 800797e:	5499      	strb	r1, [r3, r2]
 8007980:	2300      	movs	r3, #0
 8007982:	0018      	movs	r0, r3
 8007984:	46bd      	mov	sp, r7
 8007986:	b004      	add	sp, #16
 8007988:	bd80      	pop	{r7, pc}
	...

0800798c <HAL_UARTEx_SetRxFifoThreshold>:
 800798c:	b580      	push	{r7, lr}
 800798e:	b084      	sub	sp, #16
 8007990:	af00      	add	r7, sp, #0
 8007992:	6078      	str	r0, [r7, #4]
 8007994:	6039      	str	r1, [r7, #0]
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	2284      	movs	r2, #132	@ 0x84
 800799a:	5c9b      	ldrb	r3, [r3, r2]
 800799c:	2b01      	cmp	r3, #1
 800799e:	d101      	bne.n	80079a4 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 80079a0:	2302      	movs	r3, #2
 80079a2:	e02f      	b.n	8007a04 <HAL_UARTEx_SetRxFifoThreshold+0x78>
 80079a4:	687b      	ldr	r3, [r7, #4]
 80079a6:	2284      	movs	r2, #132	@ 0x84
 80079a8:	2101      	movs	r1, #1
 80079aa:	5499      	strb	r1, [r3, r2]
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	2288      	movs	r2, #136	@ 0x88
 80079b0:	2124      	movs	r1, #36	@ 0x24
 80079b2:	5099      	str	r1, [r3, r2]
 80079b4:	687b      	ldr	r3, [r7, #4]
 80079b6:	681b      	ldr	r3, [r3, #0]
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	60fb      	str	r3, [r7, #12]
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	681b      	ldr	r3, [r3, #0]
 80079c0:	681a      	ldr	r2, [r3, #0]
 80079c2:	687b      	ldr	r3, [r7, #4]
 80079c4:	681b      	ldr	r3, [r3, #0]
 80079c6:	2101      	movs	r1, #1
 80079c8:	438a      	bics	r2, r1
 80079ca:	601a      	str	r2, [r3, #0]
 80079cc:	687b      	ldr	r3, [r7, #4]
 80079ce:	681b      	ldr	r3, [r3, #0]
 80079d0:	689b      	ldr	r3, [r3, #8]
 80079d2:	4a0e      	ldr	r2, [pc, #56]	@ (8007a0c <HAL_UARTEx_SetRxFifoThreshold+0x80>)
 80079d4:	4013      	ands	r3, r2
 80079d6:	0019      	movs	r1, r3
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	681b      	ldr	r3, [r3, #0]
 80079dc:	683a      	ldr	r2, [r7, #0]
 80079de:	430a      	orrs	r2, r1
 80079e0:	609a      	str	r2, [r3, #8]
 80079e2:	687b      	ldr	r3, [r7, #4]
 80079e4:	0018      	movs	r0, r3
 80079e6:	f000 f813 	bl	8007a10 <UARTEx_SetNbDataToProcess>
 80079ea:	687b      	ldr	r3, [r7, #4]
 80079ec:	681b      	ldr	r3, [r3, #0]
 80079ee:	68fa      	ldr	r2, [r7, #12]
 80079f0:	601a      	str	r2, [r3, #0]
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	2288      	movs	r2, #136	@ 0x88
 80079f6:	2120      	movs	r1, #32
 80079f8:	5099      	str	r1, [r3, r2]
 80079fa:	687b      	ldr	r3, [r7, #4]
 80079fc:	2284      	movs	r2, #132	@ 0x84
 80079fe:	2100      	movs	r1, #0
 8007a00:	5499      	strb	r1, [r3, r2]
 8007a02:	2300      	movs	r3, #0
 8007a04:	0018      	movs	r0, r3
 8007a06:	46bd      	mov	sp, r7
 8007a08:	b004      	add	sp, #16
 8007a0a:	bd80      	pop	{r7, pc}
 8007a0c:	f1ffffff 	.word	0xf1ffffff

08007a10 <UARTEx_SetNbDataToProcess>:
 8007a10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007a12:	b085      	sub	sp, #20
 8007a14:	af00      	add	r7, sp, #0
 8007a16:	6078      	str	r0, [r7, #4]
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8007a1c:	2b00      	cmp	r3, #0
 8007a1e:	d108      	bne.n	8007a32 <UARTEx_SetNbDataToProcess+0x22>
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	226a      	movs	r2, #106	@ 0x6a
 8007a24:	2101      	movs	r1, #1
 8007a26:	5299      	strh	r1, [r3, r2]
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	2268      	movs	r2, #104	@ 0x68
 8007a2c:	2101      	movs	r1, #1
 8007a2e:	5299      	strh	r1, [r3, r2]
 8007a30:	e043      	b.n	8007aba <UARTEx_SetNbDataToProcess+0xaa>
 8007a32:	260f      	movs	r6, #15
 8007a34:	19bb      	adds	r3, r7, r6
 8007a36:	2208      	movs	r2, #8
 8007a38:	701a      	strb	r2, [r3, #0]
 8007a3a:	200e      	movs	r0, #14
 8007a3c:	183b      	adds	r3, r7, r0
 8007a3e:	2208      	movs	r2, #8
 8007a40:	701a      	strb	r2, [r3, #0]
 8007a42:	687b      	ldr	r3, [r7, #4]
 8007a44:	681b      	ldr	r3, [r3, #0]
 8007a46:	689b      	ldr	r3, [r3, #8]
 8007a48:	0e5b      	lsrs	r3, r3, #25
 8007a4a:	b2da      	uxtb	r2, r3
 8007a4c:	240d      	movs	r4, #13
 8007a4e:	193b      	adds	r3, r7, r4
 8007a50:	2107      	movs	r1, #7
 8007a52:	400a      	ands	r2, r1
 8007a54:	701a      	strb	r2, [r3, #0]
 8007a56:	687b      	ldr	r3, [r7, #4]
 8007a58:	681b      	ldr	r3, [r3, #0]
 8007a5a:	689b      	ldr	r3, [r3, #8]
 8007a5c:	0f5b      	lsrs	r3, r3, #29
 8007a5e:	b2da      	uxtb	r2, r3
 8007a60:	250c      	movs	r5, #12
 8007a62:	197b      	adds	r3, r7, r5
 8007a64:	2107      	movs	r1, #7
 8007a66:	400a      	ands	r2, r1
 8007a68:	701a      	strb	r2, [r3, #0]
 8007a6a:	183b      	adds	r3, r7, r0
 8007a6c:	781b      	ldrb	r3, [r3, #0]
 8007a6e:	197a      	adds	r2, r7, r5
 8007a70:	7812      	ldrb	r2, [r2, #0]
 8007a72:	4914      	ldr	r1, [pc, #80]	@ (8007ac4 <UARTEx_SetNbDataToProcess+0xb4>)
 8007a74:	5c8a      	ldrb	r2, [r1, r2]
 8007a76:	435a      	muls	r2, r3
 8007a78:	0010      	movs	r0, r2
 8007a7a:	197b      	adds	r3, r7, r5
 8007a7c:	781b      	ldrb	r3, [r3, #0]
 8007a7e:	4a12      	ldr	r2, [pc, #72]	@ (8007ac8 <UARTEx_SetNbDataToProcess+0xb8>)
 8007a80:	5cd3      	ldrb	r3, [r2, r3]
 8007a82:	0019      	movs	r1, r3
 8007a84:	f7f8 fbd0 	bl	8000228 <__divsi3>
 8007a88:	0003      	movs	r3, r0
 8007a8a:	b299      	uxth	r1, r3
 8007a8c:	687b      	ldr	r3, [r7, #4]
 8007a8e:	226a      	movs	r2, #106	@ 0x6a
 8007a90:	5299      	strh	r1, [r3, r2]
 8007a92:	19bb      	adds	r3, r7, r6
 8007a94:	781b      	ldrb	r3, [r3, #0]
 8007a96:	193a      	adds	r2, r7, r4
 8007a98:	7812      	ldrb	r2, [r2, #0]
 8007a9a:	490a      	ldr	r1, [pc, #40]	@ (8007ac4 <UARTEx_SetNbDataToProcess+0xb4>)
 8007a9c:	5c8a      	ldrb	r2, [r1, r2]
 8007a9e:	435a      	muls	r2, r3
 8007aa0:	0010      	movs	r0, r2
 8007aa2:	193b      	adds	r3, r7, r4
 8007aa4:	781b      	ldrb	r3, [r3, #0]
 8007aa6:	4a08      	ldr	r2, [pc, #32]	@ (8007ac8 <UARTEx_SetNbDataToProcess+0xb8>)
 8007aa8:	5cd3      	ldrb	r3, [r2, r3]
 8007aaa:	0019      	movs	r1, r3
 8007aac:	f7f8 fbbc 	bl	8000228 <__divsi3>
 8007ab0:	0003      	movs	r3, r0
 8007ab2:	b299      	uxth	r1, r3
 8007ab4:	687b      	ldr	r3, [r7, #4]
 8007ab6:	2268      	movs	r2, #104	@ 0x68
 8007ab8:	5299      	strh	r1, [r3, r2]
 8007aba:	46c0      	nop			@ (mov r8, r8)
 8007abc:	46bd      	mov	sp, r7
 8007abe:	b005      	add	sp, #20
 8007ac0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007ac2:	46c0      	nop			@ (mov r8, r8)
 8007ac4:	080081f0 	.word	0x080081f0
 8007ac8:	080081f8 	.word	0x080081f8

08007acc <__utoa>:
 8007acc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007ace:	000c      	movs	r4, r1
 8007ad0:	0016      	movs	r6, r2
 8007ad2:	b08d      	sub	sp, #52	@ 0x34
 8007ad4:	2225      	movs	r2, #37	@ 0x25
 8007ad6:	0007      	movs	r7, r0
 8007ad8:	4915      	ldr	r1, [pc, #84]	@ (8007b30 <__utoa+0x64>)
 8007ada:	a802      	add	r0, sp, #8
 8007adc:	f000 f86e 	bl	8007bbc <memcpy>
 8007ae0:	1e62      	subs	r2, r4, #1
 8007ae2:	1eb3      	subs	r3, r6, #2
 8007ae4:	2500      	movs	r5, #0
 8007ae6:	9201      	str	r2, [sp, #4]
 8007ae8:	2b22      	cmp	r3, #34	@ 0x22
 8007aea:	d904      	bls.n	8007af6 <__utoa+0x2a>
 8007aec:	7025      	strb	r5, [r4, #0]
 8007aee:	002c      	movs	r4, r5
 8007af0:	0020      	movs	r0, r4
 8007af2:	b00d      	add	sp, #52	@ 0x34
 8007af4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007af6:	0038      	movs	r0, r7
 8007af8:	0031      	movs	r1, r6
 8007afa:	f7f8 fb91 	bl	8000220 <__aeabi_uidivmod>
 8007afe:	000b      	movs	r3, r1
 8007b00:	aa02      	add	r2, sp, #8
 8007b02:	5cd3      	ldrb	r3, [r2, r3]
 8007b04:	9a01      	ldr	r2, [sp, #4]
 8007b06:	0029      	movs	r1, r5
 8007b08:	3501      	adds	r5, #1
 8007b0a:	5553      	strb	r3, [r2, r5]
 8007b0c:	003b      	movs	r3, r7
 8007b0e:	0007      	movs	r7, r0
 8007b10:	429e      	cmp	r6, r3
 8007b12:	d9f0      	bls.n	8007af6 <__utoa+0x2a>
 8007b14:	2300      	movs	r3, #0
 8007b16:	0022      	movs	r2, r4
 8007b18:	5563      	strb	r3, [r4, r5]
 8007b1a:	000b      	movs	r3, r1
 8007b1c:	1ac8      	subs	r0, r1, r3
 8007b1e:	4283      	cmp	r3, r0
 8007b20:	dde6      	ble.n	8007af0 <__utoa+0x24>
 8007b22:	7810      	ldrb	r0, [r2, #0]
 8007b24:	5ce5      	ldrb	r5, [r4, r3]
 8007b26:	7015      	strb	r5, [r2, #0]
 8007b28:	54e0      	strb	r0, [r4, r3]
 8007b2a:	3201      	adds	r2, #1
 8007b2c:	3b01      	subs	r3, #1
 8007b2e:	e7f5      	b.n	8007b1c <__utoa+0x50>
 8007b30:	08008200 	.word	0x08008200

08007b34 <utoa>:
 8007b34:	b510      	push	{r4, lr}
 8007b36:	f7ff ffc9 	bl	8007acc <__utoa>
 8007b3a:	bd10      	pop	{r4, pc}

08007b3c <memset>:
 8007b3c:	0003      	movs	r3, r0
 8007b3e:	1882      	adds	r2, r0, r2
 8007b40:	4293      	cmp	r3, r2
 8007b42:	d100      	bne.n	8007b46 <memset+0xa>
 8007b44:	4770      	bx	lr
 8007b46:	7019      	strb	r1, [r3, #0]
 8007b48:	3301      	adds	r3, #1
 8007b4a:	e7f9      	b.n	8007b40 <memset+0x4>

08007b4c <strncpy>:
 8007b4c:	0003      	movs	r3, r0
 8007b4e:	b530      	push	{r4, r5, lr}
 8007b50:	001d      	movs	r5, r3
 8007b52:	2a00      	cmp	r2, #0
 8007b54:	d006      	beq.n	8007b64 <strncpy+0x18>
 8007b56:	780c      	ldrb	r4, [r1, #0]
 8007b58:	3a01      	subs	r2, #1
 8007b5a:	3301      	adds	r3, #1
 8007b5c:	702c      	strb	r4, [r5, #0]
 8007b5e:	3101      	adds	r1, #1
 8007b60:	2c00      	cmp	r4, #0
 8007b62:	d1f5      	bne.n	8007b50 <strncpy+0x4>
 8007b64:	2100      	movs	r1, #0
 8007b66:	189a      	adds	r2, r3, r2
 8007b68:	4293      	cmp	r3, r2
 8007b6a:	d100      	bne.n	8007b6e <strncpy+0x22>
 8007b6c:	bd30      	pop	{r4, r5, pc}
 8007b6e:	7019      	strb	r1, [r3, #0]
 8007b70:	3301      	adds	r3, #1
 8007b72:	e7f9      	b.n	8007b68 <strncpy+0x1c>

08007b74 <__libc_init_array>:
 8007b74:	b570      	push	{r4, r5, r6, lr}
 8007b76:	2600      	movs	r6, #0
 8007b78:	4c0c      	ldr	r4, [pc, #48]	@ (8007bac <__libc_init_array+0x38>)
 8007b7a:	4d0d      	ldr	r5, [pc, #52]	@ (8007bb0 <__libc_init_array+0x3c>)
 8007b7c:	1b64      	subs	r4, r4, r5
 8007b7e:	10a4      	asrs	r4, r4, #2
 8007b80:	42a6      	cmp	r6, r4
 8007b82:	d109      	bne.n	8007b98 <__libc_init_array+0x24>
 8007b84:	2600      	movs	r6, #0
 8007b86:	f000 f823 	bl	8007bd0 <_init>
 8007b8a:	4c0a      	ldr	r4, [pc, #40]	@ (8007bb4 <__libc_init_array+0x40>)
 8007b8c:	4d0a      	ldr	r5, [pc, #40]	@ (8007bb8 <__libc_init_array+0x44>)
 8007b8e:	1b64      	subs	r4, r4, r5
 8007b90:	10a4      	asrs	r4, r4, #2
 8007b92:	42a6      	cmp	r6, r4
 8007b94:	d105      	bne.n	8007ba2 <__libc_init_array+0x2e>
 8007b96:	bd70      	pop	{r4, r5, r6, pc}
 8007b98:	00b3      	lsls	r3, r6, #2
 8007b9a:	58eb      	ldr	r3, [r5, r3]
 8007b9c:	4798      	blx	r3
 8007b9e:	3601      	adds	r6, #1
 8007ba0:	e7ee      	b.n	8007b80 <__libc_init_array+0xc>
 8007ba2:	00b3      	lsls	r3, r6, #2
 8007ba4:	58eb      	ldr	r3, [r5, r3]
 8007ba6:	4798      	blx	r3
 8007ba8:	3601      	adds	r6, #1
 8007baa:	e7f2      	b.n	8007b92 <__libc_init_array+0x1e>
 8007bac:	08008230 	.word	0x08008230
 8007bb0:	08008230 	.word	0x08008230
 8007bb4:	08008234 	.word	0x08008234
 8007bb8:	08008230 	.word	0x08008230

08007bbc <memcpy>:
 8007bbc:	2300      	movs	r3, #0
 8007bbe:	b510      	push	{r4, lr}
 8007bc0:	429a      	cmp	r2, r3
 8007bc2:	d100      	bne.n	8007bc6 <memcpy+0xa>
 8007bc4:	bd10      	pop	{r4, pc}
 8007bc6:	5ccc      	ldrb	r4, [r1, r3]
 8007bc8:	54c4      	strb	r4, [r0, r3]
 8007bca:	3301      	adds	r3, #1
 8007bcc:	e7f8      	b.n	8007bc0 <memcpy+0x4>
	...

08007bd0 <_init>:
 8007bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007bd2:	46c0      	nop			@ (mov r8, r8)
 8007bd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007bd6:	bc08      	pop	{r3}
 8007bd8:	469e      	mov	lr, r3
 8007bda:	4770      	bx	lr

08007bdc <_fini>:
 8007bdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007bde:	46c0      	nop			@ (mov r8, r8)
 8007be0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007be2:	bc08      	pop	{r3}
 8007be4:	469e      	mov	lr, r3
 8007be6:	4770      	bx	lr
